..
   Generated automatically by cpp2rst

.. highlight:: c
.. role:: red
.. role:: green
.. role:: param


.. _triqs_tprf__eliashberg_product:

triqs_tprf::eliashberg_product
==============================

*#include <triqs_tprf.hpp>*



**Synopsis**

 .. rst-class:: cppsynopsis

       | g_wk_t :red:`eliashberg_product` (chi_wk_vt :param:`Gamma_pp`,
       |                     g_wk_vt :param:`g_wk`,
       |                     g_wk_vt :param:`delta_wk`)





Linearized Eliashberg product via summation

    Computes the linearized Eliashberg product in the singlet/triplet channel given by

    .. math::
        \Delta^{\mathrm{s/t}, \mathrm{out}}_{\bar{a}\bar{b}}(i\nu,\mathbf{k})
        =
        -\frac{1}{2N_\mathbf{k} \beta}\sum_{i\nu'}\sum_{\mathbf{k}'}
        \Gamma^{\mathrm{s/t}}_{c\bar{a}d\bar{b}}(i\nu - i\nu',\mathbf{k}-\mathbf{k}')
        \\
        \times
        G_{c\bar{e}}(i\nu',\mathbf{k}')
        G_{d\bar{f}}(-i\nu',-\mathbf{k}')
        \Delta^{\mathrm{s/t}, \mathrm{in}}_{\bar{e}\bar{f}}(i\nu',\mathbf{k}')\,,

    by summation.





Parameters
^^^^^^^^^^

 * :param:`Gamma_pp` particle-particle vertex :math:`\Gamma^{\mathrm{s/t}}_{a\bar{b}c\bar{d}}(i\nu_n,\mathbf{k})`

 * :param:`g_wk` single particle Green's function :math:`G_{a\bar{b}}(i\nu_n,\mathbf{k})`

 * :param:`delta_wk` superconducting gap :math:`\Delta^{\mathrm{s/t}, \mathrm{in}}_{\bar{a}\bar{b}}(i\nu_n,\mathbf{k})`


Returns
^^^^^^^

Gives the result of the product :math:`\Delta^{\mathrm{s/t}, \mathrm{out}}`