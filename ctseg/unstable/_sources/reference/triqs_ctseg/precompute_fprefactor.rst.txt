..
   Generated automatically by cpp2rst

.. highlight:: c
.. role:: red
.. role:: green
.. role:: param
.. role:: cppbrief


.. _precompute_fprefactor:

triqs_ctseg::precompute_fprefactor
==================================

Defined in header <**>

.. code-block:: c

    class precompute_fprefactor;

Object which precomputes the prefactor :math:`I_{o_1}(\tau)` for the improved estimator


:math:`I_{o_1}` is used in the computation of the improved estimator :math:`F_{o_1}(\tau)`. It is defined as:


.. math::
		I_{o_1}(\tau) = \int_0^\beta d\bar{\tau} \sum_{o_2} \hat{\mathcal{U}}_{o_1,o_2}(\tau-\bar{\tau}) n_{o_2}(\bar{\tau})

..

 This object models the concept of mc_generic auxiliary precomputation.

:math:`I_{o_1}` is used in the computation of the improved estimator :math:`F_{o_1}(\tau)`. It is defined as:


.. math::
		I_{o_1}(\tau) = \int_0^\beta d\bar{\tau} \sum_{o_2} \hat{\mathcal{U}}_{o_1,o_2}(\tau-\bar{\tau}) n_{o_2}(\bar{\tau})

..

 This object models the concept of mc_generic auxiliary precomputation.
.. note::
    In the measurement all times are accessed for a given orbital and not vice versa; Storage in vector of maps instead of map of vectors keeps the individual maps small

Public members
--------------

+-------------+-------------------------------------+--+
| params      | const triqs_ctseg::qmc_parameters * |  |
+-------------+-------------------------------------+--+
| config      | const triqs_ctseg::configuration *  |  |
+-------------+-------------------------------------+--+
| fprefactors | std::vector<fprefactormap_t>        |  |
+-------------+-------------------------------------+--+


Member types
------------

+-----------------+--+
| fprefactor_t    |  |
+-----------------+--+
| fprefactormap_t |  |
+-----------------+--+


Member functions
----------------

+--------------------------------------------------------+-----------------------------------------------------+
| :ref:`constructor <precompute_fprefactor_constructor>` |                                                     |
+--------------------------------------------------------+-----------------------------------------------------+
| :ref:`get <precompute_fprefactor_get>`                 | accessor                                            |
+--------------------------------------------------------+-----------------------------------------------------+
| :ref:`operator() <precompute_fprefactor_operator()>`   | call operator which performs the actual computation |
+--------------------------------------------------------+-----------------------------------------------------+

.. toctree::
    :hidden:

    precompute_fprefactor/constructor
    precompute_fprefactor/get
    precompute_fprefactor/operator()