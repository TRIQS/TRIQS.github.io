..
   Generated automatically by cpp2rst

.. highlight:: c


.. _solver_core:

solver_core
=============

Main solver class



   Worker which runs the quantum Monte-Carlo simulation.

**Synopsis**:

.. code-block:: c

    class solver_core;


   Worker which runs the quantum Monte-Carlo simulation.

Member functions
----------------

+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| Member function                                              | Comment                                                                                                                                            |
+==============================================================+====================================================================================================================================================+
| :ref:`sanity_check <solver_core_sanity_check>`               |                                                                                                                                                    |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`solve <solver_core_solve>`                             | solve method: starts the Metropolis algorithm                                                                                                      |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`G0_iw <solver_core_G0_iw>`                             | Weiss field :math:`\mathcal{G}^{\sigma}_{0,ab}(i\omega)`                                                                                           |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`D0_iw <solver_core_D0_iw>`                             | Density-density retarded interactions :math:`\mathcal{D}^{\sigma\sigma'}_{0,ab}(i\Omega)`                                                          |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Jperp_iw <solver_core_Jperp_iw>`                       | Dynamical spin-spin interaction, perpendicual components: :math:`\mathcal{J}_\perp(i\Omega)`                                                       |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Delta_tau <solver_core_Delta_tau>`                     | Hybridization function :math:`\Delta^\sigma_{ab}(\tau)`                                                                                            |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`K_tau <solver_core_K_tau>`                             | Dynamical kernel :math:`K(\tau)`                                                                                                                   |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Kprime_tau <solver_core_Kprime_tau>`                   | Derivative of the dynamical kernel :math:`\partial_\tau K(\tau)`                                                                                   |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Kperpprime_tau <solver_core_Kperpprime_tau>`           | Derivative of the dynamical kernel :math:`\partial_\tau K_\perp(\tau)`                                                                             |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Jperp_tau <solver_core_Jperp_tau>`                     | Dynamical spin-spin interactions :math:`\mathcal{J}_\perp(\tau)`                                                                                   |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`G_tau <solver_core_G_tau>`                             | Impurity Green's function :math:`G^\sigma_{ab}(\tau)` (see :ref:`measure_gt`)                                                                      |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`F_tau <solver_core_F_tau>`                             | Improved estimator function :math:`F^\sigma_{ab}(\tau)` (see :ref:`measure_gt`)                                                                    |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`nn_tau <solver_core_nn_tau>`                           | Density-density correlation function :math:`\langle n^\sigma_{a}(\tau) n^{\sigma'}_{b}(0)\rangle` (see :ref:`measure_nnt`)                         |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`G_iw <solver_core_G_iw>`                               | Impurity Green's function :math:`G^\sigma_{ab}(i\omega)` (see :ref:`measure_gw`)                                                                   |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`F_iw <solver_core_F_iw>`                               | Improved estimator function :math:`F^\sigma_{ab}(i\omega)` (see :ref:`measure_gw`)                                                                 |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Sigma_iw <solver_core_Sigma_iw>`                       | Impurity self-energy :math:`\Sigma^\sigma_{ab}(i\omega)` (see :ref:`measure_gw`)                                                                   |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`nn_iw <solver_core_nn_iw>`                             | Density-density correlation function :math:`\mathrm{FT}\left[\langle n^\sigma_{a}(\tau) n^{\sigma'}_{b}(0)\rangle\right]` (see :ref:`measure_nnw`) |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`G_2w <solver_core_G_2w>`                               | 3-point correlation function :math:`\chi^{\sigma\sigma'}_{abc}(i\omega,i\Omega)` (see :ref:`measure_g2w`)                                          |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`F_2w <solver_core_F_2w>`                               | 3-point improved estimator (see :ref:`measure_g2w`)                                                                                                |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`G_3w <solver_core_G_3w>`                               | 4-point correlation function :math:`\chi^{\sigma\sigma'}_{abcd}(i\omega,i\omega',i\Omega)` (see :ref:`measure_g3w`)                                |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`F_3w <solver_core_F_3w>`                               | 4-point improved estimator (see :ref:`measure_g3w`)                                                                                                |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`G_l <solver_core_G_l>`                                 | Impurity Green's function in Legendre basis :math:`G^\sigma_{ab}(n)` (see :ref:`measure_gl`)                                                       |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`F_l <solver_core_F_l>`                                 | Improved estimator function in Legendre basis :math:`G^\sigma_{ab}(n)` (see :ref:`measure_gl`)                                                     |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`chipm_tau <solver_core_chipm_tau>`                     | Spin spin correlation function :math:`\langle s_+(\tau) s_-(0)\rangle` (see :ref:`measure_chipmt`)                                                 |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`nn <solver_core_nn>`                                   | density-density static correlation :math:`\langle n^\sigma_a n^{\sigma'}_b \rangle` (see :ref:`measure_nn`)                                        |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`histogram <solver_core_histogram>`                     | histogram of hybridization perturbation order (see :ref:`measure_hist`)                                                                            |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`histogram_composite <solver_core_histogram_composite>` | histogram of :math:`\mathcal{J}_\perp` perturbation order (see :ref:`measure_hist_composite`)                                                      |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`state_histogram <solver_core_state_histogram>`         | histogram of the boundary states of the trace (see :ref:`measure_statehist`)                                                                       |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`average_sign <solver_core_average_sign>`               | Monte Carlo sign                                                                                                                                   |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`percent_done <solver_core_percent_done>`               |                                                                                                                                                    |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`constructor <solver_core_constructor>`                 | constructor                                                                                                                                        |
+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+

.. toctree::
    :hidden:

    solver_core/sanity_check
    solver_core/solve
    solver_core/G0_iw
    solver_core/D0_iw
    solver_core/Jperp_iw
    solver_core/Delta_tau
    solver_core/K_tau
    solver_core/Kprime_tau
    solver_core/Kperpprime_tau
    solver_core/Jperp_tau
    solver_core/G_tau
    solver_core/F_tau
    solver_core/nn_tau
    solver_core/G_iw
    solver_core/F_iw
    solver_core/Sigma_iw
    solver_core/nn_iw
    solver_core/G_2w
    solver_core/F_2w
    solver_core/G_3w
    solver_core/F_3w
    solver_core/G_l
    solver_core/F_l
    solver_core/chipm_tau
    solver_core/nn
    solver_core/histogram
    solver_core/histogram_composite
    solver_core/state_histogram
    solver_core/average_sign
    solver_core/percent_done
    solver_core/constructor