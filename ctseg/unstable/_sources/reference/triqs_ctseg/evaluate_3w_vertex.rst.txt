..
   Generated automatically by cpp2rst

.. highlight:: c


.. _evaluate_3w_vertex:

evaluate_3w_vertex
==================

**Synopsis**:

.. code-block:: c

    void evaluate_3w_vertex (const block_gf<triqs::gfs::imfreq> & gw, const
   block_gf<triqs::gfs::imfreq> & fw, const triqs_ctseg::gf_3w_container_t & g3w, const
   triqs_ctseg::gf_3w_container_t & f3w, bool measure_g3w, bool measure_f3w, std::string
   fname)

Evaluation of the 4-leg vertex for the 4-point correlation function


Documentation
-------------


If one or two of the three-frequency correlation functions have been measured and the parameter ``evaluate_vertex`` is set to ``true``, the following vertex function is computed at the end of the simulation:



.. math::
		\gamma_{\sigma\sigma'}(i\omega,i\omega',i\nu) = \frac{G^{2,\text{con}}_{\sigma\sigma'}(i\omega,i\omega',i\nu)}{G_\sigma(i\omega)G_\sigma(i\omega+i\nu)G_\sigma'(i\omega'+i\nu)G_\sigma'(i\omega')}

..

Depending on which two-frequency correlation functions have been measured, the connected part is computed in either of the following ways:




.. math::
		G^{2,\text{con}}_{\sigma}(i\omega,i\omega',i\nu) = G^{2}_{\sigma\sigma'}(i\omega,i\omega',i\nu) - G^{2,\text{disc}}_{\sigma\sigma'}(i\omega,i\omega',i\nu)

..




.. math::
		G^{2,\text{con}}_{\sigma}(i\omega,i\omega',i\nu) = G_\sigma(i\omega) F_{\sigma\sigma'}^{2}(i\omega,i\omega',i\nu)-F_\sigma(i\omega) G_{\sigma\sigma'}^{2}(i\omega,i\omega',i\nu)

..




.. math::
		G^{2,\text{con}}_{\sigma}(i\omega,i\omega',i\nu) = \Big[G_\sigma(i\omega) F_{\sigma\sigma'}^{2}(i\omega,i\omega',i\nu)-F_\sigma(i\omega) G_{\sigma}^{2,\text{disc}}(i\omega,i\omega',i\nu)\Big]/[1+F_\sigma(i\omega)].

..

The disconnected part of the correlation function has been defined as



.. math::
		G^{2,\text{disc}}_{\sigma\sigma'}(i\omega,i\omega',i\nu) = \beta G_{\sigma}(i\omega)G_\sigma'(i\omega')\delta_{\nu}-\beta G_\sigma(i\omega) G_\sigma(i\omega+i\nu)\delta_{\omega,\omega'}\delta_{\sigma\sigma'}.

..