..
   Generated automatically by cpp2rst

.. highlight:: c
.. role:: red
.. role:: green
.. role:: param
.. role:: cppbrief


.. _measure_gw:

triqs_ctseg::measure_gw
=======================

Defined in header <**>

.. code-block:: c

    class measure_gw;

measures Fourier transform of :math:`G(\tau)` and :math:`F(\tau)`


Measurement of


.. math::
		X^\sigma_a(i\omega_n) = \int_0^\beta d\tau\, e^{i\omega_n\tau} X^\sigma_a(\tau)

..


 with :math:`X=G,F` defined in :ref:`measure_gt`.

The switches for these measurements are ``measure_gw`` and ``measure_fw``. The number of frequencies is specified through ``n_w``.

This implementation uses :ref:`precompute_fprefactor`.

The self-energy is automatically computed at the end of the simulations as

.. math::
		\Sigma_{ab}^{\sigma}(i\omega_{n})=\sum_c F_{ac}^{\sigma}(i\omega_{n})\left[G^{-1}\right]_{cb}^{\sigma}(i\omega_{n})

..


 if the measurement of the improved estimator is turned on, or

.. math::
		\Sigma_{ab}^{\sigma}(i\omega_{n})\equiv\left[\mathcal{G}^{-1}\right]_{ab}^{\sigma}(i\omega_{n})-\left[G^{-1}\right]_{ab}^{\sigma}(i\omega_{n})

..


 otherwise.

Measurement of


.. math::
		X^\sigma_a(i\omega_n) = \int_0^\beta d\tau\, e^{i\omega_n\tau} X^\sigma_a(\tau)

..


 with :math:`X=G,F` defined in :ref:`measure_gt`.

The switches for these measurements are ``measure_gw`` and ``measure_fw``. The number of frequencies is specified through ``n_w``.

This implementation uses :ref:`precompute_fprefactor`.

The self-energy is automatically computed at the end of the simulations as

.. math::
		\Sigma_{ab}^{\sigma}(i\omega_{n})=\sum_c F_{ac}^{\sigma}(i\omega_{n})\left[G^{-1}\right]_{cb}^{\sigma}(i\omega_{n})

..


 if the measurement of the improved estimator is turned on, or

.. math::
		\Sigma_{ab}^{\sigma}(i\omega_{n})\equiv\left[\mathcal{G}^{-1}\right]_{ab}^{\sigma}(i\omega_{n})-\left[G^{-1}\right]_{ab}^{\sigma}(i\omega_{n})

..


 otherwise.

Public members
--------------

+------------------+-----------------------------------------+--+
| params           | const triqs_ctseg::qmc_parameters *     |  |
+------------------+-----------------------------------------+--+
| p                | const triqs_ctseg::solve_parameters_t * |  |
+------------------+-----------------------------------------+--+
| config           | const triqs_ctseg::configuration *      |  |
+------------------+-----------------------------------------+--+
| gw               | block_gf<triqs::gfs::imfreq> &          |  |
+------------------+-----------------------------------------+--+
| fw               | block_gf<triqs::gfs::imfreq> &          |  |
+------------------+-----------------------------------------+--+
| sigmaw           | block_gf<triqs::gfs::imfreq> &          |  |
+------------------+-----------------------------------------+--+
| g0w              | block_gf_const_view<triqs::gfs::imfreq> |  |
+------------------+-----------------------------------------+--+
| fprefactor       | std::shared_ptr<precompute_fprefactor>  |  |
+------------------+-----------------------------------------+--+
| n_w              | int                                     |  |
+------------------+-----------------------------------------+--+
| beta             | double                                  |  |
+------------------+-----------------------------------------+--+
| Z                | double                                  |  |
+------------------+-----------------------------------------+--+
| c_exp            | vector<triqs::gfs::dcomplex>            |  |
+------------------+-----------------------------------------+--+
| cdag_exp         | vector<triqs::gfs::dcomplex>            |  |
+------------------+-----------------------------------------+--+
| c_inner_index    | vector<int>                             |  |
+------------------+-----------------------------------------+--+
| cdag_inner_index | vector<int>                             |  |
+------------------+-----------------------------------------+--+


Member functions
----------------

+-----------------------------------------------------+---------------------------------+
| :ref:`constructor <measure_gw_constructor>`         | constructor                     |
+-----------------------------------------------------+---------------------------------+
| :ref:`accumulate <measure_gw_accumulate>`           | accumulate the Green's function |
+-----------------------------------------------------+---------------------------------+
| :ref:`collect_results <measure_gw_collect_results>` | reduce and normalize G          |
+-----------------------------------------------------+---------------------------------+

.. toctree::
    :hidden:

    measure_gw/constructor
    measure_gw/accumulate
    measure_gw/collect_results