{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "66ed49b1-6fba-4233-ba97-64ac1168ac53",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-22T22:10:48.062204Z",
     "iopub.status.busy": "2022-06-22T22:10:48.061927Z",
     "iopub.status.idle": "2022-06-22T22:10:49.634943Z",
     "shell.execute_reply": "2022-06-22T22:10:49.634442Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Warning: could not identify MPI environment!\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Starting serial run at: 2022-06-22 18:10:49.113936\n"
     ]
    },
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'triqs_maxent'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Input \u001b[0;32mIn [1]\u001b[0m, in \u001b[0;36m<cell line: 19>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mtriqs\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mlattice\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mutils\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m TB_from_wannier90, k_space_path\n\u001b[1;32m     18\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01msolid_dmft\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mpostprocessing\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mplot_correlated_bands\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpcb\u001b[39;00m\n\u001b[0;32m---> 19\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01msolid_dmft\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mpostprocessing\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mmaxent_sigma\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01msigma_maxent\u001b[39;00m\n",
      "File \u001b[0;32m~/opt/triqs/lib/python3.9/site-packages/solid_dmft/postprocessing/maxent_sigma.py:41\u001b[0m, in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     38\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mnumpy\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mnp\u001b[39;00m\n\u001b[1;32m     40\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mtriqs\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mutility\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m mpi\n\u001b[0;32m---> 41\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mtriqs_maxent\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01msigma_continuator\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m InversionSigmaContinuator, DirectSigmaContinuator\n\u001b[1;32m     42\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mtriqs_maxent\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01melementwise_maxent\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m PoormanMaxEnt\n\u001b[1;32m     43\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mtriqs_maxent\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01momega_meshes\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m HyperbolicOmegaMesh\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'triqs_maxent'"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "import os\n",
    "import sys\n",
    "from itertools import product\n",
    "import numpy as np\n",
    "np.set_printoptions(precision=4,suppress=True, linewidth=140)\n",
    "import scipy\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from h5 import HDFArchive\n",
    "from triqs.gf import *\n",
    "from triqs.gf.descriptors import Fourier, Omega\n",
    "from triqs.plot.mpl_interface import plt,oplot\n",
    "from triqs.lattice.utils import TB_from_wannier90, k_space_path\n",
    "\n",
    "import solid_dmft.postprocessing.plot_correlated_bands as pcb\n",
    "import solid_dmft.postprocessing.maxent_sigma as sigma_maxent"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "52106262-34be-453f-9c5a-ec0ce36f2a03",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-22T22:10:49.637873Z",
     "iopub.status.busy": "2022-06-22T22:10:49.637646Z",
     "iopub.status.idle": "2022-06-22T22:10:49.642301Z",
     "shell.execute_reply": "2022-06-22T22:10:49.641650Z"
    }
   },
   "outputs": [],
   "source": [
    "fermi = 12.7367\n",
    "# w90 information\n",
    "w90_dict = {'w90_path': './data/mlwf/',\n",
    "            'w90_seed': 'lco',\n",
    "            'add_spin': False, 'add_lambda': None,\n",
    "            'n_orb': 1,\n",
    "            'mu': fermi,\n",
    "            'orbital_order_w90': [0]}\n",
    "\n",
    "# plotting options\n",
    "plot_dict = {'colorscheme_bands': 'coolwarm', 'colorscheme_kslice': 'coolwarm', 'proj_on_orb': None, 'vmin': 0.0}\n",
    "\n",
    "tb_bands = {'bands_path': [('G', 'S\\''), ('S\\'', 'X'), ('X', 'G'), ('G', 'Z')], 'n_k': 50,\n",
    "            'G': [ 0.0,  0.0,  0.0], 'S\\'': [0.25, -0.25, 0.25], 'X': [0.0,  0.0,  0.5 ], 'Z': [0.25,  0.25, -0.25] }"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ff82ed9-ae73-41f1-aa60-ee25c169dc1a",
   "metadata": {},
   "source": [
    "# Phase diagram exploration\n",
    "\n",
    "You might have noticed that our resulting spectral function of La2CuO4 does not show the experimental measured gap of ~2 eV [PRB 37 7506 (1988)](https://journals.aps.org/prb/abstract/10.1103/PhysRevB.37.7506), and is indeed metallic. As shown in [doi.org/10.1103/PhysRevB.91.125142](https://doi.org/10.1103/PhysRevB.91.125142) the static Coulomb interaction is too small to open a gap in our current model. To capture interactions beyond the static limit one has to solve the problem with a frequency-dependent interaction, or one can artificially increase the interaction strength to model the same behavior. For simplicity, we will follow here the latter route and change the interaction parameter $U$ to find the MIT and a correct gap of ~2 eV.\n",
    "\n",
    "\n",
    "<i class=\"fa fa-gear fa-2x\" style=\"color: #186391\"></i>&nbsp; increase the value of $U$ in the DMFT input file `dmft_config.ini` and the `jobname` to find the gapped regime of the metal-insulator transition. Compare the k-integrated spectral function.\n",
    "\n",
    "Tip: to speed up convergence, you can load a previous self-energy by using the config flag `load_sigma=True` and pointing to a previous calculation with `path_to_sigma=b10-U3.6/lco_wannier.h5`. \n",
    "\n",
    "Tip: you can copy whole jupyter cells from the first notebook here and just change the $U=3.6$ eV to whatever $U$ you used"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f652e889-f1e7-400e-9ceb-480f78317e6b",
   "metadata": {},
   "source": [
    "<i class=\"fa fa-gear fa-2x\" style=\"color: #186391\"></i>&nbsp; plot both the self-energy and $G(\\tau)$ of the impurity. What are the characteristics of an insulating self-energy / Green's function?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45f6503d-bc75-4ae4-aa96-e1d5211ad3f0",
   "metadata": {},
   "source": [
    "<i class=\"fa fa-gear fa-2x\" style=\"color: #186391\"></i>&nbsp; How do these features translate into the real frequency self-energy? Run MaxEnt for the insulating self-energy and compare:\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea86d7fa-0e9e-479b-ac4f-607d253196f8",
   "metadata": {},
   "source": [
    "<i class=\"fa fa-gear fa-2x\" style=\"color: #186391\"></i>&nbsp; calculate the spectral function of the insulating solution and compare the gap to the experimentally observed gap of ~2 ev"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f5a6df6-f76f-4ff4-835b-83d480bbfee8",
   "metadata": {},
   "source": [
    "The original W90 band is plotted in red and the spectral function is shown as intensity plot. The quasiparticle band at low frequency should have disappeared together with any incoherent contribution. Strong intensities at larger energies should appear, marking the Hubbard sattelite features forming the Hubbard bands. To visualize this effect better we now want to calculate the k-summed spectral function $A(\\omega)$, which we can compare with the DOS from W90.\n",
    "\n",
    "Tip: Just copy the code from the first notebook to calculate $A(\\omega)$ and plot it afterwards."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
