itertools
#########



Classes
-------

.. table::
   :widths: 40 60


   +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------+
   | :ref:`iterator_facade <itertools__iterator_facade>`                                                                                                                           |                                                                    |
   +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------+
   | :ref:`iterator_facade\<Iter,Value,std::forward_iterator_tag,Reference,Difference\> <itertools__iterator_facadeLTIter_Value_std__forward_iterator_tag_Reference_DifferenceGT>` | CRTP base class for various iterator types in itertools.           |
   +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------+
   | :ref:`sentinel_t <itertools__sentinel_t>`                                                                                                                                     | Generic sentinel type that can be used to mark the end of a range. |
   +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------+
   | :ref:`range <itertools__range>`                                                                                                                                               | A lazy range of integers that mimics a Python range.               |
   +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------+

.. toctree::
    :hidden:

    itertools/iterator_facade
    itertools/iterator_facadeLTIter,Value,std::forward_iterator_tag,Reference,DifferenceGT
    itertools/sentinel_t
    itertools/range


Functions
---------

.. table::
   :widths: 40 60


   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`make_sentinel <itertools__make_sentinel>`                   | Create an itertools::sentinel_t from an iterator using template type deduction.                          |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`enumerate <itertools__enumerate>`                           | Lazy-enumerate a given range (similar to Python's enumerate).                                            |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`product <itertools__product>`                               | Lazy-multiply a given number of ranges by forming their cartesian product.                               |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`make_product <itertools__make_product>`                     | Create a cartesian product range from an array of ranges.                                                |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`product_range <itertools__product_range>`                   | Create a cartesian product range of integer ranges from given integers.                                  |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`foreach <itertools__foreach>`                               | Apply a function to every element of an integer itertools::range.                                        |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`distance <itertools__distance>`                             | Calculate the distance between two iterators.                                                            |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`make_vector_from_range <itertools__make_vector_from_range>` | Create a vector from a range.                                                                            |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`chunk_range <itertools__chunk_range>`                       | Given an integer range `[first, last)`, divide it as equally as possible into N chunks.                  |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`slice <itertools__slice>`                                   | Lazy-slice a given range.                                                                                |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`stride <itertools__stride>`                                 | Lazy-stride through a given range.                                                                       |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`transform <itertools__transform>`                           | Lazy-transform a given range by applying a unary callable object to every element of the original range. |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
   | :ref:`zip <itertools__zip>`                                       | Lazy-zip ranges together (similar to Python's zip).                                                      |
   +-------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+

.. toctree::
    :hidden:

    itertools/make_sentinel
    itertools/enumerate
    itertools/product
    itertools/make_product
    itertools/product_range
    itertools/foreach
    itertools/distance
    itertools/make_vector_from_range
    itertools/chunk_range
    itertools/slice
    itertools/stride
    itertools/transform
    itertools/zip