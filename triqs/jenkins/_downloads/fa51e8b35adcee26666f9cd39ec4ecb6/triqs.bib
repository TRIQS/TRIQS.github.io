@article{TRIQS2015,
abstract = {We present the TRIQS library, a Toolbox for Research on Interacting Quantum Systems. It is an open-source, computational physics library providing a framework for the quick development of applications in the field of many-body quantum physics, and in particular, strongly-correlated electronic systems. It supplies components to develop codes in a modern, concise and efficient way: e.g. Green's function containers, a generic Monte Carlo class, and simple interfaces to HDF5. TRIQS is a C++/Python library that can be used from either language. It is distributed under the GNU General Public License (GPLv3). State-of-the-art applications based on the library, such as modern quantum many-body solvers and interfaces between density-functional-theory codes and dynamical mean-field theory (DMFT) codes are distributed along with it. Program summary Program title: TRIQS Catalogue identifier: AEWR-v1-0 Program summary URL:http://cpc.cs.qub.ac.uk/summaries/AEWR-v1-0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: GNU General Public License (GPLv3) No. of lines in distributed program, including test data, etc.: 93228 No. of bytes in distributed program, including test data, etc.: 2979367 Distribution format: tar.gz Programming language: C++/Python. Computer: Any architecture with suitable compilers including PCs and clusters. Operating system: Unix, Linux, OSX. RAM: Highly problem-dependent Classification: 7.3, 20. External routines: cmake, mpi, boost, FFTW, GMP, BLAS, LAPACK, HDF5, NumPy, SciPy, h5py, mpi4py, mako. Nature of problem: Need for a modern programming framework to quickly write simple, efficient and higher-level code applicable to the studies of strongly-correlated electron systems. Solution method: We present a C++/Python open-source computational library that provides high-level abstractions for common objects and various tools in the field of quantum many-body physics, thus forming a framework for developing applications. Running time: Tests take less than a minute. Otherwise it is highly problem dependent (from minutes to several days).},
archivePrefix = {arXiv},
arxivId = {1504.01952},
author = {Parcollet, Olivier and Ferrero, Michel and Ayral, Thomas and Hafermann, Hartmut and Krivenko, Igor and Messio, Laura and Seth, Priyanka},
doi = {10.1016/j.cpc.2015.04.023},
eprint = {1504.01952},
issn = {00104655},
journal = {Computer Physics Communications},
keywords = {C++,DMFT,Many-body physics,Monte Carlo,Python,Strongly-correlated systems,ab initio calculations},
month = {nov},
pages = {398--415},
title = {{TRIQS: A toolbox for research on interacting quantum systems}},
volume = {196},
year = {2015}
}
@article{DFTTools2016,
author = {Aichhorn, Markus and Pourovskii, Leonid and Seth, Priyanka and Vildosola, Veronica and Zingl, Manuel and Peil, Oleg E. and Deng, Xiaoyu and Mravlje, Jernej and Kraberger, Gernot J. and Martins, Cyril and Ferrero, Michel and Parcollet, Olivier},
doi = {10.1016/j.cpc.2016.03.014},
issn = {00104655},
journal = {Computer Physics Communications},
month = {jul},
pages = {200--208},
title = {{TRIQS/DFTTools: A TRIQS application for ab initio calculations of correlated materials}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S0010465516300728},
volume = {204},
year = {2016}
}
@article{CTHYB2016,
author = {Seth, Priyanka and Krivenko, Igor and Ferrero, Michel and Parcollet, Olivier},
doi = {10.1016/j.cpc.2015.10.023},
issn = {00104655},
journal = {Computer Physics Communications},
month = {mar},
pages = {274--284},
title = {{TRIQS/CTHYB: A continuous-time quantum Monte Carlo hybridisation expansion solver for quantum impurity problems}},
volume = {200},
year = {2016}
}
@software{TPRF321,
author = {Hugo U.R. Strand and Nils Wentzell and Stefan Kaeser and Yann in 't Veld and Dylan Simon and Alexander Hampel and Malte Roesner and Erik van Loon and Olivier Parcollet and Olivier Gingras and Philipp Dumitrescu and Thomas Hahn and Manuel Zingl},
title = {TRIQS/tprf: Version 3.2.1},
month = sep,
year = 2023,
publisher = {Zenodo},
version = {3.2.1},
doi = {10.5281/zenodo.8364721},
url = {https://doi.org/10.5281/zenodo.8364721}
}
@article{SolidDMFT2022,
doi = {10.21105/joss.04623},
url = {https://doi.org/10.21105/joss.04623},
year = {2022},
publisher = {The Open Journal},
volume = {7},
number = {77},
pages = {4623},
author = {Maximilian E. Merkel and Alberto Carta and Sophie Beck and Alexander Hampel},
title = {solid_dmft: gray-boxing DFT+DMFT materials simulations with TRIQS},
journal = {Journal of Open Source Software}
}
@article{DLR2022,
abstract = {We present an efficient basis for imaginary time Green's functions based on a low rank decomposition of the spectral Lehmann representation. The basis functions are simply a set of well-chosen exponentials, so the corresponding expansion may be thought of as a discrete form of the Lehmann representation using an effective spectral density which is a sum of $\delta$ functions. The basis is determined only by an upper bound on the product $\beta \omega_{\max}$, with $\beta$ the inverse temperature and $\omega_{\max}$ an energy cutoff, and a user-defined error tolerance $\epsilon$. The number $r$ of basis functions scales as $\mathcal{O}\left(\log(\beta \omega_{\max}) \log (1/\epsilon)\right)$. The discrete Lehmann representation of a particular imaginary time Green's function can be recovered by interpolation at a set of $r$ imaginary time nodes. Both the basis functions and the interpolation nodes can be obtained rapidly using standard numerical linear algebra routines. Due to the simple form of the basis, the discrete Lehmann representation of a Green's function can be explicitly transformed to the Matsubara frequency domain, or obtained directly by interpolation on a Matsubara frequency grid. We benchmark the efficiency of the representation on simple cases, and with a high precision solution of the Sachdev-Ye-Kitaev equation at low temperature. We compare our approach with the related intermediate representation method, and introduce an improved algorithm to build the intermediate representation basis and a corresponding sampling grid.},
archivePrefix = {arXiv},
arxivId = {2107.13094},
author = {Kaye, Jason and Chen, Kun and Parcollet, Olivier},
doi = {10.1103/PhysRevB.105.235115},
eprint = {2107.13094},
issn = {2469-9950},
journal = {Physical Review B},
month = {jun},
number = {23},
pages = {235115},
title = {{Discrete Lehmann representation of imaginary time Green's functions}},
url = {https://link.aps.org/doi/10.1103/PhysRevB.105.235115},
volume = {105},
year = {2022}
}
@article{GFLegendre2011,
author = {Boehnke, Lewin and Hafermann, Hartmut and Ferrero, Michel and Lechermann, Frank and Parcollet, Olivier},
doi = {10.1103/PhysRevB.84.075145},
issn = {1098-0121},
journal = {Physical Review B},
month = {aug},
number = {7},
pages = {075145},
title = {{Orthogonal polynomial representation of imaginary-time Green's functions}},
url = {https://link.aps.org/doi/10.1103/PhysRevB.84.075145},
volume = {84},
year = {2011}
}
@article{CRM2023,
abstract = {We propose a simple and efficient method to calculate the electronic self-energy in dynamical mean-field theory (DMFT), addressing a numerical instability often encountered when solving the Dyson equation. Our approach formulates the Dyson equation as a constrained optimization problem with a simple quadratic objective. The constraints on the self-energy are obtained via direct measurement of the leading order terms of its asymptotic expansion within a continuous time quantum Monte Carlo framework, and the use of the compact discrete Lehmann representation of the self-energy yields an optimization problem in a modest number of unknowns. We benchmark our method for the non-interacting Bethe lattice, as well as DMFT calculations for both model systems and \textit{ab-initio} applications.},
archivePrefix = {arXiv},
arxivId = {2310.01266},
author = {LaBollita, Harrison and Kaye, Jason and Hampel, Alexander},
eprint = {2310.01266},
month = {oct},
title = {{Stabilizing the calculation of the self-energy in dynamical mean-field theory using constrained residual minimization}},
url = {http://arxiv.org/abs/2310.01266},
year = {2023}
}
@article{CPPDLR2024,
abstract = {We introduce cppdlr, a C++ library implementing the discrete Lehmann representation (DLR) of functions in imaginary time and Matsubara frequency, such as Green's functions and self-energies. The DLR is based on a low-rank approximation of the analytic continuation kernel, and yields a compact and explicit basis consisting of exponentials in imaginary time and simple poles in Matsubara frequency. cppdlr constructs the DLR basis and associated interpolation grids, and implements standard operations. It provides a flexible yet high-level interface, facilitating the incorporation of the DLR into both small-scale applications and existing large-scale software projects.},
archivePrefix = {arXiv},
arxivId = {2404.02334},
author = {Kaye, Jason and Strand, Hugo U. R. and Wentzell, Nils},
eprint = {2404.02334},
month = {apr},
title = {{cppdlr: Imaginary time calculations using the discrete Lehmann representation}},
url = {http://arxiv.org/abs/2404.02334},
year = {2024}
}
