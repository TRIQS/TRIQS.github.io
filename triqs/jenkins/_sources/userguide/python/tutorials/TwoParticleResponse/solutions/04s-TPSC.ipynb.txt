{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Two-particle self consistency (TPSC)\n",
    "\n",
    "Now, we use TPRF to study the *two-particle self consistent (TPSC)* approximation explained in [the lecture notes](https://www.physique.usherbrooke.ca/tremblay/cours/phy-892/N-corps.pdf) of Andr√©-Marie Tremblay and in the following [review](https://arxiv.org/abs/1107.1534) to study the Hubbard model on the square lattice with nearest neighbour hopping. \n",
    "\n",
    "In TPSC, the vertices for charge and spin fluctuations are different but are kept local. Just like the momentum and frequency independent bare interaction $U$ in the Hubbard model. Having separate vertices for spin ($U_{sp}$) and charge ($U_{ch}$) allows TPSC to obey density conservations laws and the Pauli principle."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Theory\n",
    "\n",
    "In TPCS the spin and charge susceptibilities $\\chi_{sp}$ and $\\chi_{ch}$ are defined as\n",
    "\n",
    "$$ \\chi_{sp}(\\mathbf{q}, i\\omega_n) \\equiv \\frac{\\chi_0(\\mathbf{q}, i\\omega_n)}{1 - \\frac{U_{sp}}{2} \\chi_0(\\mathbf{q}, i\\omega_n)} \\, ,$$\n",
    "\n",
    "$$ \\chi_{ch}(\\mathbf{q}, i\\omega_n) \\equiv \\frac{\\chi_0(\\mathbf{q}, i\\omega_n)}{1 + \\frac{U_{ch}}{2} \\chi_0(\\mathbf{q}, i\\omega_n)} \\, . $$\n",
    "\n",
    "The verticies $U_{sp}$ and $U_{ch}$ are determined using two separate and cascaded sum rules. For the spin channel, $U_{sp}$ and $\\chi_{sp}$ can be determined combining the definition of $\\chi_{sp}$ above with the sum rule, \n",
    "\n",
    "$$\n",
    "\\chi_{sp}(\\mathbf{r} = 0, \\tau = \\beta) =\n",
    "\\left< (n_\\uparrow - n_\\downarrow)^2\\right>=n-2\\left< n_\\uparrow n_\\downarrow\\right> \\, ,\n",
    "$$\n",
    "\n",
    "where the equal-time equal-position susceptibility alternatively can be expressed as the momentum and frequency sum\n",
    "\n",
    "$$\n",
    "\\chi_{sp}(\\mathbf{r} = 0, \\tau = \\beta) =\n",
    "\\frac{T}{N}\\sum_{\\mathbf{q},i\\omega_n} \\chi_{sp}(\\mathbf{q}, i\\omega_n)\n",
    "\\, .\n",
    "$$\n",
    "\n",
    "The Pauli principle requires that $\\left< n_\\uparrow^2\\right>=\\left< n_\\uparrow\\right>$ since only a single fermion can occupy a given state. Substituting the TPSC value of the spin susceptibility, the double occupancy $\\left< n_\\uparrow n_\\downarrow\\right>$ and $U_{sp}$ can be determined from\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{T}{N}\\sum_{\\mathbf{q},i\\omega_n} \\frac{\\chi_0(\\mathbf{q},i\\omega_n)}{1-\\frac{U_{sp}}{2}\\chi_0(\\mathbf{q},i\\omega_n)}=n-2\\left< n_\\uparrow n_\\downarrow\\right>\n",
    "\\end{equation}\n",
    "\n",
    "using the ansatz\n",
    "\n",
    "\\begin{equation}\n",
    "U_{sp}\\left<n_\\uparrow\\right> \\left<n_\\downarrow\\right>=U\\left<n_\\uparrow n_\\downarrow\\right>.\n",
    "\\end{equation}\n",
    "\n",
    "at fixed density $n \\equiv \\langle n_\\uparrow \\rangle + \\langle n_\\downarrow \\rangle$.\n",
    "\n",
    "With $U_{sp}$ known we now turn to $U_{ch}$ and determine it using a second conservation law and the Pauli principle for fermions. \n",
    "\n",
    "Given the double occupancy $\\left<n_\\uparrow n_\\downarrow\\right>=\\frac{U_{sp}}{U} \\left<n_\\uparrow\\right> \\left<n_\\downarrow\\right>$, the charge vertex $U_{ch}$ can be obtained from\n",
    "\n",
    "$$\n",
    "\\frac{T}{N}\\sum_{\\mathbf{q},i\\omega_n} \n",
    "\\frac{\\chi_0(\\mathbf{q},i\\omega_n)}{1+\\frac{U_{ch}} {2}\\chi_0(\\mathbf{q},i\\omega_n)}=n+2\\left< n_\\uparrow n_\\downarrow\\right>-n^2.\n",
    "$$\n",
    "\n",
    "We will use a root finding algorithm in order to determine the value of $U_{sp}$ which makes $\\chi_{sp}$ obey the first relation and then determined $U_{ch}$ so that $\\chi_{ch}$ obeys the second conservation law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-29T09:09:15.695625Z",
     "iopub.status.busy": "2023-08-29T09:09:15.695361Z",
     "iopub.status.idle": "2023-08-29T09:09:15.953959Z",
     "shell.execute_reply": "2023-08-29T09:09:15.953586Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "%config InlineBackend.figure_format = 'svg'\n",
    "from triqs.plot.mpl_interface import plt, oplot\n",
    "\n",
    "import numpy as np\n",
    "from triqs.gf import *"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Load the bare susceptibility $\\chi_0$ from the previous notebook"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-29T09:09:15.955982Z",
     "iopub.status.busy": "2023-08-29T09:09:15.955472Z",
     "iopub.status.idle": "2023-08-29T09:09:15.992187Z",
     "shell.execute_reply": "2023-08-29T09:09:15.991853Z"
    }
   },
   "outputs": [],
   "source": [
    "from h5 import HDFArchive\n",
    "\n",
    "with HDFArchive(\"chi0_wk.h5\", 'r') as R:\n",
    "    chi0_wk = R['chi0_wk']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Behaviour of $U_{sp}$ and $U_{ch}$ vs. $U$\n",
    "\n",
    "Let's study the behaviour of $U_{sp}$ and $U_{ch}$ as we vary $U$. This will require us to solve the TPSC equations described above. Our aim is to reproduce the results from __[[Vilk and Tremblay, J. Phys. I France 7 (1997) 1309-1368]](https://jp1.journaldephysique.org/articles/jp1/abs/1997/11/jp1v7p1309/jp1v7p1309.html)__ __[[arXiv version]](https://arxiv.org/abs/cond-mat/9702188v3)__ and the figure:\n",
    "\n",
    "<img src=\"./imgs/Fig2.png\" alt=\"Drawing\" style=\"width: 400px;\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <i class=\"fa fa-gear fa-x\" style=\"color: #186391\"></i> Exercise 1:\n",
    "\n",
    "Define a function `solve_rpa(chi0_wk, U)` that\n",
    "computes the following quantity:\n",
    "\n",
    "\\begin{equation}\n",
    "  \\chi_{RPA}[\\chi_0, U] \\equiv \\frac{\\chi_0(\\mathbf{q}, i\\omega_n)}\n",
    "    {1 - \\frac{U}{2} \\chi_0(\\mathbf{q}, i\\omega_n)}\n",
    "\\end{equation}\n",
    "\n",
    "This function will be useful to obtain both the spin and the charge\n",
    "susceptibilities. Indeed we have that\n",
    "\n",
    "\\begin{equation}\n",
    " \\chi_{sp} = \\chi_{RPA}[\\chi_0 ,U_{sp}]\n",
    " \\qquad \n",
    " \\chi_{ch} = \\chi_{RPA}[\\chi_0,-U_{ch}]\n",
    "\\end{equation}\n",
    "\n",
    "**Hint**: use the `triq_trpf.lattice.solve_rpa_PH` routine introduced in the previous notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-29T09:09:15.993724Z",
     "iopub.status.busy": "2023-08-29T09:09:15.993647Z",
     "iopub.status.idle": "2023-08-29T09:09:15.997003Z",
     "shell.execute_reply": "2023-08-29T09:09:15.996770Z"
    }
   },
   "outputs": [],
   "source": [
    "from triqs_tprf.lattice import solve_rpa_PH\n",
    "\n",
    "def solve_rpa(chi0_wk, U):\n",
    "    I = np.ones([1, 1, 1, 1], dtype=complex)\n",
    "    chi_wk = solve_rpa_PH(chi0_wk, U/2 * I)\n",
    "    return chi_wk"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <i class=\"fa fa-gear fa-x\" style=\"color: #186391\"></i> Exercise 2:\n",
    "\n",
    "We will now solve the TPSC equation for $U_{sp}$.\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{T}{N}\\sum_{\\mathbf{q},i\\omega_n} \\chi_{sp}(\\mathbf{q},i\\omega_n) = n-2\\left< n_\\uparrow n_\\downarrow\\right> = n - 2\n",
    "\\frac{U_{sp}}{U} \\left<n_\\uparrow\\right> \\left<n_\\downarrow\\right>\n",
    "\\, ,\n",
    "\\end{equation}\n",
    "\n",
    "focusing on the unity density case $n=1$.\n",
    "\n",
    "* Check analytically that this equation always has exactly one solution for $U_{sp}$.\n",
    "* In what interval does $U_{sp}$ take its values?\n",
    "\n",
    "In order to find the value of $U_{sp}$ that solves the equation we will use the scipy root solver `scipy.optimize.brentq`. Your task is to complete the code below by:\n",
    "\n",
    "* defining the function `Usp_root` whose zero corresponds to the solution of the TPSC equation above.\n",
    "* defining the interval $[a,b]$ where `brentq` has to look for zeroes\n",
    "\n",
    "To our help we have the function `trace_chi` that computes the sum over momenta and Matsubara frequencies on the left hand side. \n",
    "\n",
    "Check that for $U=2$ the solution is given by $U_{sp} \\simeq 1.51$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-29T09:09:15.998370Z",
     "iopub.status.busy": "2023-08-29T09:09:15.998302Z",
     "iopub.status.idle": "2023-08-29T09:09:17.117636Z",
     "shell.execute_reply": "2023-08-29T09:09:17.117315Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.5092181189127931\n"
     ]
    }
   ],
   "source": [
    "def trace_chi(chi_wk):\n",
    "    \"\"\"Compute the sum, \\sum_k \\sum_\\nu \\chi(k,\\nu)\"\"\" \n",
    "    wmesh, kmesh = chi_wk.mesh.components\n",
    "    chi_w = Gf(mesh=wmesh, target_shape=[])\n",
    "    chi_w.data[:] = np.sum(np.squeeze(chi_wk.data), axis=1) / len(kmesh)\n",
    "    return -chi_w.density().real\n",
    "\n",
    "def Usp_root(Usp, chi0_wk, n, U):\n",
    "    \n",
    "    # Write your code here\n",
    "    \n",
    "    tr_chi_sp = trace_chi(solve_rpa(chi0_wk, U=Usp))\n",
    "    diff = tr_chi_sp + 0.5 * Usp/U * n**2 - n\n",
    "    return diff\n",
    "\n",
    "# Write your code here\n",
    "\n",
    "U = 2.0\n",
    "n = 1.0\n",
    "a = 0\n",
    "b = 2 / chi0_wk(0, [np.pi, np.pi, 0]).real\n",
    "\n",
    "from scipy.optimize import brentq\n",
    "Usp = brentq(Usp_root, a, b, args=(chi0_wk, n, U), xtol=1e-2)\n",
    "print(Usp)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <i class=\"fa fa-gear fa-x\" style=\"color: #186391\"></i> Exercise 3:\n",
    "\n",
    "With the solution for $U_{sp}$ known it is now possible to solve the TPSC equation for $U_{ch}$:\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{T}{N}\\sum_{\\mathbf{q},i\\omega_n} \\chi_{ch}(\\mathbf{q},i\\omega_n)\n",
    "=n+2\\left< n_\\uparrow n_\\downarrow\\right>-n^2\n",
    "= n+2 \\frac{U_{sp}}{U} \\left<n_\\uparrow\\right> \\left<n_\\downarrow\\right>\n",
    "- n^2\n",
    "\\end{equation}\n",
    "\n",
    "For $U=2$, you should find $U_{ch} \\simeq 3.59$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-29T09:09:17.134676Z",
     "iopub.status.busy": "2023-08-29T09:09:17.134554Z",
     "iopub.status.idle": "2023-08-29T09:09:18.634087Z",
     "shell.execute_reply": "2023-08-29T09:09:18.633856Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.5918677213723913\n"
     ]
    }
   ],
   "source": [
    "def Uch_root(Uch, chi0_wk, n, U, docc):\n",
    "    \n",
    "    # write your code here\n",
    "    \n",
    "    tr_chi = trace_chi(solve_rpa(chi0_wk, U=-Uch))\n",
    "    diff = tr_chi - 2 * docc - n + n**2\n",
    "    return diff\n",
    "\n",
    "docc = 0.25 * Usp / U * n**2\n",
    "a = 0\n",
    "b = 100\n",
    "Uch = brentq(Uch_root, a, b, args=(chi0_wk, n, U, docc), xtol=1e-2)\n",
    "print(Uch)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <i class=\"fa fa-gear fa-x\" style=\"color: #186391\"></i> Exercise 4:\n",
    "\n",
    "Combining the calculators for $U_{sp}$ and $U_{ch}$ from above, we can now define a function `solve_tpsc(chi0_wk, U, n)` that solves the TPSC equations for a given value of $U$ and $n$ and returns $U_{sp}$ and $U_{ch}$.\n",
    "\n",
    "Implement the function `solve_tpsc(chi0_wk, U, n)`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-29T09:09:18.635577Z",
     "iopub.status.busy": "2023-08-29T09:09:18.635502Z",
     "iopub.status.idle": "2023-08-29T09:09:21.033984Z",
     "shell.execute_reply": "2023-08-29T09:09:21.033731Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1.5092181189127931, 3.5918677213723913, 0.18865226486409914, 2.778901915273313)\n"
     ]
    }
   ],
   "source": [
    "# Write your code here\n",
    "\n",
    "def solve_tpsc(chi0_wk, U, n):\n",
    "    Uc = 2/np.squeeze(chi0_wk(0, [np.pi, np.pi, 0])).real\n",
    "    Usp = brentq(Usp_root, 0, Uc, args=(chi0_wk, n, U), xtol=1e-2)\n",
    "    docc = 0.25 * Usp / U * n**2\n",
    "    Uch = brentq(Uch_root, 0, 100, args=(chi0_wk, n, U, docc), xtol=1e-2)\n",
    "    return Usp, Uch, docc, Uc\n",
    "\n",
    "print(solve_tpsc(chi0_wk, 2., 1.))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <i class=\"fa fa-gear fa-x\" style=\"color: #186391\"></i> Exercise 5:\n",
    "\n",
    "Use the `solve_tpsc` function to study $U_{sp}$ and $U_{ch}$ as a function of $U$. Scan different values of $U$ between 0.3 and 5 and plot the result, comparing to the figure shown above. (There, the density is always $n=1$.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-29T09:09:21.035381Z",
     "iopub.status.busy": "2023-08-29T09:09:21.035305Z",
     "iopub.status.idle": "2023-08-29T09:09:40.184226Z",
     "shell.execute_reply": "2023-08-29T09:09:40.183937Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "| n          | U          | Usp        | Uch        | docc        |\n",
      "-------------------------------------------------------------------\n",
      "| 1.0000E+00 | 3.0000E-01 | 2.8960E-01 | 3.2410E-01 | 2.4133E-01  |\n",
      "| 1.0000E+00 | 5.0000E-01 | 4.6960E-01 | 6.0074E-01 | 2.3480E-01  |\n",
      "| 1.0000E+00 | 7.0000E-01 | 6.4299E-01 | 8.4181E-01 | 2.2964E-01  |\n",
      "| 1.0000E+00 | 9.0000E-01 | 8.0435E-01 | 1.1509E+00 | 2.2343E-01  |\n",
      "| 1.0000E+00 | 1.0000E+00 | 8.8118E-01 | 1.3194E+00 | 2.2029E-01  |\n",
      "| 1.0000E+00 | 2.0000E+00 | 1.5092E+00 | 3.5919E+00 | 1.8865E-01  |\n",
      "| 1.0000E+00 | 3.0000E+00 | 1.9155E+00 | 7.1248E+00 | 1.5962E-01  |\n",
      "| 1.0000E+00 | 4.0000E+00 | 2.1660E+00 | 1.2127E+01 | 1.3538E-01  |\n",
      "| 1.0000E+00 | 5.0000E+00 | 2.3187E+00 | 1.8718E+01 | 1.1594E-01  |\n"
     ]
    }
   ],
   "source": [
    "# Write your code here\n",
    "\n",
    "n = 1.0\n",
    "\n",
    "# Initializes a table to store the results\n",
    "U_vec = np.concatenate((np.arange(0.3, 1., 0.2), np.arange(1., 6., 1.)))    \n",
    "Usp_vec, Uch_vec, docc_vec = [np.zeros_like(U_vec) for x in range(3)]\n",
    "\n",
    "# Printing the header of the table\n",
    "print(''.join('| %-11s' % s for s in ['n', 'U', 'Usp', 'Uch', 'docc']), '|')\n",
    "print('-'*67)\n",
    "\n",
    "# Loop over the different values of bare U\n",
    "for idx, U in enumerate(U_vec):\n",
    "    Usp, Uch, docc, Uc = solve_tpsc(chi0_wk, U, n)\n",
    "    Usp_vec[idx], Uch_vec[idx], docc_vec[idx] = Usp, Uch, docc\n",
    "    print(''.join('| %4.4E ' % x for x in [n, U, Usp, Uch, docc]), '|')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-29T09:09:40.185603Z",
     "iopub.status.busy": "2023-08-29T09:09:40.185528Z",
     "iopub.status.idle": "2023-08-29T09:09:40.253405Z",
     "shell.execute_reply": "2023-08-29T09:09:40.253170Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       "  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"371.52pt\" height=\"280.512pt\" viewBox=\"0 0 371.52 280.512\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n",
       " <metadata>\n",
       "  <rdf:RDF xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n",
       "   <cc:Work>\n",
       "    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n",
       "    <dc:date>2023-08-29T11:09:40.228139</dc:date>\n",
       "    <dc:format>image/svg+xml</dc:format>\n",
       "    <dc:creator>\n",
       "     <cc:Agent>\n",
       "      <dc:title>Matplotlib v3.7.1, https://matplotlib.org/</dc:title>\n",
       "     </cc:Agent>\n",
       "    </dc:creator>\n",
       "   </cc:Work>\n",
       "  </rdf:RDF>\n",
       " </metadata>\n",
       " <defs>\n",
       "  <style type=\"text/css\">*{stroke-linejoin: round; stroke-linecap: butt}</style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <g id=\"patch_1\">\n",
       "   <path d=\"M 0 280.512 \n",
       "L 371.52 280.512 \n",
       "L 371.52 0 \n",
       "L 0 0 \n",
       "z\n",
       "\" style=\"fill: #ffffff\"/>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g clip-path=\"url(#p219b2ab0a3)\">\n",
       "    <image xlink:href=\"data:image/png;base64,\n",
       "\" id=\"image31f35a5bed\" transform=\"scale(1 -1) translate(0 -266.4)\" x=\"7.2\" y=\"-6.912\" width=\"357.84\" height=\"266.4\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_1\">\n",
       "    <path d=\"M 34.907586 239.340255 \n",
       "L 342.769655 239.340255 \n",
       "L 342.769655 12.861957 \n",
       "L 34.907586 12.861957 \n",
       "L 34.907586 239.340255 \n",
       "\" clip-path=\"url(#p219b2ab0a3)\" style=\"fill: none; stroke: #ff0000; stroke-width: 1.5; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_2\">\n",
       "    <defs>\n",
       "     <path id=\"mc7129e2dbd\" d=\"M 0 3 \n",
       "C 0.795609 3 1.55874 2.683901 2.12132 2.12132 \n",
       "C 2.683901 1.55874 3 0.795609 3 0 \n",
       "C 3 -0.795609 2.683901 -1.55874 2.12132 -2.12132 \n",
       "C 1.55874 -2.683901 0.795609 -3 0 -3 \n",
       "C -0.795609 -3 -1.55874 -2.683901 -2.12132 -2.12132 \n",
       "C -2.683901 -1.55874 -3 -0.795609 -3 0 \n",
       "C -3 0.795609 -2.683901 1.55874 -2.12132 2.12132 \n",
       "C -1.55874 2.683901 -0.795609 3 0 3 \n",
       "z\n",
       "\" style=\"stroke: #1f77b4; stroke-opacity: 0.5\"/>\n",
       "    </defs>\n",
       "    <g clip-path=\"url(#p219b2ab0a3)\">\n",
       "     <use xlink:href=\"#mc7129e2dbd\" x=\"53.37931\" y=\"236.060829\" style=\"fill: #1f77b4; fill-opacity: 0.5; stroke: #1f77b4; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#mc7129e2dbd\" x=\"65.693793\" y=\"234.02258\" style=\"fill: #1f77b4; fill-opacity: 0.5; stroke: #1f77b4; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#mc7129e2dbd\" x=\"78.008276\" y=\"232.059136\" style=\"fill: #1f77b4; fill-opacity: 0.5; stroke: #1f77b4; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#mc7129e2dbd\" x=\"90.322759\" y=\"230.231861\" style=\"fill: #1f77b4; fill-opacity: 0.5; stroke: #1f77b4; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#mc7129e2dbd\" x=\"96.48\" y=\"229.361861\" style=\"fill: #1f77b4; fill-opacity: 0.5; stroke: #1f77b4; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#mc7129e2dbd\" x=\"158.052414\" y=\"222.249998\" style=\"fill: #1f77b4; fill-opacity: 0.5; stroke: #1f77b4; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#mc7129e2dbd\" x=\"219.624828\" y=\"217.649572\" style=\"fill: #1f77b4; fill-opacity: 0.5; stroke: #1f77b4; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#mc7129e2dbd\" x=\"281.197241\" y=\"214.812344\" style=\"fill: #1f77b4; fill-opacity: 0.5; stroke: #1f77b4; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#mc7129e2dbd\" x=\"342.769655\" y=\"213.083486\" style=\"fill: #1f77b4; fill-opacity: 0.5; stroke: #1f77b4; stroke-opacity: 0.5\"/>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"line2d_3\">\n",
       "    <defs>\n",
       "     <path id=\"m70404ff0b5\" d=\"M 0 3 \n",
       "C 0.795609 3 1.55874 2.683901 2.12132 2.12132 \n",
       "C 2.683901 1.55874 3 0.795609 3 0 \n",
       "C 3 -0.795609 2.683901 -1.55874 2.12132 -2.12132 \n",
       "C 1.55874 -2.683901 0.795609 -3 0 -3 \n",
       "C -0.795609 -3 -1.55874 -2.683901 -2.12132 -2.12132 \n",
       "C -2.683901 -1.55874 -3 -0.795609 -3 0 \n",
       "C -3 0.795609 -2.683901 1.55874 -2.12132 2.12132 \n",
       "C -1.55874 2.683901 -0.795609 3 0 3 \n",
       "z\n",
       "\" style=\"stroke: #ff7f0e; stroke-opacity: 0.5\"/>\n",
       "    </defs>\n",
       "    <g clip-path=\"url(#p219b2ab0a3)\">\n",
       "     <use xlink:href=\"#m70404ff0b5\" x=\"53.37931\" y=\"235.670145\" style=\"fill: #ff7f0e; fill-opacity: 0.5; stroke: #ff7f0e; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#m70404ff0b5\" x=\"65.693793\" y=\"232.53748\" style=\"fill: #ff7f0e; fill-opacity: 0.5; stroke: #ff7f0e; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#m70404ff0b5\" x=\"78.008276\" y=\"229.807629\" style=\"fill: #ff7f0e; fill-opacity: 0.5; stroke: #ff7f0e; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#m70404ff0b5\" x=\"90.322759\" y=\"226.308053\" style=\"fill: #ff7f0e; fill-opacity: 0.5; stroke: #ff7f0e; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#m70404ff0b5\" x=\"96.48\" y=\"224.399438\" style=\"fill: #ff7f0e; fill-opacity: 0.5; stroke: #ff7f0e; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#m70404ff0b5\" x=\"158.052414\" y=\"198.666251\" style=\"fill: #ff7f0e; fill-opacity: 0.5; stroke: #ff7f0e; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#m70404ff0b5\" x=\"219.624828\" y=\"158.660186\" style=\"fill: #ff7f0e; fill-opacity: 0.5; stroke: #ff7f0e; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#m70404ff0b5\" x=\"281.197241\" y=\"102.01613\" style=\"fill: #ff7f0e; fill-opacity: 0.5; stroke: #ff7f0e; stroke-opacity: 0.5\"/>\n",
       "     <use xlink:href=\"#m70404ff0b5\" x=\"342.769655\" y=\"27.380622\" style=\"fill: #ff7f0e; fill-opacity: 0.5; stroke: #ff7f0e; stroke-opacity: 0.5\"/>\n",
       "    </g>\n",
       "   </g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p219b2ab0a3\">\n",
       "   <rect x=\"7.2\" y=\"7.2\" width=\"357.12\" height=\"266.112\"/>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib.image import imread\n",
    "\n",
    "# Some manual adjustements here to overlay the original figure. May change from one\n",
    "# machine to another\n",
    "im = imread(\"imgs/Fig2.png\")\n",
    "plt.imshow(im, extent=(-0.45, 5.35, -3, 20.5), aspect='auto')\n",
    "plt.plot([0,5,5,0,0],[0,0,20,20,0],'-r')\n",
    "\n",
    "plt.plot(U_vec, Usp_vec, 'o', label=r'$U_{sp}$', alpha=0.5, lw=2)\n",
    "plt.plot(U_vec, Uch_vec, 'o', label=r'$U_{ch}$', alpha=0.5, lw=2)\n",
    "\n",
    "plt.axis('off');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Note: weakness of RPA\n",
    "\n",
    "Given the above sum rules, note that in TPSC the following sum-rule, a consequence of the Pauli principle, is satisfied:\n",
    "\n",
    "\\begin{equation}\n",
    "2\\frac{T}{N}\\sum_{\\mathbf{q},iq_n} \\left (\\frac{\\chi_0(\\mathbf{q},iq_n)}{1-\\frac{U_{sp}}{2}\\chi_0(\\mathbf{q},iq_n)}+\\frac{\\chi_0(\\mathbf{q},iq_n)}{1+\\frac{U_{ch}}{2}\\chi_0(\\mathbf{q},iq_n)}\\right)=2n-n^2.\n",
    "\\end{equation}\n",
    "\n",
    "Note that the right-hand side is independent of interactions.\n",
    "\n",
    "In RPA the left hand side of the above equation takes the form\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{T}{N}\\sum_{\\mathbf{q},iq_n} \\left (\\frac{\\chi_0(\\mathbf{q},iq_n)}{1-\\frac{U}{2}\\chi_0(\\mathbf{q},iq_n)}+\\frac{\\chi_0(\\mathbf{q},iq_n)}{1+\\frac{U}{2}\\chi_0(\\mathbf{q},iq_n)}\\right)\n",
    "\\end{equation}\n",
    "\n",
    "Note that the bare $U$ enters in both denominators. \n",
    "\n",
    "Study the violation of this sum rule by RPA by plotting the RPA expression as a function of $U$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-29T09:09:40.254866Z",
     "iopub.status.busy": "2023-08-29T09:09:40.254776Z",
     "iopub.status.idle": "2023-08-29T09:09:43.349367Z",
     "shell.execute_reply": "2023-08-29T09:09:43.349107Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "| U          | sum_chi    | 2n-n*n      |\n",
      "-----------------------------------------\n",
      "| 0.0000E+00 | 9.9935E-01 | 1.0000E+00  |\n",
      "| 2.5000E-01 | 9.9969E-01 | 1.0000E+00  |\n",
      "| 5.0000E-01 | 1.0007E+00 | 1.0000E+00  |\n",
      "| 7.5000E-01 | 1.0024E+00 | 1.0000E+00  |\n",
      "| 1.0000E+00 | 1.0048E+00 | 1.0000E+00  |\n",
      "| 1.2500E+00 | 1.0079E+00 | 1.0000E+00  |\n",
      "| 1.5000E+00 | 1.0118E+00 | 1.0000E+00  |\n",
      "| 1.7500E+00 | 1.0166E+00 | 1.0000E+00  |\n",
      "| 2.0000E+00 | 1.0222E+00 | 1.0000E+00  |\n",
      "| 2.2500E+00 | 1.0287E+00 | 1.0000E+00  |\n"
     ]
    }
   ],
   "source": [
    "# Write your code here\n",
    "\n",
    "n = 1.0\n",
    "U_vec = np.arange(0., 2.5, 0.25)\n",
    "sum_chi_vec = np.zeros_like(U_vec)\n",
    "\n",
    "wmesh, kmesh = chi0_wk.mesh.components\n",
    "\n",
    "print(''.join('| %-11s' % s for s in ['U', 'sum_chi', '2n-n*n']), '|')\n",
    "print('-'*41)\n",
    "\n",
    "for idx, U in enumerate(U_vec):\n",
    "    sum_chi = solve_rpa(chi0_wk, +0.5*U) + solve_rpa(chi0_wk, -0.5*U)\n",
    "    sum_chi = trace_chi(sum_chi)\n",
    "    sum_chi_vec[idx] = sum_chi.real\n",
    "    print(''.join('| %4.4E ' % x for x in [U, sum_chi.real, 2*n-n**2]), '|')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-29T09:09:43.350697Z",
     "iopub.status.busy": "2023-08-29T09:09:43.350625Z",
     "iopub.status.idle": "2023-08-29T09:09:43.476293Z",
     "shell.execute_reply": "2023-08-29T09:09:43.476053Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       "  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"407.148125pt\" height=\"313.357184pt\" viewBox=\"0 0 407.148125 313.357184\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n",
       " <metadata>\n",
       "  <rdf:RDF xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n",
       "   <cc:Work>\n",
       "    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n",
       "    <dc:date>2023-08-29T11:09:43.440362</dc:date>\n",
       "    <dc:format>image/svg+xml</dc:format>\n",
       "    <dc:creator>\n",
       "     <cc:Agent>\n",
       "      <dc:title>Matplotlib v3.7.1, https://matplotlib.org/</dc:title>\n",
       "     </cc:Agent>\n",
       "    </dc:creator>\n",
       "   </cc:Work>\n",
       "  </rdf:RDF>\n",
       " </metadata>\n",
       " <defs>\n",
       "  <style type=\"text/css\">*{stroke-linejoin: round; stroke-linecap: butt}</style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <g id=\"patch_1\">\n",
       "   <path d=\"M 0 313.357184 \n",
       "L 407.148125 313.357184 \n",
       "L 407.148125 0 \n",
       "L 0 0 \n",
       "z\n",
       "\" style=\"fill: #ffffff\"/>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path d=\"M 42.828125 275.800934 \n",
       "L 399.948125 275.800934 \n",
       "L 399.948125 9.688934 \n",
       "L 42.828125 9.688934 \n",
       "z\n",
       "\" style=\"fill: #ffffff\"/>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\">\n",
       "    <g id=\"xtick_1\">\n",
       "     <g id=\"line2d_1\">\n",
       "      <defs>\n",
       "       <path id=\"m984a24767a\" d=\"M 0 0 \n",
       "L 0 3.5 \n",
       "\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </defs>\n",
       "      <g>\n",
       "       <use xlink:href=\"#m984a24767a\" x=\"59.060852\" y=\"275.800934\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_1\">\n",
       "      <!-- 0.0 -->\n",
       "      <g transform=\"translate(51.10929 290.399372) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-30\" d=\"M 2034 4250 \n",
       "Q 1547 4250 1301 3770 \n",
       "Q 1056 3291 1056 2328 \n",
       "Q 1056 1369 1301 889 \n",
       "Q 1547 409 2034 409 \n",
       "Q 2525 409 2770 889 \n",
       "Q 3016 1369 3016 2328 \n",
       "Q 3016 3291 2770 3770 \n",
       "Q 2525 4250 2034 4250 \n",
       "z\n",
       "M 2034 4750 \n",
       "Q 2819 4750 3233 4129 \n",
       "Q 3647 3509 3647 2328 \n",
       "Q 3647 1150 3233 529 \n",
       "Q 2819 -91 2034 -91 \n",
       "Q 1250 -91 836 529 \n",
       "Q 422 1150 422 2328 \n",
       "Q 422 3509 836 4129 \n",
       "Q 1250 4750 2034 4750 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "        <path id=\"DejaVuSans-2e\" d=\"M 684 794 \n",
       "L 1344 794 \n",
       "L 1344 0 \n",
       "L 684 0 \n",
       "L 684 794 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_2\">\n",
       "     <g id=\"line2d_2\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m984a24767a\" x=\"131.206307\" y=\"275.800934\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_2\">\n",
       "      <!-- 0.5 -->\n",
       "      <g transform=\"translate(123.254744 290.399372) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-35\" d=\"M 691 4666 \n",
       "L 3169 4666 \n",
       "L 3169 4134 \n",
       "L 1269 4134 \n",
       "L 1269 2991 \n",
       "Q 1406 3038 1543 3061 \n",
       "Q 1681 3084 1819 3084 \n",
       "Q 2600 3084 3056 2656 \n",
       "Q 3513 2228 3513 1497 \n",
       "Q 3513 744 3044 326 \n",
       "Q 2575 -91 1722 -91 \n",
       "Q 1428 -91 1123 -41 \n",
       "Q 819 9 494 109 \n",
       "L 494 744 \n",
       "Q 775 591 1075 516 \n",
       "Q 1375 441 1709 441 \n",
       "Q 2250 441 2565 725 \n",
       "Q 2881 1009 2881 1497 \n",
       "Q 2881 1984 2565 2268 \n",
       "Q 2250 2553 1709 2553 \n",
       "Q 1456 2553 1204 2497 \n",
       "Q 953 2441 691 2322 \n",
       "L 691 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-35\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_3\">\n",
       "     <g id=\"line2d_3\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m984a24767a\" x=\"203.351761\" y=\"275.800934\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_3\">\n",
       "      <!-- 1.0 -->\n",
       "      <g transform=\"translate(195.400199 290.399372) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-31\" d=\"M 794 531 \n",
       "L 1825 531 \n",
       "L 1825 4091 \n",
       "L 703 3866 \n",
       "L 703 4441 \n",
       "L 1819 4666 \n",
       "L 2450 4666 \n",
       "L 2450 531 \n",
       "L 3481 531 \n",
       "L 3481 0 \n",
       "L 794 0 \n",
       "L 794 531 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_4\">\n",
       "     <g id=\"line2d_4\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m984a24767a\" x=\"275.497216\" y=\"275.800934\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_4\">\n",
       "      <!-- 1.5 -->\n",
       "      <g transform=\"translate(267.545653 290.399372) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-35\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_5\">\n",
       "     <g id=\"line2d_5\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m984a24767a\" x=\"347.64267\" y=\"275.800934\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_5\">\n",
       "      <!-- 2.0 -->\n",
       "      <g transform=\"translate(339.691108 290.399372) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-32\" d=\"M 1228 531 \n",
       "L 3431 531 \n",
       "L 3431 0 \n",
       "L 469 0 \n",
       "L 469 531 \n",
       "Q 828 903 1448 1529 \n",
       "Q 2069 2156 2228 2338 \n",
       "Q 2531 2678 2651 2914 \n",
       "Q 2772 3150 2772 3378 \n",
       "Q 2772 3750 2511 3984 \n",
       "Q 2250 4219 1831 4219 \n",
       "Q 1534 4219 1204 4116 \n",
       "Q 875 4013 500 3803 \n",
       "L 500 4441 \n",
       "Q 881 4594 1212 4672 \n",
       "Q 1544 4750 1819 4750 \n",
       "Q 2544 4750 2975 4387 \n",
       "Q 3406 4025 3406 3419 \n",
       "Q 3406 3131 3298 2873 \n",
       "Q 3191 2616 2906 2266 \n",
       "Q 2828 2175 2409 1742 \n",
       "Q 1991 1309 1228 531 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-32\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"text_6\">\n",
       "     <!-- $U$ -->\n",
       "     <g transform=\"translate(217.688125 304.077497) scale(0.1 -0.1)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-Oblique-55\" d=\"M 991 4666 \n",
       "L 1625 4666 \n",
       "L 1075 1831 \n",
       "Q 1041 1641 1027 1517 \n",
       "Q 1013 1394 1013 1300 \n",
       "Q 1013 869 1253 645 \n",
       "Q 1494 422 1959 422 \n",
       "Q 2563 422 2898 753 \n",
       "Q 3234 1084 3378 1831 \n",
       "L 3928 4666 \n",
       "L 4563 4666 \n",
       "L 4000 1753 \n",
       "Q 3816 809 3300 359 \n",
       "Q 2784 -91 1888 -91 \n",
       "Q 1188 -91 780 261 \n",
       "Q 372 613 372 1216 \n",
       "Q 372 1325 387 1461 \n",
       "Q 403 1597 434 1753 \n",
       "L 991 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-55\" transform=\"translate(0 0.09375)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_2\">\n",
       "    <g id=\"ytick_1\">\n",
       "     <g id=\"line2d_6\">\n",
       "      <defs>\n",
       "       <path id=\"mfbeb0e389e\" d=\"M 0 0 \n",
       "L -3.5 0 \n",
       "\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </defs>\n",
       "      <g>\n",
       "       <use xlink:href=\"#mfbeb0e389e\" x=\"42.828125\" y=\"258.38546\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_7\">\n",
       "      <!-- 1.000 -->\n",
       "      <g transform=\"translate(7.2 262.184679) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"159.033203\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"222.65625\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_2\">\n",
       "     <g id=\"line2d_7\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mfbeb0e389e\" x=\"42.828125\" y=\"217.15442\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_8\">\n",
       "      <!-- 1.005 -->\n",
       "      <g transform=\"translate(7.2 220.953639) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"159.033203\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-35\" x=\"222.65625\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_3\">\n",
       "     <g id=\"line2d_8\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mfbeb0e389e\" x=\"42.828125\" y=\"175.92338\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_9\">\n",
       "      <!-- 1.010 -->\n",
       "      <g transform=\"translate(7.2 179.722598) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-31\" x=\"159.033203\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"222.65625\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_4\">\n",
       "     <g id=\"line2d_9\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mfbeb0e389e\" x=\"42.828125\" y=\"134.692339\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_10\">\n",
       "      <!-- 1.015 -->\n",
       "      <g transform=\"translate(7.2 138.491558) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-31\" x=\"159.033203\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-35\" x=\"222.65625\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_5\">\n",
       "     <g id=\"line2d_10\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mfbeb0e389e\" x=\"42.828125\" y=\"93.461299\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_11\">\n",
       "      <!-- 1.020 -->\n",
       "      <g transform=\"translate(7.2 97.260518) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-32\" x=\"159.033203\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"222.65625\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_6\">\n",
       "     <g id=\"line2d_11\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mfbeb0e389e\" x=\"42.828125\" y=\"52.230259\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_12\">\n",
       "      <!-- 1.025 -->\n",
       "      <g transform=\"translate(7.2 56.029478) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-32\" x=\"159.033203\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-35\" x=\"222.65625\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_7\">\n",
       "     <g id=\"line2d_12\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mfbeb0e389e\" x=\"42.828125\" y=\"10.999219\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_13\">\n",
       "      <!-- 1.030 -->\n",
       "      <g transform=\"translate(7.2 14.798438) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-33\" d=\"M 2597 2516 \n",
       "Q 3050 2419 3304 2112 \n",
       "Q 3559 1806 3559 1356 \n",
       "Q 3559 666 3084 287 \n",
       "Q 2609 -91 1734 -91 \n",
       "Q 1441 -91 1130 -33 \n",
       "Q 819 25 488 141 \n",
       "L 488 750 \n",
       "Q 750 597 1062 519 \n",
       "Q 1375 441 1716 441 \n",
       "Q 2309 441 2620 675 \n",
       "Q 2931 909 2931 1356 \n",
       "Q 2931 1769 2642 2001 \n",
       "Q 2353 2234 1838 2234 \n",
       "L 1294 2234 \n",
       "L 1294 2753 \n",
       "L 1863 2753 \n",
       "Q 2328 2753 2575 2939 \n",
       "Q 2822 3125 2822 3475 \n",
       "Q 2822 3834 2567 4026 \n",
       "Q 2313 4219 1838 4219 \n",
       "Q 1578 4219 1281 4162 \n",
       "Q 984 4106 628 3988 \n",
       "L 628 4550 \n",
       "Q 988 4650 1302 4700 \n",
       "Q 1616 4750 1894 4750 \n",
       "Q 2613 4750 3031 4423 \n",
       "Q 3450 4097 3450 3541 \n",
       "Q 3450 3153 3228 2886 \n",
       "Q 3006 2619 2597 2516 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-33\" x=\"159.033203\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"222.65625\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"line2d_13\">\n",
       "    <path d=\"M 59.060852 263.704934 \n",
       "L 95.13358 260.9337 \n",
       "L 131.206307 252.590538 \n",
       "L 167.279034 238.586068 \n",
       "L 203.351761 218.767897 \n",
       "L 239.424489 192.915206 \n",
       "L 275.497216 160.730583 \n",
       "L 311.569943 121.828407 \n",
       "L 347.64267 75.718713 \n",
       "L 383.715398 21.784934 \n",
       "\" clip-path=\"url(#p1841b475fa)\" style=\"fill: none; stroke: #1f77b4; stroke-width: 1.5; stroke-linecap: square\"/>\n",
       "    <defs>\n",
       "     <path id=\"m031ca2405f\" d=\"M 0 1.5 \n",
       "C 0.397805 1.5 0.77937 1.341951 1.06066 1.06066 \n",
       "C 1.341951 0.77937 1.5 0.397805 1.5 0 \n",
       "C 1.5 -0.397805 1.341951 -0.77937 1.06066 -1.06066 \n",
       "C 0.77937 -1.341951 0.397805 -1.5 0 -1.5 \n",
       "C -0.397805 -1.5 -0.77937 -1.341951 -1.06066 -1.06066 \n",
       "C -1.341951 -0.77937 -1.5 -0.397805 -1.5 0 \n",
       "C -1.5 0.397805 -1.341951 0.77937 -1.06066 1.06066 \n",
       "C -0.77937 1.341951 -0.397805 1.5 0 1.5 \n",
       "z\n",
       "\" style=\"stroke: #1f77b4\"/>\n",
       "    </defs>\n",
       "    <g clip-path=\"url(#p1841b475fa)\">\n",
       "     <use xlink:href=\"#m031ca2405f\" x=\"59.060852\" y=\"263.704934\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m031ca2405f\" x=\"95.13358\" y=\"260.9337\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m031ca2405f\" x=\"131.206307\" y=\"252.590538\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m031ca2405f\" x=\"167.279034\" y=\"238.586068\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m031ca2405f\" x=\"203.351761\" y=\"218.767897\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m031ca2405f\" x=\"239.424489\" y=\"192.915206\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m031ca2405f\" x=\"275.497216\" y=\"160.730583\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m031ca2405f\" x=\"311.569943\" y=\"121.828407\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m031ca2405f\" x=\"347.64267\" y=\"75.718713\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m031ca2405f\" x=\"383.715398\" y=\"21.784934\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"line2d_14\">\n",
       "    <path d=\"M 59.060852 258.38546 \n",
       "L 95.13358 258.38546 \n",
       "L 131.206307 258.38546 \n",
       "L 167.279034 258.38546 \n",
       "L 203.351761 258.38546 \n",
       "L 239.424489 258.38546 \n",
       "L 275.497216 258.38546 \n",
       "L 311.569943 258.38546 \n",
       "L 347.64267 258.38546 \n",
       "L 383.715398 258.38546 \n",
       "\" clip-path=\"url(#p1841b475fa)\" style=\"fill: none; stroke: #000000; stroke-width: 0.5; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path d=\"M 42.828125 275.800934 \n",
       "L 42.828125 9.688934 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path d=\"M 399.948125 275.800934 \n",
       "L 399.948125 9.688934 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path d=\"M 42.828125 275.800934 \n",
       "L 399.948125 275.800934 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path d=\"M 42.828125 9.688934 \n",
       "L 399.948125 9.688934 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"legend_1\">\n",
       "    <g id=\"patch_7\">\n",
       "     <path d=\"M 49.828125 48.067059 \n",
       "L 140.928125 48.067059 \n",
       "Q 142.928125 48.067059 142.928125 46.067059 \n",
       "L 142.928125 16.688934 \n",
       "Q 142.928125 14.688934 140.928125 14.688934 \n",
       "L 49.828125 14.688934 \n",
       "Q 47.828125 14.688934 47.828125 16.688934 \n",
       "L 47.828125 46.067059 \n",
       "Q 47.828125 48.067059 49.828125 48.067059 \n",
       "z\n",
       "\" style=\"fill: #ffffff; opacity: 0.8; stroke: #cccccc; stroke-linejoin: miter\"/>\n",
       "    </g>\n",
       "    <g id=\"line2d_15\">\n",
       "     <path d=\"M 51.828125 22.788934 \n",
       "L 61.828125 22.788934 \n",
       "L 71.828125 22.788934 \n",
       "\" style=\"fill: none; stroke: #1f77b4; stroke-width: 1.5; stroke-linecap: square\"/>\n",
       "     <g>\n",
       "      <use xlink:href=\"#m031ca2405f\" x=\"61.828125\" y=\"22.788934\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"text_14\">\n",
       "     <!-- Tr[$\\chi_{ch} + \\chi_{sp}$] -->\n",
       "     <g transform=\"translate(79.828125 26.288934) scale(0.1 -0.1)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-54\" d=\"M -19 4666 \n",
       "L 3928 4666 \n",
       "L 3928 4134 \n",
       "L 2272 4134 \n",
       "L 2272 0 \n",
       "L 1638 0 \n",
       "L 1638 4134 \n",
       "L -19 4134 \n",
       "L -19 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-72\" d=\"M 2631 2963 \n",
       "Q 2534 3019 2420 3045 \n",
       "Q 2306 3072 2169 3072 \n",
       "Q 1681 3072 1420 2755 \n",
       "Q 1159 2438 1159 1844 \n",
       "L 1159 0 \n",
       "L 581 0 \n",
       "L 581 3500 \n",
       "L 1159 3500 \n",
       "L 1159 2956 \n",
       "Q 1341 3275 1631 3429 \n",
       "Q 1922 3584 2338 3584 \n",
       "Q 2397 3584 2469 3576 \n",
       "Q 2541 3569 2628 3553 \n",
       "L 2631 2963 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-5b\" d=\"M 550 4863 \n",
       "L 1875 4863 \n",
       "L 1875 4416 \n",
       "L 1125 4416 \n",
       "L 1125 -397 \n",
       "L 1875 -397 \n",
       "L 1875 -844 \n",
       "L 550 -844 \n",
       "L 550 4863 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-Oblique-3c7\" d=\"M 1922 -781 \n",
       "L 1691 416 \n",
       "L 394 -1334 \n",
       "L -284 -1334 \n",
       "L 1553 1141 \n",
       "L 1269 2613 \n",
       "Q 1194 3006 713 3006 \n",
       "L 559 3006 \n",
       "L 653 3500 \n",
       "L 872 3494 \n",
       "Q 1675 3472 1775 2950 \n",
       "L 2006 1753 \n",
       "L 3303 3503 \n",
       "L 3981 3503 \n",
       "L 2144 1028 \n",
       "L 2428 -444 \n",
       "Q 2503 -838 2984 -838 \n",
       "L 3138 -838 \n",
       "L 3044 -1331 \n",
       "L 2825 -1325 \n",
       "Q 2022 -1303 1922 -781 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-Oblique-63\" d=\"M 3431 3366 \n",
       "L 3316 2797 \n",
       "Q 3109 2947 2876 3022 \n",
       "Q 2644 3097 2394 3097 \n",
       "Q 2119 3097 1870 3000 \n",
       "Q 1622 2903 1453 2725 \n",
       "Q 1184 2453 1037 2087 \n",
       "Q 891 1722 891 1331 \n",
       "Q 891 859 1127 628 \n",
       "Q 1363 397 1844 397 \n",
       "Q 2081 397 2348 469 \n",
       "Q 2616 541 2906 684 \n",
       "L 2797 116 \n",
       "Q 2547 13 2283 -39 \n",
       "Q 2019 -91 1741 -91 \n",
       "Q 1044 -91 669 257 \n",
       "Q 294 606 294 1253 \n",
       "Q 294 1797 489 2255 \n",
       "Q 684 2713 1069 3078 \n",
       "Q 1331 3328 1684 3456 \n",
       "Q 2038 3584 2456 3584 \n",
       "Q 2700 3584 2940 3529 \n",
       "Q 3181 3475 3431 3366 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-Oblique-68\" d=\"M 3566 2113 \n",
       "L 3156 0 \n",
       "L 2578 0 \n",
       "L 2988 2091 \n",
       "Q 3016 2238 3031 2350 \n",
       "Q 3047 2463 3047 2528 \n",
       "Q 3047 2791 2881 2937 \n",
       "Q 2716 3084 2419 3084 \n",
       "Q 1956 3084 1617 2771 \n",
       "Q 1278 2459 1178 1941 \n",
       "L 800 0 \n",
       "L 225 0 \n",
       "L 1172 4863 \n",
       "L 1747 4863 \n",
       "L 1375 2950 \n",
       "Q 1594 3244 1934 3414 \n",
       "Q 2275 3584 2650 3584 \n",
       "Q 3113 3584 3367 3334 \n",
       "Q 3622 3084 3622 2631 \n",
       "Q 3622 2519 3608 2391 \n",
       "Q 3594 2263 3566 2113 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-2b\" d=\"M 2944 4013 \n",
       "L 2944 2272 \n",
       "L 4684 2272 \n",
       "L 4684 1741 \n",
       "L 2944 1741 \n",
       "L 2944 0 \n",
       "L 2419 0 \n",
       "L 2419 1741 \n",
       "L 678 1741 \n",
       "L 678 2272 \n",
       "L 2419 2272 \n",
       "L 2419 4013 \n",
       "L 2944 4013 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-Oblique-73\" d=\"M 3200 3397 \n",
       "L 3091 2853 \n",
       "Q 2863 2978 2609 3040 \n",
       "Q 2356 3103 2088 3103 \n",
       "Q 1634 3103 1373 2948 \n",
       "Q 1113 2794 1113 2528 \n",
       "Q 1113 2219 1719 2053 \n",
       "Q 1766 2041 1788 2034 \n",
       "L 1972 1978 \n",
       "Q 2547 1819 2739 1644 \n",
       "Q 2931 1469 2931 1166 \n",
       "Q 2931 609 2489 259 \n",
       "Q 2047 -91 1331 -91 \n",
       "Q 1053 -91 747 -37 \n",
       "Q 441 16 72 128 \n",
       "L 184 722 \n",
       "Q 500 559 806 475 \n",
       "Q 1113 391 1394 391 \n",
       "Q 1816 391 2080 572 \n",
       "Q 2344 753 2344 1031 \n",
       "Q 2344 1331 1650 1516 \n",
       "L 1591 1531 \n",
       "L 1394 1581 \n",
       "Q 956 1697 753 1886 \n",
       "Q 550 2075 550 2369 \n",
       "Q 550 2928 970 3256 \n",
       "Q 1391 3584 2113 3584 \n",
       "Q 2397 3584 2667 3537 \n",
       "Q 2938 3491 3200 3397 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-Oblique-70\" d=\"M 3175 2156 \n",
       "Q 3175 2616 2975 2859 \n",
       "Q 2775 3103 2400 3103 \n",
       "Q 2144 3103 1911 2972 \n",
       "Q 1678 2841 1497 2591 \n",
       "Q 1319 2344 1212 1994 \n",
       "Q 1106 1644 1106 1300 \n",
       "Q 1106 863 1306 627 \n",
       "Q 1506 391 1875 391 \n",
       "Q 2147 391 2380 519 \n",
       "Q 2613 647 2778 891 \n",
       "Q 2956 1147 3065 1494 \n",
       "Q 3175 1841 3175 2156 \n",
       "z\n",
       "M 1394 2969 \n",
       "Q 1625 3272 1939 3428 \n",
       "Q 2253 3584 2638 3584 \n",
       "Q 3175 3584 3472 3232 \n",
       "Q 3769 2881 3769 2247 \n",
       "Q 3769 1728 3584 1258 \n",
       "Q 3400 788 3053 416 \n",
       "Q 2822 169 2531 39 \n",
       "Q 2241 -91 1919 -91 \n",
       "Q 1547 -91 1294 64 \n",
       "Q 1041 219 916 525 \n",
       "L 556 -1331 \n",
       "L -19 -1331 \n",
       "L 922 3500 \n",
       "L 1497 3500 \n",
       "L 1394 2969 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-5d\" d=\"M 1947 4863 \n",
       "L 1947 -844 \n",
       "L 622 -844 \n",
       "L 622 -397 \n",
       "L 1369 -397 \n",
       "L 1369 4416 \n",
       "L 622 4416 \n",
       "L 622 4863 \n",
       "L 1947 4863 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-54\" transform=\"translate(0 0.015625)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-72\" transform=\"translate(61.083984 0.015625)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-5b\" transform=\"translate(102.197266 0.015625)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-3c7\" transform=\"translate(141.210938 0.015625)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-63\" transform=\"translate(200.390625 -16.390625) scale(0.7)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-68\" transform=\"translate(238.876953 -16.390625) scale(0.7)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-2b\" transform=\"translate(305.458984 0.015625)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-3c7\" transform=\"translate(408.730469 0.015625)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-73\" transform=\"translate(467.910156 -16.390625) scale(0.7)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-70\" transform=\"translate(504.379883 -16.390625) scale(0.7)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-5d\" transform=\"translate(551.547852 0.015625)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"line2d_16\">\n",
       "     <path d=\"M 51.828125 38.487372 \n",
       "L 61.828125 38.487372 \n",
       "L 71.828125 38.487372 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.5; stroke-linecap: square\"/>\n",
       "    </g>\n",
       "    <g id=\"text_15\">\n",
       "     <!-- $2n-n^2$ -->\n",
       "     <g transform=\"translate(79.828125 41.987372) scale(0.1 -0.1)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-Oblique-6e\" d=\"M 3566 2113 \n",
       "L 3156 0 \n",
       "L 2578 0 \n",
       "L 2988 2091 \n",
       "Q 3016 2238 3031 2350 \n",
       "Q 3047 2463 3047 2528 \n",
       "Q 3047 2791 2881 2937 \n",
       "Q 2716 3084 2419 3084 \n",
       "Q 1956 3084 1622 2776 \n",
       "Q 1288 2469 1184 1941 \n",
       "L 800 0 \n",
       "L 225 0 \n",
       "L 903 3500 \n",
       "L 1478 3500 \n",
       "L 1363 2950 \n",
       "Q 1603 3253 1940 3418 \n",
       "Q 2278 3584 2650 3584 \n",
       "Q 3113 3584 3367 3334 \n",
       "Q 3622 3084 3622 2631 \n",
       "Q 3622 2519 3608 2391 \n",
       "Q 3594 2263 3566 2113 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-2212\" d=\"M 678 2272 \n",
       "L 4684 2272 \n",
       "L 4684 1741 \n",
       "L 678 1741 \n",
       "L 678 2272 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-32\" transform=\"translate(0 0.765625)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-6e\" transform=\"translate(63.623047 0.765625)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-2212\" transform=\"translate(146.484375 0.765625)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-6e\" transform=\"translate(249.755859 0.765625)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-32\" transform=\"translate(317.784661 39.046875) scale(0.7)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p1841b475fa\">\n",
       "   <rect x=\"42.828125\" y=\"9.688934\" width=\"357.12\" height=\"266.112\"/>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(U_vec, sum_chi_vec, '.-', label=r'Tr[$\\chi_{ch} + \\chi_{sp}$]')\n",
    "plt.plot(U_vec, 0*U_vec + 2*n - n**2, 'k-', lw=0.5, label=r'$2n-n^2$')\n",
    "plt.xlabel(r'$U$')\n",
    "plt.legend();"
   ]
  }
 ],
 "metadata": {
  "@webio": {
   "lastCommId": null,
   "lastKernelId": null
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
