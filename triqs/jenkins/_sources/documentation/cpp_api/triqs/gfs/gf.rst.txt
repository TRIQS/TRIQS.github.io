..
   Generated automatically by cpp2rst

.. highlight:: c
.. role:: red
.. role:: green
.. role:: param


.. _triqs__gfs__gf:

triqs::gfs::gf
==============

*#include <triqs/gfs.hpp>*

.. rst-class:: cppsynopsis

     template<typename M, typename Target, typename Layout> class  :red:`gf`

The Green function container.


Template parameters
-------------------

 * **M**:        The domain of definition

 * **Target**:   The target domain


Member types
------------

.. table::
   :widths: 40 60


   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | mutable_view_type | gf_view<M, Target, typename Layout::with_lowest_guarantee_t>       |                                     |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | const_view_type   | gf_const_view<M, Target, typename Layout::with_lowest_guarantee_t> |  Associated const view type         |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | view_type         | gf_view<M, Target, typename Layout::with_lowest_guarantee_t>       |  Associated (non const) view type   |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | regular_type      | gf<M, Target, Layout>                                              |  Associated regular type (gf<....>) |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | real_t            | gf<M, typename Target::real_t, Layout>                             |  The associated real type           |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | complex_t         | gf<M, typename Target::complex_t, Layout>                          |  The associated complex type        |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | target_t          | Target                                                             |  Template type                      |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | mesh_t            | M                                                                  |  Mesh type                          |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | mesh_point_t      | typename mesh_t::mesh_point_t                                      |  Type of the mesh point             |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | mesh_index_t      | typename mesh_t::index_t                                           |                                     |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | scalar_t          | typename Target::scalar_t                                          |  Real or Complex                    |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | data_t            | nda::basic_array<scalar_t, data_rank, Layout, 'A', nda::heap<>>    |  Type of the data array             |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+
   | target_shape_t    | std::array<long, Target::rank>                                     |                                     |
   +-------------------+--------------------------------------------------------------------+-------------------------------------+


Member functions
----------------

.. table::
   :widths: 40 60


   +----------------------------------------------------+--+
   | :ref:`(constructor) <triqs__gfs__gf__constructor>` |  |
   +----------------------------------------------------+--+
   | :ref:`mesh <triqs__gfs__gf__mesh>`                 |  |
   +----------------------------------------------------+--+
   | :ref:`operator= <triqs__gfs__gf__operator=>`       |  |
   +----------------------------------------------------+--+
   | :ref:`hdf5_format <triqs__gfs__gf__hdf5_format>`   |  |
   +----------------------------------------------------+--+


Accessors
~~~~~~~~~

.. table::
   :widths: 40 60


   +--------------------------------------------------------+--+
   | :ref:`data <triqs__gfs__gf__data>`                     |  |
   +--------------------------------------------------------+--+
   | :ref:`data_shape <triqs__gfs__gf__data_shape>`         |  |
   +--------------------------------------------------------+--+
   | :ref:`target_shape <triqs__gfs__gf__target_shape>`     |  |
   +--------------------------------------------------------+--+
   | :ref:`target_indices <triqs__gfs__gf__target_indices>` |  |
   +--------------------------------------------------------+--+

.. toctree::
    :hidden:

    gf/constructor
    gf/mesh
    gf/data
    gf/data_shape
    gf/target_shape
    gf/target_indices
    gf/operator=
    gf/hdf5_format


Non Member functions
--------------------

.. table::
   :widths: 40 60


   +----------------------------------------------------+--+
   | :ref:`h5_write <triqs__gfs__gf__h5_write>`         |  |
   +----------------------------------------------------+--+
   | :ref:`h5_read <triqs__gfs__gf__h5_read>`           |  |
   +----------------------------------------------------+--+
   | :ref:`operator\<\< <triqs__gfs__gf__operatorLTLT>` |  |
   +----------------------------------------------------+--+

.. toctree::
    :hidden:

    gf/h5_write
    gf/h5_read
    gf/operator<<