..
   Generated automatically by cpp2rst

.. highlight:: c
.. role:: red
.. role:: green
.. role:: param


.. _mpi__mpi_reduce_into:

mpi::mpi_reduce_into
====================

*#include <mpi.hpp>*



**Synopsis**

 .. rst-class:: cppsynopsis

    1. | :green:`template<typename T>`
       | void :red:`mpi_reduce_into` (T const & :param:`x_in`,
       |                  T & :param:`x_out`,
       |                  :ref:`communicator <mpi__communicator>` :param:`c` = {},
       |                  int :param:`root` = 0,
       |                  bool :param:`all` = false,
       |                  MPI_Op :param:`op` = MPI_SUM)

    2. | :green:`template<typename T1, std N1, typename T2, std N2>`
       | void :red:`mpi_reduce_into` (std::array<T1, N1> const & :param:`arr_in`,
       |                  std::array<T2, N2> & :param:`arr_out`,
       |                  :ref:`communicator <mpi__communicator>` :param:`c` = {},
       |                  int :param:`root` = 0,
       |                  bool :param:`all` = false,
       |                  MPI_Op :param:`op` = MPI_SUM)

    3. | :green:`template<typename T1, typename T2>`
       | void :red:`mpi_reduce_into` (std::vector<T1> const & :param:`v_in`,
       |                  std::vector<T2> & :param:`v_out`,
       |                  :ref:`communicator <mpi__communicator>` :param:`c` = {},
       |                  int :param:`root` = 0,
       |                  bool :param:`all` = false,
       |                  MPI_Op :param:`op` = MPI_SUM)

Documentation





Template parameters
^^^^^^^^^^^^^^^^^^^

 * :param:`T` Type to be reduced.

 * :param:`T1` Value type of the array to be reduced.

 * :param:`N1` Size of the array to be reduced.

 * :param:`T2` Value type of the array to be reduced into.

 * :param:`N2` Size of the array to be reduced into.


Parameters
^^^^^^^^^^

 * :param:`x_in` Object to be reduced.

 * :param:`x_out` Object to be reduced into.

 * :param:`c` mpi::communicator.

 * :param:`root` Rank of the root process.

 * :param:`all` Should all processes receive the result of the reduction.

 * :param:`op` `MPI_Op` used in the reduction.

 * :param:`arr_in` `std::array` to reduce.

 * :param:`arr_out` `std::array` to reduce into.

 * :param:`v_in` `std::vector` to reduce.

 * :param:`v_out` `std::vector` to reduce into.