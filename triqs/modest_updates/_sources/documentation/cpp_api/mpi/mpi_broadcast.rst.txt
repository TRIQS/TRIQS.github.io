..
   Generated automatically by cpp2rst

.. highlight:: c
.. role:: red
.. role:: green
.. role:: param


.. _mpi__mpi_broadcast:

mpi::mpi_broadcast
==================

*#include <mpi.hpp>*



**Synopsis**

 .. rst-class:: cppsynopsis

    1. | :green:`template<typename T>`
       | void :red:`mpi_broadcast` (T & :param:`x`, :ref:`communicator <mpi__communicator>` :param:`c` = {}, int :param:`root` = 0)

    2. | :green:`template<typename T, std N>`
       | void :red:`mpi_broadcast` (std::array<T, N> & :param:`arr`, :ref:`communicator <mpi__communicator>` :param:`c` = {}, int :param:`root` = 0)

    3. | :green:`template<typename T1, typename T2>`
       | void :red:`mpi_broadcast` (std::pair<T1, T2> & :param:`p`, :ref:`communicator <mpi__communicator>` :param:`c` = {}, int :param:`root` = 0)

    4. | void :red:`mpi_broadcast` (std::string & :param:`s`, :ref:`communicator <mpi__communicator>` :param:`c`, int :param:`root`)

    5. | :green:`template<typename T>`
       | void :red:`mpi_broadcast` (std::vector<T> & :param:`v`, :ref:`communicator <mpi__communicator>` :param:`c` = {}, int :param:`root` = 0)

Documentation





Template parameters
^^^^^^^^^^^^^^^^^^^

 * :param:`T` Type to be broadcasted.

 * :param:`N` Size of the array.

 * :param:`T1` Type of the first element of the pair.

 * :param:`T2` Type of the second element of the pair.


Parameters
^^^^^^^^^^

 * :param:`x` Object to be broadcasted (into).

 * :param:`c` mpi::communicator.

 * :param:`root` Rank of the root process.

 * :param:`arr` `std::array` to broadcast (into).

 * :param:`p` `std::pair` to broadcast.

 * :param:`s` `std::string` to broadcast (into).

 * :param:`v` `std::vector` to broadcast.