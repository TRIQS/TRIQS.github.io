..
   Generated automatically by cpp2rst

.. highlight:: c
.. role:: red
.. role:: green
.. role:: param


.. _itertools__enumerated:

itertools::enumerated
=====================

*#include <itertools.hpp>*

.. rst-class:: cppsynopsis

     template<typename R> class  :red:`enumerated`




Template parameters
-------------------

 * **R**: Range type.


Public members
--------------

.. table::
   :widths: 40 60


   +----+---+------------------+
   | rg | R |  Original range. |
   +----+---+------------------+


Member types
------------

.. table::
   :widths: 40 60


   +----------------+--------------------------------------+-----------------------------------------------+
   | iterator       | enum_iter<decltype(std::begin(rg))>  |  Iterator type of the enumerated range.       |
   +----------------+--------------------------------------+-----------------------------------------------+
   | const_iterator | enum_iter<decltype(std::cbegin(rg))> |  Const iterator type of the enumerated range. |
   +----------------+--------------------------------------+-----------------------------------------------+


Member functions
----------------

.. table::
   :widths: 40 60


   +-------------------------------------------------------+------------------------------------+
   | :ref:`operator== <itertools__enumerated__operator==>` |                                    |
   +-------------------------------------------------------+------------------------------------+
   | :ref:`begin <itertools__enumerated__begin>`           | Beginning of the enumerated range. |
   +-------------------------------------------------------+------------------------------------+
   | :ref:`cbegin <itertools__enumerated__cbegin>`         |                                    |
   +-------------------------------------------------------+------------------------------------+
   | :ref:`end <itertools__enumerated__end>`               | End of the enumerated range.       |
   +-------------------------------------------------------+------------------------------------+
   | :ref:`cend <itertools__enumerated__cend>`             |                                    |
   +-------------------------------------------------------+------------------------------------+

.. toctree::
    :hidden:

    enumerated/operator==
    enumerated/begin
    enumerated/cbegin
    enumerated/end
    enumerated/cend