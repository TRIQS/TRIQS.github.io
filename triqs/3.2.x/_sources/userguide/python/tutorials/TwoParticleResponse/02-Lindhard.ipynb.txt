{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Lindhard susceptibility $\\chi_0$ for a non interacting electron gas\n",
    "\n",
    "\n",
    "The Lindhard function is defined by the equation\n",
    "\n",
    "\\begin{equation}\n",
    "  \\chi_0(\\mathbf{q}, i\\omega_n) = \n",
    "    -2\\frac{1}{\\beta N}\\sum_{\\mathbf{k}, m} \n",
    "    G_0(\\mathbf{k}, i\\nu_m)G_0(\\mathbf{k}+\\mathbf{q}, i\\nu_m + i\\omega_n) \n",
    "\\end{equation}\n",
    "\n",
    "where $\\mathbf{q}$ and $\\mathbf{k}$ are momenta and $i\\omega_n$ and $i\\nu_m$ are Bosonic and Fermionic Matsubara frequencies, respectively, and N the number of $\\mathbf{k}$ points.\n",
    "\n",
    "Since the equation is a convolution in both momentum and frequency space the calculation can be done in fewer operations by Fourier transforming to imaginary time $\\tau$ and real space $\\mathbf{r}$ for the Green's function, using fast Fourier transforms (FFT) to compute\n",
    "\n",
    "$$\n",
    "G_0(\\mathbf{r}, \\tau) = \n",
    "  \\mathcal{F}_{\\{\\mathbf{k}, i\\nu_m\\} \\rightarrow \\{\\mathbf{r}, \\tau\\}} \n",
    "  \\big\\{ G_0(\\mathbf{k}, i\\nu_n) \\big\\}.\n",
    "$$\n",
    "\n",
    "In real space $\\mathbf{r}$ and imaginary time $\\tau$ the convolution for $\\chi_0$ is a simple product (since it corresponds to a simple bubble diagram with a particle-hole excitation)\n",
    "\n",
    "$$\n",
    "\\chi_0(\\mathbf{r},\\tau) = 2 G_0(\\mathbf{r},\\tau)G_0(-\\mathbf{r},\\beta -\\tau)\n",
    "$$\n",
    "\n",
    "and finally one goes back to momentum and Matsubara frequency by two more fast Fourier transforms\n",
    "\n",
    "$$ \n",
    "  \\chi_0(\\mathbf{q},i\\omega_n) \\equiv \n",
    "  \\mathcal{F}_{\\{\\mathbf{r},\\tau\\} \\rightarrow \\{\\mathbf{q}, i\\omega_n\\}} \n",
    "  \\big\\{ \\chi_0(\\mathbf{r}, \\tau) \\big\\}\n",
    "$$\n",
    "\n",
    "\n",
    "The goal of this notebook is to compute $\\chi_0$ and study it, plot it. We will answer the following questions:\n",
    "\n",
    "- **How many operations are saved by using fast Fourier transforms rather than evaluating the convolutions directly?**\n",
    "\n",
    "- **At what momenta $\\mathbf{q}$ does the susceptibility $\\chi_0$ have a maxima at zero frequency?**\n",
    "\n",
    "- **How is the position of that maximum related to the Fermi surface?**\n",
    "   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Imports \n",
    "from triqs.lattice import BravaisLattice, BrillouinZone\n",
    "from triqs.gf import MeshBrZone, MeshImFreq, Gf, MeshProduct\n",
    "from h5 import HDFArchive\n",
    "from triqs.plot.mpl_interface import plt, oplot\n",
    "%matplotlib inline\n",
    "import numpy as np\n",
    "from math import cos, pi"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Computing $\\chi_0$ in C++"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "While it is possible to compute $\\chi_0$ in Python, it is relatively slow using a simple code using a double loop over $r$ and $\\tau$.\n",
    "\n",
    "This a good opportunity to illustrate the C++ layer of the TRIQS library, using the [TRIQS/cpp2py](https://github.com/triqs/cpp2py) tool to wrap Python and C++ in a simple case.\n",
    "\n",
    "We first import the ipython \"magic\" command `%%cpp2py`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%reload_ext cpp2py.magic"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When executing a cell beginning with this \"magic\" command, the contained C++ code is analyzed by the Clang compiler, and wrapping code (to expose it to Python) is generated.\n",
    "This code is then compiled and linked into a Python module, which is loaded automatically, making the `bubble` function available in Python.\n",
    "\n",
    "The `bubble` function computes the Lindhard function by performing the three steps described in the previous section.\n",
    "Try to get a general idea of what the code is doing.\n",
    "\n",
    "Executing the cell below may take a few seconds to compile ..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%%cpp2py -C triqs --cxxflags '-std=c++20'\n",
    "#include <triqs/gfs.hpp>\n",
    "using namespace triqs::gfs;\n",
    "\n",
    "// The type of a Green's function : (k,omega) -> Complex number\n",
    "using g_k_w_vt = gf_view<prod<brzone, imfreq>, scalar_valued>;\n",
    "using g_r_t_t  = gf<prod<cyclat, imtime>, scalar_valued>;\n",
    "\n",
    "auto bubble(g_k_w_vt G0) {\n",
    "    \n",
    "    // Fourier Transformation of k, \\omega to obtain g(r,t)\n",
    "    auto grt = make_gf_from_fourier<0,1>(G0);\n",
    "    \n",
    "    // The mesh of gtr is a cartesian product mt x mr. We decompose it.\n",
    "    auto [mr, mt] = grt.mesh();\n",
    "    \n",
    "    // The inverse temperature from the mesh\n",
    "    double beta = mt.domain().beta;\n",
    "    \n",
    "    // A new mesh for chi, with a bosonic statistics, but same size as mt.\n",
    "    auto mtb = gf_mesh<imtime>{beta, Boson, mt.size()};\n",
    "    \n",
    "    // Build chi (r, tau) with this new mesh.\n",
    "    auto chi0 = g_r_t_t{{mr, mtb}};\n",
    "\n",
    "    // we fill chi : chi(r, tau) = 2 * g(-r, beta - tau) * g(r, tau)\n",
    "    for (auto const &r : mr)\n",
    "        for (auto const &t : mtb)\n",
    "            chi0[r, t] = 2*grt(-r, beta - t) * grt(r, t);\n",
    "\n",
    "    // Fourier transform back to k, \\omega space and return\n",
    "    return make_gf_from_fourier<0,1>(chi0);\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Compute the Lindhard susceptibility $\\chi_0(\\mathbf{q}, i\\omega_n)$\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Reload the G0 from TPSC 1\n",
    "with HDFArchive(\"tpsc.h5\",'r') as R:\n",
    "    G0 = R['G0']\n",
    "\n",
    "chi0_qw = bubble(G0)\n",
    "\n",
    "# Save it for later reuse\n",
    "with HDFArchive(\"tpsc.h5\") as R:\n",
    "    R['chi0_qw'] = chi0_qw"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Static Lindhard susceptibility $\\chi_0(\\mathbf{q}, \\omega=0)$\n",
    "\n",
    "The square lattice with nearest-neighbour hopping $t$ has a property called \"perfect nesting\", meaning that large parts of the Fermi surface are mapped on to each other by a single momentum transfer $\\mathbf{k}_{nesting}$, where $\\mathbf{k}_{nesting}$ is called the \"nesting vector\". \n",
    "\n",
    "Go back to the plot of $-\\frac{1}{\\pi} Im G_0(\\mathbf{k}, i\\omega_0)$ and determine this peculiar momentum vector.\n",
    "\n",
    "The \"perfect nesting\" greatly enhances the particle-hole susceptibility $\\chi_0$ of the system and the static Lindhard susceptibility $\\chi_0(\\mathbf{q}, \\omega=0)$ has a dominant peak at this momentum.\n",
    "\n",
    "This can be seen as follows. Using the expression for the Greens function and performing the sum over Matsubara frequencies, one finds that the susceptibility (Lindhard function at $\\omega=0$) takes the form\n",
    "\n",
    "\\begin{equation}\n",
    "  \\chi_0(\\mathbf{q}, \\omega=0) = \n",
    "    -2\\frac{1}{\\beta N}\\sum_{\\mathbf{k}, m} \n",
    "    G_0(\\mathbf{k}, i\\nu_m)G_0(\\mathbf{k}+\\mathbf{q}, i\\nu_m)= -\\frac{2}{\\beta N}\\sum_{\\mathbf{k}}\\frac{f(\\epsilon(\\mathbf{k}))-f(\\epsilon(\\mathbf{k+q}))}{\\epsilon(\\mathbf{k})-\\epsilon(\\mathbf{k+q})}.\n",
    "\\end{equation}\n",
    "\n",
    "The form appears natural if we just think of the structure of perturbation theory. At $\\mathbf{Q}=(\\pi,\\pi)$, the property of the cosine give that $\\epsilon(\\mathbf{k+Q})=-\\epsilon(\\mathbf{k})$. And since $f(-\\epsilon(\\mathbf{k}))=1-f(\\epsilon(\\mathbf{k}))$ we have\n",
    "\n",
    "\\begin{equation}\n",
    "  \\chi_0(\\mathbf{q}=\\mathbf{Q}, \\omega=0) = \n",
    "    -\\frac{2}{\\beta N}\\sum_{\\mathbf{k}}\\frac{\\tanh(\\beta\\epsilon(\\mathbf{k})/2)}{2\\epsilon(\\mathbf{k})}\n",
    "\\end{equation}\n",
    "which diverges as $T \\rightarrow 0$ (i.e. when $\\beta \\rightarrow \\infty$)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot the susceptibility"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <i class=\"fa fa-gear fa-x\" style=\"color: #186391\"></i> Exercise 1\n",
    "\n",
    "Using the code to plot the spectral function in the previous notebook, \n",
    "make a color plot for the static susceptibility $\\chi_0(\\mathbf{q}, \\omega=0)$\n",
    "on a grid $[0,2\\pi]^2$.\n",
    "\n",
    "NB : The solution will also provide you with a similar 3D plot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <i class=\"fa fa-gear fa-x\" style=\"color: #186391\"></i> Exercise 2:  Structure in Matsubara frequency $i\\omega_n$\n",
    "\n",
    "Plot the susceptibility $\\chi_0(\\mathbf{q}, i\\omega_n)$ for $\\mathbf{q}$ points from \n",
    "$(0,\\pi)$ to $(\\pi,\\pi)$, vs $\\omega_n$.\n",
    "\n",
    "Hint : Use the partial evaluation technique shown in previous notebooks.\n",
    "\n",
    "Does the divergence manifest itself at every frequencies ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <i class=\"fa fa-gear fa-x\" style=\"color: #186391\"></i> Exercice 3:  Static susceptibility $\\chi_0(\\mathbf{q}, \\omega=0)$ along high symmetry paths in the Brillouin zone\n",
    "\n",
    "Plot the static susceptibility $\\chi_0(\\mathbf{q}, \\omega=0)$ along the following path\n",
    "in the Brillouin Zone: $\\Gamma \\rightarrow X \\rightarrow M \\rightarrow \\Gamma$\n",
    "where $\\Gamma = (0,  0 , 0)$, $X = (\\pi, \\pi, 0)$ and  $M = (\\pi, 0,  0)$.\n",
    "\n",
    "What is the effect of the nesting of the Fermi surface ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
