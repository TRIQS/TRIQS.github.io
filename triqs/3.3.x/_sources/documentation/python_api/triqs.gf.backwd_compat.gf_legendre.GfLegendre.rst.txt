triqs.gf.backwd\_compat.gf\_legendre.GfLegendre
===============================================

.. currentmodule:: triqs.gf.backwd_compat.gf_legendre

.. autoclass:: GfLegendre



.. rubric:: Methods

.. autosummary::
    :toctree:                             
    
      ~GfLegendre.__init__
      ~GfLegendre.conjugate
      ~GfLegendre.copy
      ~GfLegendre.copy_from
      ~GfLegendre.density
      ~GfLegendre.enforce_discontinuity
      ~GfLegendre.fit_hermitian_tail
      ~GfLegendre.fit_hermitian_tail_on_window
      ~GfLegendre.fit_tail
      ~GfLegendre.fit_tail_on_window
      ~GfLegendre.from_L_G_R
      ~GfLegendre.inverse
      ~GfLegendre.invert
      ~GfLegendre.is_gf_hermitian
      ~GfLegendre.is_gf_real_in_tau
      ~GfLegendre.rebinning_tau
      ~GfLegendre.replace_by_tail
      ~GfLegendre.replace_by_tail_in_fit_window
      ~GfLegendre.set_from_fourier
      ~GfLegendre.set_from_imfreq
      ~GfLegendre.set_from_imtime
      ~GfLegendre.set_from_legendre
      ~GfLegendre.set_from_pade
      ~GfLegendre.tau_L2_norm
      ~GfLegendre.total_density
      ~GfLegendre.transpose
      ~GfLegendre.x_data_view
      ~GfLegendre.zero





.. rubric:: Attributes

.. autosummary::
    :toctree:                             
    
      ~GfLegendre.data
      ~GfLegendre.imag
      ~GfLegendre.indices
      ~GfLegendre.mesh
      ~GfLegendre.rank
      ~GfLegendre.real
      ~GfLegendre.target_indices
      ~GfLegendre.target_rank
      ~GfLegendre.target_shape

