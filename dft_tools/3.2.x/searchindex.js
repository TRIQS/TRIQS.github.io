Search.setIndex({"alltitles": {"A general H(k)": [[365, "a-general-h-k"]], "A simple example: SrVO3": [[377, "a-simple-example-srvo3"]], "About": [[352, "about"]], "Advanced Topics": [[358, "advanced-topics"]], "After generating the projectors": [[371, "after-generating-the-projectors"]], "Anaconda (experimental)": [[375, "anaconda-experimental"]], "Analytic Continuation": [[354, "analytic-continuation"]], "Authors & Quotation": [[352, "authors-quotation"]], "Automatic basis rotations in DFT+DMFT": [[360, "automatic-basis-rotations-in-dft-dmft"]], "Automatic transformation during the DMFT loop": [[360, "automatic-transformation-during-the-dmft-loop"]], "Band mode": [[363, "band-mode"]], "Band resolved density matrices": [[361, "band-resolved-density-matrices"]], "Basic notions": [[358, "basic-notions"]], "Basis rotations": [[362, "basis-rotations"]], "Basis rotations: Sr2MgOsO6 without SOC": [[377, "basis-rotations-sr2mgoso6-without-soc"]], "Ce-gamma.py": [[380, "ce-gamma-py"]], "Ce-gamma_DOS.py": [[379, "ce-gamma-dos-py"]], "Change in gf_struct": [[0, "change-in-gf-struct"]], "Changelog": [[0, "changelog"]], "Charge self-consistent DMFT": [[388, "charge-self-consistent-dmft"]], "Cmake": [[0, "cmake"]], "Compiling DFTTools from source": [[375, "compiling-dfttools-from-source"]], "Complex example: NiO": [[377, "complex-example-nio"]], "Construction of local orbitals from DFT": [[358, "construction-of-local-orbitals-from-dft"]], "Conversion for the DMFT self-consistency cycle": [[364, "conversion-for-the-dmft-self-consistency-cycle"], [366, "conversion-for-the-dmft-self-consistency-cycle"], [367, "conversion-for-the-dmft-self-consistency-cycle"]], "Converter example: SrVO3": [[377, "converter-example-srvo3"]], "Converter specific data": [[373, "converter-specific-data"]], "Converting to hdf5 file": [[388, "converting-to-hdf5-file"], [395, "Converting-to-hdf5-file"]], "Creating a block structure and Green\u2019s function": [[362, "creating-a-block-structure-and-green-s-function"]], "Current limitations": [[363, "current-limitations"]], "Custom CMake options": [[375, "custom-cmake-options"]], "DFT (Wien2k) and Wannier orbitals": [[391, "dft-wien2k-and-wannier-orbitals"], [392, "dft-wien2k-and-wannier-orbitals"], [393, "dft-wien2k-and-wannier-orbitals"]], "DFT and projections": [[388, "dft-and-projections"]], "DFT setup": [[391, "dft-setup"], [392, "dft-setup"], [393, "dft-setup"]], "DFT+DMFT": [[358, "dft-dmft"]], "DFT+DMFT tutorial: Ce with Hubbard-I approximation": [[378, "dft-dmft-tutorial-ce-with-hubbard-i-approximation"]], "DFT+DMFT wavefunction dependent quantities": [[364, "dft-dmft-wavefunction-dependent-quantities"]], "DFTTools": [[374, "dfttools"]], "DFTTools 3.2.1": [[374, null]], "DMFT": [[388, "dmft"]], "DMFT cycle": [[393, "dmft-cycle"], [394, "dmft-cycle"]], "DMFT setup: Hubbard-I calculations in TRIQS": [[378, "dmft-setup-hubbard-i-calculations-in-triqs"]], "Data for post-processing": [[367, "data-for-post-processing"]], "Data for post-processing - Correlated Spectral functions": [[364, "data-for-post-processing-correlated-spectral-functions"]], "Data for transport calculations": [[367, "data-for-transport-calculations"]], "Density of states": [[361, "density-of-states"]], "Density-functional theory in a (very small) nutshell": [[353, "density-functional-theory-in-a-very-small-nutshell"]], "Dependency Management": [[0, "dependency-management"]], "Diagonal approximation": [[362, "diagonal-approximation"]], "Disclaimer": [[352, "disclaimer"]], "Docker": [[375, "docker"]], "Documentation": [[0, "documentation"], [358, "documentation"]], "Doing the DMFT loop": [[370, "doing-the-dmft-loop"]], "Elk": [[0, "elk"], [369, "elk"]], "Elk interface examples": [[377, "elk-interface-examples"]], "Elk to TRIQS": [[394, "elk-to-triqs"]], "Energy contours of the k-resolved Spectral function": [[361, "energy-contours-of-the-k-resolved-spectral-function"]], "Example": [[372, "example"]], "Executing your python scripts": [[355, "executing-your-python-scripts"]], "FAQs": [[358, "faqs"]], "File of transformation matrices": [[366, "file-of-transformation-matrices"]], "Finding the transformation matrix": [[360, "finding-the-transformation-matrix"]], "Formalism": [[372, "formalism"]], "Frequently-Asked Questions": [[359, "frequently-asked-questions"]], "From DFT to DMFT": [[353, "from-dft-to-dmft"]], "Full charge self consistency": [[355, "full-charge-self-consistency"]], "Full charge self consistency with Wien2k: \\gamma-Ce": [[377, "full-charge-self-consistency-with-wien2k-gamma-ce"]], "Full charge self-consistency": [[353, "full-charge-self-consistency"], [369, "full-charge-self-consistency"]], "Fully charge self-consistent DFT+DMFT calculation": [[378, "fully-charge-self-consistent-dft-dmft-calculation"]], "General": [[0, "general"], [0, "id2"]], "General and simple H(k) Converter": [[373, "general-and-simple-h-k-converter"]], "General interface": [[355, "general-interface"]], "How do I get real-frequency quantities?": [[359, "how-do-i-get-real-frequency-quantities"]], "How do I plot the output of spaghettis?": [[359, "how-do-i-plot-the-output-of-spaghettis"]], "INCAR": [[381, "incar"]], "Important note for FCSC DFT+DMFT calculations": [[375, "important-note-for-fcsc-dft-dmft-calculations"]], "Initialisation": [[361, "initialisation"]], "Initialization of the calculation": [[370, "initialization-of-the-calculation"]], "Initializing SumkDFT": [[393, "initializing-sumkdft"], [394, "initializing-sumkdft"]], "Initializing the solver": [[393, "initializing-the-solver"], [394, "initializing-the-solver"]], "Input file format": [[366, "input-file-format"]], "Installation": [[375, "installation"]], "Installation steps": [[375, "installation-steps"]], "Installation steps for the use with WIEN2K version 14.2 and older": [[375, "installation-steps-for-the-use-with-wien2k-version-14-2-and-older"]], "Interface with Elk": [[364, "interface-with-elk"]], "Interface with VASP": [[366, "interface-with-vasp"]], "Interface with Wannier90": [[363, "interface-with-wannier90"]], "Interface with Wien2k": [[367, "interface-with-wien2k"]], "Interfaces to other packages": [[368, "interfaces-to-other-packages"]], "Introduction to DFT+DMFT": [[353, "introduction-to-dft-dmft"]], "KPOINTS": [[382, "kpoints"]], "Learn how to use TRIQS library (and the CTHYB solver)": [[354, "learn-how-to-use-triqs-library-and-the-cthyb-solver"]], "License": [[352, "license"]], "Limitations of the interface": [[366, "limitations-of-the-interface"]], "Loading modules": [[393, "loading-modules"], [394, "loading-modules"]], "Local lattice Green\u2019s function for all projected orbitals": [[388, "local-lattice-green-s-function-for-all-projected-orbitals"]], "MPI issues": [[368, "mpi-issues"]], "Main data": [[373, "main-data"]], "Manipulating the Green\u2019s functions block structure": [[362, "manipulating-the-green-s-functions-block-structure"]], "Mixing": [[370, "mixing"]], "Momentum resolved spectral function (with real-frequency self energy)": [[361, "momentum-resolved-spectral-function-with-real-frequency-self-energy"]], "NiO_local_lattice_GF.py": [[383, "nio-local-lattice-gf-py"]], "Orbital mode": [[363, "orbital-mode"]], "Other Changes:": [[0, "id3"]], "Other DFT codes": [[369, "other-dft-codes"]], "Other changes": [[0, "other-changes"]], "PLOVASP": [[388, "plovasp"], [395, "PLOVASP"]], "PLOVASP detailed guide": [[366, "plovasp-detailed-guide"]], "PLOVASP: converting VASP output": [[366, "plovasp-converting-vasp-output"]], "POSCAR": [[384, "poscar"]], "Packaged Versions of DFTTools": [[375, "packaged-versions-of-dfttools"]], "Partial charges": [[361, "partial-charges"]], "Performing the projection in Wien2k": [[371, "performing-the-projection-in-wien2k"]], "Picking orbitals": [[362, "picking-orbitals"]], "Post-processing": [[355, "post-processing"]], "Post-processing and data analysis": [[378, "post-processing-and-data-analysis"]], "Postprocessing": [[358, "postprocessing"]], "Prequisites from Elk": [[372, "prequisites-from-elk"]], "Prequisites from Wien2k": [[372, "prequisites-from-wien2k"]], "Prerequisites": [[372, "prerequisites"], [375, "prerequisites"]], "Reference manual": [[358, "reference-manual"]], "References": [[372, "references"]], "Remarks on the VASP version": [[366, "remarks-on-the-vasp-version"]], "Reporting issues": [[376, "reporting-issues"]], "Restarting a calculation": [[370, "restarting-a-calculation"]], "Restructuring": [[0, "restructuring"]], "Rotating the basis": [[391, "rotating-the-basis"], [392, "rotating-the-basis"]], "Rotation matrix": [[363, "rotation-matrix"]], "Running the VASP converter": [[366, "running-the-vasp-converter"]], "Section [General]": [[366, "section-general"]], "Section [Group]": [[366, "section-group"]], "Section [Shell]": [[366, "section-shell"]], "Setting up the impurity solver": [[370, "setting-up-the-impurity-solver"]], "Setting up the initial solver structure from DFT": [[360, "setting-up-the-initial-solver-structure-from-dft"]], "Simple Converter example: SrVO3": [[377, "simple-converter-example-srvo3"]], "Single-shot DFT+DMFT": [[370, "single-shot-dft-dmft"]], "Spectral function Energy Contour Plots (Fermi Surfaces) from Elk inputs": [[364, "spectral-function-energy-contour-plots-fermi-surfaces-from-elk-inputs"]], "Spectral function on real axis: MaxEnt": [[388, "spectral-function-on-real-axis-maxent"]], "Spin-orbit coupled calculations (single-shot)": [[371, "spin-orbit-coupled-calculations-single-shot"]], "Sr2MgOsO6 with SOC (non-magnetic)": [[377, "sr2mgoso6-with-soc-non-magnetic"]], "Structure of DFTTools": [[355, "structure-of-dfttools"]], "Supported interfaces": [[368, "supported-interfaces"]], "Symmetry operations": [[373, "symmetry-operations"]], "TRIQS to Elk (Fully Charge Self-Consistent DFT+DMFT)": [[394, "triqs-to-elk-fully-charge-self-consistent-dft-dmft"]], "Tail fit parameters": [[393, "tail-fit-parameters"]], "The DMFT calculation": [[355, "the-dmft-calculation"], [391, "the-dmft-calculation"], [392, "the-dmft-calculation"], [393, "the-dmft-calculation"], [394, "the-dmft-calculation"]], "The DMFT loop with automatic basis rotations": [[391, "the-dmft-loop-with-automatic-basis-rotations"], [392, "the-dmft-loop-with-automatic-basis-rotations"]], "The interaction Hamiltonian": [[391, "the-interaction-hamiltonian"], [392, "the-interaction-hamiltonian"]], "The interface layer": [[355, "the-interface-layer"]], "The solver structure": [[362, "the-solver-structure"]], "Tools for analysis": [[361, "tools-for-analysis"]], "Transport calculations": [[372, "transport-calculations"]], "Treatment of SOC in DFT": [[371, "treatment-of-soc-in-dft"]], "Treatment of SOC in Elk": [[371, "treatment-of-soc-in-elk"]], "Treatment of SOC in Wien2k": [[371, "treatment-of-soc-in-wien2k"]], "Tutorials": [[377, "tutorials"]], "Ubuntu Debian packages": [[375, "ubuntu-debian-packages"]], "Understand the philosophy of DFTTools": [[354, "understand-the-philosophy-of-dfttools"]], "Using projective Wannier functions for DMFT": [[353, "using-projective-wannier-functions-for-dmft"]], "Using the transport code": [[372, "using-the-transport-code"]], "VASP + PLOVasp": [[369, "vasp-plovasp"]], "VASP input-output": [[366, "vasp-input-output"]], "VASP interface examples": [[377, "vasp-interface-examples"]], "VASP setup": [[388, "vasp-setup"], [395, "VASP-setup"]], "VASP: generating raw projectors": [[366, "vasp-generating-raw-projectors"]], "Vasp": [[0, "vasp"]], "Version 2.1.x (changes since 1.4)": [[0, "version-2-1-x-changes-since-1-4"]], "Version 2.2.0": [[0, "version-2-2-0"]], "Version 2.2.1": [[0, "version-2-2-1"]], "Version 3.0.0": [[0, "version-3-0-0"]], "Version 3.1.0": [[0, "version-3-1-0"]], "Version 3.1.1": [[0, "version-3-1-1"]], "Version 3.2.0": [[0, "version-3-2-0"]], "Version 3.2.1": [[0, "version-3-2-1"]], "Version compatibility": [[375, "version-compatibility"]], "Wannier orbitals": [[391, "wannier-orbitals"], [392, "wannier-orbitals"], [393, "wannier-orbitals"]], "Wannier orbitals: dmftproj": [[378, "wannier-orbitals-dmftproj"]], "Wannier90 Converter": [[0, "wannier90-converter"]], "What is DFTTools?": [[354, "what-is-dfttools"]], "What you should know": [[354, "what-you-should-know"]], "Wien2k + dmftproj": [[369, "wien2k-dmftproj"]], "Wien2k interface": [[355, "wien2k-interface"]], "Wien2k optics package": [[372, "wien2k-optics-package"]], "Wien2k setup": [[378, "wien2k-setup"]], "atm": [[94, "module-triqs_dft_tools.converters.plovasp.atm"]], "block_structure": [[1, "module-triqs_dft_tools.block_structure"]], "clean": [[0, "clean"]], "converter": [[96, "module-triqs_dft_tools.converters.plovasp.converter"]], "converter.py": [[385, "converter-py"]], "converter_tools": [[27, "module-triqs_dft_tools.converters.converter_tools"]], "converters": [[26, "module-triqs_dft_tools.converters"]], "dmft script": [[388, "dmft-script"]], "elk": [[33, "module-triqs_dft_tools.converters.elk"]], "elk_converter_tools": [[72, "module-triqs_dft_tools.converters.elktools.elk_converter_tools"]], "elktools": [[71, "module-triqs_dft_tools.converters.elktools"]], "elstruct": [[99, "module-triqs_dft_tools.converters.plovasp.elstruct"]], "groups and their formats": [[373, "groups-and-their-formats"]], "hk": [[86, "module-triqs_dft_tools.converters.hk"]], "inpconf": [[103, "module-triqs_dft_tools.converters.plovasp.inpconf"]], "maxent.py": [[386, "maxent-py"]], "nio.py": [[387, "nio-py"]], "nio_csc.py": [[389, "nio-csc-py"]], "plo.cfg": [[390, "plo-cfg"]], "plotools": [[121, "module-triqs_dft_tools.converters.plovasp.plotools"]], "plovasp": [[93, "module-triqs_dft_tools.converters.plovasp"]], "plovasp.converter": [[96, "plovasp-converter"]], "plovasp.elstruct": [[99, "plovasp-elstruct"]], "plovasp.inpconfig": [[103, "plovasp-inpconfig"]], "plovasp.plotools": [[121, "plovasp-plotools"]], "plovasp.proj_group": [[130, "plovasp-proj-group"]], "plovasp.proj_shell": [[140, "plovasp-proj-shell"]], "plovasp.vaspio": [[173, "plovasp-vaspio"]], "proj_group": [[130, "module-triqs_dft_tools.converters.plovasp.proj_group"]], "proj_shell": [[140, "module-triqs_dft_tools.converters.plovasp.proj_shell"]], "readElkfiles": [[85, "module-triqs_dft_tools.converters.elktools.readElkfiles"]], "sc_dmft": [[157, "module-triqs_dft_tools.converters.plovasp.sc_dmft"]], "standardized hdf5 structure": [[373, "standardized-hdf5-structure"]], "sumk_dft": [[239, "module-triqs_dft_tools.sumk_dft"]], "sumk_dft_tools": [[285, "module-triqs_dft_tools.sumk_dft_tools"]], "symmetry": [[340, "module-triqs_dft_tools.symmetry"]], "trans_basis": [[344, "module-triqs_dft_tools.trans_basis"]], "triqs_dft_tools": [[357, "triqs-dft-tools"]], "triqs_dft_tools.block_structure.BlockStructure": [[2, "triqs-dft-tools-block-structure-blockstructure"]], "triqs_dft_tools.block_structure.BlockStructure.__init__": [[3, "triqs-dft-tools-block-structure-blockstructure-init"]], "triqs_dft_tools.block_structure.BlockStructure.adapt_deg_shells": [[4, "triqs-dft-tools-block-structure-blockstructure-adapt-deg-shells"]], "triqs_dft_tools.block_structure.BlockStructure.approximate_as_diagonal": [[5, "triqs-dft-tools-block-structure-blockstructure-approximate-as-diagonal"]], "triqs_dft_tools.block_structure.BlockStructure.check_gf": [[6, "triqs-dft-tools-block-structure-blockstructure-check-gf"]], "triqs_dft_tools.block_structure.BlockStructure.check_matrix": [[7, "triqs-dft-tools-block-structure-blockstructure-check-matrix"]], "triqs_dft_tools.block_structure.BlockStructure.convert_gf": [[8, "triqs-dft-tools-block-structure-blockstructure-convert-gf"]], "triqs_dft_tools.block_structure.BlockStructure.convert_matrix": [[9, "triqs-dft-tools-block-structure-blockstructure-convert-matrix"]], "triqs_dft_tools.block_structure.BlockStructure.convert_operator": [[10, "triqs-dft-tools-block-structure-blockstructure-convert-operator"]], "triqs_dft_tools.block_structure.BlockStructure.copy": [[11, "triqs-dft-tools-block-structure-blockstructure-copy"]], "triqs_dft_tools.block_structure.BlockStructure.create_gf": [[12, "triqs-dft-tools-block-structure-blockstructure-create-gf"]], "triqs_dft_tools.block_structure.BlockStructure.create_matrix": [[13, "triqs-dft-tools-block-structure-blockstructure-create-matrix"]], "triqs_dft_tools.block_structure.BlockStructure.effective_transformation_solver": [[14, "triqs-dft-tools-block-structure-blockstructure-effective-transformation-solver"]], "triqs_dft_tools.block_structure.BlockStructure.effective_transformation_sumk": [[15, "triqs-dft-tools-block-structure-blockstructure-effective-transformation-sumk"]], "triqs_dft_tools.block_structure.BlockStructure.full_structure": [[16, "triqs-dft-tools-block-structure-blockstructure-full-structure"]], "triqs_dft_tools.block_structure.BlockStructure.gf_struct_solver_dict": [[17, "triqs-dft-tools-block-structure-blockstructure-gf-struct-solver-dict"]], "triqs_dft_tools.block_structure.BlockStructure.gf_struct_solver_list": [[18, "triqs-dft-tools-block-structure-blockstructure-gf-struct-solver-list"]], "triqs_dft_tools.block_structure.BlockStructure.gf_struct_sumk_dict": [[19, "triqs-dft-tools-block-structure-blockstructure-gf-struct-sumk-dict"]], "triqs_dft_tools.block_structure.BlockStructure.gf_struct_sumk_list": [[20, "triqs-dft-tools-block-structure-blockstructure-gf-struct-sumk-list"]], "triqs_dft_tools.block_structure.BlockStructure.inequiv_to_corr": [[21, "triqs-dft-tools-block-structure-blockstructure-inequiv-to-corr"]], "triqs_dft_tools.block_structure.BlockStructure.map_gf_struct_solver": [[22, "triqs-dft-tools-block-structure-blockstructure-map-gf-struct-solver"]], "triqs_dft_tools.block_structure.BlockStructure.pick_gf_struct_solver": [[23, "triqs-dft-tools-block-structure-blockstructure-pick-gf-struct-solver"]], "triqs_dft_tools.block_structure.BlockStructure.pick_gf_struct_sumk": [[24, "triqs-dft-tools-block-structure-blockstructure-pick-gf-struct-sumk"]], "triqs_dft_tools.block_structure.BlockStructure.sumk_to_solver_block": [[25, "triqs-dft-tools-block-structure-blockstructure-sumk-to-solver-block"]], "triqs_dft_tools.converters.converter_tools.ConverterTools": [[28, "triqs-dft-tools-converters-converter-tools-convertertools"]], "triqs_dft_tools.converters.converter_tools.ConverterTools.__init__": [[29, "triqs-dft-tools-converters-converter-tools-convertertools-init"]], "triqs_dft_tools.converters.converter_tools.ConverterTools.det_shell_equivalence": [[30, "triqs-dft-tools-converters-converter-tools-convertertools-det-shell-equivalence"]], "triqs_dft_tools.converters.converter_tools.ConverterTools.read_fortran_file": [[31, "triqs-dft-tools-converters-converter-tools-convertertools-read-fortran-file"]], "triqs_dft_tools.converters.converter_tools.ConverterTools.repack": [[32, "triqs-dft-tools-converters-converter-tools-convertertools-repack"]], "triqs_dft_tools.converters.elk.ElkConverter": [[34, "triqs-dft-tools-converters-elk-elkconverter"]], "triqs_dft_tools.converters.elk.ElkConverter.__init__": [[35, "triqs-dft-tools-converters-elk-elkconverter-init"]], "triqs_dft_tools.converters.elk.ElkConverter.axangsu2": [[36, "triqs-dft-tools-converters-elk-elkconverter-axangsu2"]], "triqs_dft_tools.converters.elk.ElkConverter.bzfoldout": [[37, "triqs-dft-tools-converters-elk-elkconverter-bzfoldout"]], "triqs_dft_tools.converters.elk.ElkConverter.check_dens": [[38, "triqs-dft-tools-converters-elk-elkconverter-check-dens"]], "triqs_dft_tools.converters.elk.ElkConverter.convert_bands_input": [[39, "triqs-dft-tools-converters-elk-elkconverter-convert-bands-input"]], "triqs_dft_tools.converters.elk.ElkConverter.convert_contours_input": [[40, "triqs-dft-tools-converters-elk-elkconverter-convert-contours-input"]], "triqs_dft_tools.converters.elk.ElkConverter.convert_dft_input": [[41, "triqs-dft-tools-converters-elk-elkconverter-convert-dft-input"]], "triqs_dft_tools.converters.elk.ElkConverter.convert_transport_input": [[42, "triqs-dft-tools-converters-elk-elkconverter-convert-transport-input"]], "triqs_dft_tools.converters.elk.ElkConverter.det_shell_equivalence": [[43, "triqs-dft-tools-converters-elk-elkconverter-det-shell-equivalence"]], "triqs_dft_tools.converters.elk.ElkConverter.determine_T": [[44, "triqs-dft-tools-converters-elk-elkconverter-determine-t"]], "triqs_dft_tools.converters.elk.ElkConverter.determine_rep": [[45, "triqs-dft-tools-converters-elk-elkconverter-determine-rep"]], "triqs_dft_tools.converters.elk.ElkConverter.gen_perm": [[46, "triqs-dft-tools-converters-elk-elkconverter-gen-perm"]], "triqs_dft_tools.converters.elk.ElkConverter.plotpt3d": [[47, "triqs-dft-tools-converters-elk-elkconverter-plotpt3d"]], "triqs_dft_tools.converters.elk.ElkConverter.read_eig": [[48, "triqs-dft-tools-converters-elk-elkconverter-read-eig"]], "triqs_dft_tools.converters.elk.ElkConverter.read_elk_file": [[49, "triqs-dft-tools-converters-elk-elkconverter-read-elk-file"]], "triqs_dft_tools.converters.elk.ElkConverter.read_elk_file2": [[50, "triqs-dft-tools-converters-elk-elkconverter-read-elk-file2"]], "triqs_dft_tools.converters.elk.ElkConverter.read_fortran_file": [[51, "triqs-dft-tools-converters-elk-elkconverter-read-fortran-file"]], "triqs_dft_tools.converters.elk.ElkConverter.read_geometry": [[52, "triqs-dft-tools-converters-elk-elkconverter-read-geometry"]], "triqs_dft_tools.converters.elk.ElkConverter.read_kpoints": [[53, "triqs-dft-tools-converters-elk-elkconverter-read-kpoints"]], "triqs_dft_tools.converters.elk.ElkConverter.read_proj": [[54, "triqs-dft-tools-converters-elk-elkconverter-read-proj"]], "triqs_dft_tools.converters.elk.ElkConverter.read_projector": [[55, "triqs-dft-tools-converters-elk-elkconverter-read-projector"]], "triqs_dft_tools.converters.elk.ElkConverter.readlat": [[56, "triqs-dft-tools-converters-elk-elkconverter-readlat"]], "triqs_dft_tools.converters.elk.ElkConverter.readsym": [[57, "triqs-dft-tools-converters-elk-elkconverter-readsym"]], "triqs_dft_tools.converters.elk.ElkConverter.repack": [[58, "triqs-dft-tools-converters-elk-elkconverter-repack"]], "triqs_dft_tools.converters.elk.ElkConverter.rotaxang": [[59, "triqs-dft-tools-converters-elk-elkconverter-rotaxang"]], "triqs_dft_tools.converters.elk.ElkConverter.rotsym": [[60, "triqs-dft-tools-converters-elk-elkconverter-rotsym"]], "triqs_dft_tools.converters.elk.ElkConverter.sort_dft_eigvalues": [[61, "triqs-dft-tools-converters-elk-elkconverter-sort-dft-eigvalues"]], "triqs_dft_tools.converters.elk.ElkConverter.split_string": [[62, "triqs-dft-tools-converters-elk-elkconverter-split-string"]], "triqs_dft_tools.converters.elk.ElkConverter.split_string2": [[63, "triqs-dft-tools-converters-elk-elkconverter-split-string2"]], "triqs_dft_tools.converters.elk.ElkConverter.split_string3": [[64, "triqs-dft-tools-converters-elk-elkconverter-split-string3"]], "triqs_dft_tools.converters.elk.ElkConverter.symlat_to_complex_harmonics": [[65, "triqs-dft-tools-converters-elk-elkconverter-symlat-to-complex-harmonics"]], "triqs_dft_tools.converters.elk.ElkConverter.update_so_quatities": [[66, "triqs-dft-tools-converters-elk-elkconverter-update-so-quatities"]], "triqs_dft_tools.converters.elk.ElkConverter.v3frac": [[67, "triqs-dft-tools-converters-elk-elkconverter-v3frac"]], "triqs_dft_tools.converters.elk.ElkConverter.ylmrot": [[68, "triqs-dft-tools-converters-elk-elkconverter-ylmrot"]], "triqs_dft_tools.converters.elk.ElkConverter.ylmroty": [[69, "triqs-dft-tools-converters-elk-elkconverter-ylmroty"]], "triqs_dft_tools.converters.elk.ElkConverter.zyz_euler": [[70, "triqs-dft-tools-converters-elk-elkconverter-zyz-euler"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools": [[73, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.__init__": [[74, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-init"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.axangsu2": [[75, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-axangsu2"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.bzfoldout": [[76, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-bzfoldout"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.gen_perm": [[77, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-gen-perm"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.plotpt3d": [[78, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-plotpt3d"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.rotaxang": [[79, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-rotaxang"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.symlat_to_complex_harmonics": [[80, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-symlat-to-complex-harmonics"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.v3frac": [[81, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-v3frac"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.ylmrot": [[82, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-ylmrot"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.ylmroty": [[83, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-ylmroty"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.zyz_euler": [[84, "triqs-dft-tools-converters-elktools-elk-converter-tools-elkconvertertools-zyz-euler"]], "triqs_dft_tools.converters.hk.HkConverter": [[87, "triqs-dft-tools-converters-hk-hkconverter"]], "triqs_dft_tools.converters.hk.HkConverter.__init__": [[88, "triqs-dft-tools-converters-hk-hkconverter-init"]], "triqs_dft_tools.converters.hk.HkConverter.convert_dft_input": [[89, "triqs-dft-tools-converters-hk-hkconverter-convert-dft-input"]], "triqs_dft_tools.converters.hk.HkConverter.det_shell_equivalence": [[90, "triqs-dft-tools-converters-hk-hkconverter-det-shell-equivalence"]], "triqs_dft_tools.converters.hk.HkConverter.read_fortran_file": [[91, "triqs-dft-tools-converters-hk-hkconverter-read-fortran-file"]], "triqs_dft_tools.converters.hk.HkConverter.repack": [[92, "triqs-dft-tools-converters-hk-hkconverter-repack"]], "triqs_dft_tools.converters.plovasp.atm.dos_tetra_weights_3d": [[95, "triqs-dft-tools-converters-plovasp-atm-dos-tetra-weights-3d"]], "triqs_dft_tools.converters.plovasp.converter.generate_and_output_as_text": [[97, "triqs-dft-tools-converters-plovasp-converter-generate-and-output-as-text"]], "triqs_dft_tools.converters.plovasp.converter.main": [[98, "triqs-dft-tools-converters-plovasp-converter-main"]], "triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure": [[100, "triqs-dft-tools-converters-plovasp-elstruct-electronicstructure"]], "triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure.__init__": [[101, "triqs-dft-tools-converters-plovasp-elstruct-electronicstructure-init"]], "triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure.debug_density_matrix": [[102, "triqs-dft-tools-converters-plovasp-elstruct-electronicstructure-debug-density-matrix"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters": [[104, "triqs-dft-tools-converters-plovasp-inpconf-configparameters"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.__init__": [[105, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-init"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.groups_shells_consistency": [[106, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-groups-shells-consistency"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_band_window": [[107, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-band-window"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_energy_window": [[108, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-energy-window"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_file_tmatrix": [[109, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-file-tmatrix"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_general": [[110, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-general"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_groups": [[111, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-groups"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_input": [[112, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-input"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_parameter_set": [[113, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-parameter-set"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_shells": [[114, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-shells"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_dosmesh": [[115, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-string-dosmesh"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_int": [[116, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-string-int"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_ion_list": [[117, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-string-ion-list"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_logical": [[118, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-string-logical"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_tmatrix": [[119, "triqs-dft-tools-converters-plovasp-inpconf-configparameters-parse-string-tmatrix"]], "triqs_dft_tools.converters.plovasp.inpconf.issue_warning": [[120, "triqs-dft-tools-converters-plovasp-inpconf-issue-warning"]], "triqs_dft_tools.converters.plovasp.plotools.check_data_consistency": [[122, "triqs-dft-tools-converters-plovasp-plotools-check-data-consistency"]], "triqs_dft_tools.converters.plovasp.plotools.ctrl_output": [[123, "triqs-dft-tools-converters-plovasp-plotools-ctrl-output"]], "triqs_dft_tools.converters.plovasp.plotools.generate_plo": [[124, "triqs-dft-tools-converters-plovasp-plotools-generate-plo"]], "triqs_dft_tools.converters.plovasp.plotools.hk_output": [[125, "triqs-dft-tools-converters-plovasp-plotools-hk-output"]], "triqs_dft_tools.converters.plovasp.plotools.issue_warning": [[126, "triqs-dft-tools-converters-plovasp-plotools-issue-warning"]], "triqs_dft_tools.converters.plovasp.plotools.kpoints_output": [[127, "triqs-dft-tools-converters-plovasp-plotools-kpoints-output"]], "triqs_dft_tools.converters.plovasp.plotools.output_as_text": [[128, "triqs-dft-tools-converters-plovasp-plotools-output-as-text"]], "triqs_dft_tools.converters.plovasp.plotools.plo_output": [[129, "triqs-dft-tools-converters-plovasp-plotools-plo-output"]], "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup": [[131, "triqs-dft-tools-converters-plovasp-proj-group-projectorgroup"]], "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.__init__": [[132, "triqs-dft-tools-converters-plovasp-proj-group-projectorgroup-init"]], "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.calc_complement": [[133, "triqs-dft-tools-converters-plovasp-proj-group-projectorgroup-calc-complement"]], "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.calc_hk": [[134, "triqs-dft-tools-converters-plovasp-proj-group-projectorgroup-calc-hk"]], "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.get_block_matrix_map": [[135, "triqs-dft-tools-converters-plovasp-proj-group-projectorgroup-get-block-matrix-map"]], "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.nelect_window": [[136, "triqs-dft-tools-converters-plovasp-proj-group-projectorgroup-nelect-window"]], "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.orthogonalize": [[137, "triqs-dft-tools-converters-plovasp-proj-group-projectorgroup-orthogonalize"]], "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.orthogonalize_projector_matrix": [[138, "triqs-dft-tools-converters-plovasp-proj-group-projectorgroup-orthogonalize-projector-matrix"]], "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.select_bands": [[139, "triqs-dft-tools-converters-plovasp-proj-group-projectorgroup-select-bands"]], "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell": [[141, "triqs-dft-tools-converters-plovasp-proj-shell-complementshell"]], "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.__init__": [[142, "triqs-dft-tools-converters-plovasp-proj-shell-complementshell-init"]], "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.density_matrix": [[143, "triqs-dft-tools-converters-plovasp-proj-shell-complementshell-density-matrix"]], "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.density_of_states": [[144, "triqs-dft-tools-converters-plovasp-proj-shell-complementshell-density-of-states"]], "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.extract_projectors": [[145, "triqs-dft-tools-converters-plovasp-proj-shell-complementshell-extract-projectors"]], "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.extract_tmatrices": [[146, "triqs-dft-tools-converters-plovasp-proj-shell-complementshell-extract-tmatrices"]], "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.local_hamiltonian": [[147, "triqs-dft-tools-converters-plovasp-proj-shell-complementshell-local-hamiltonian"]], "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.select_projectors": [[148, "triqs-dft-tools-converters-plovasp-proj-shell-complementshell-select-projectors"]], "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell": [[149, "triqs-dft-tools-converters-plovasp-proj-shell-projectorshell"]], "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.__init__": [[150, "triqs-dft-tools-converters-plovasp-proj-shell-projectorshell-init"]], "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.density_matrix": [[151, "triqs-dft-tools-converters-plovasp-proj-shell-projectorshell-density-matrix"]], "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.density_of_states": [[152, "triqs-dft-tools-converters-plovasp-proj-shell-projectorshell-density-of-states"]], "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.extract_projectors": [[153, "triqs-dft-tools-converters-plovasp-proj-shell-projectorshell-extract-projectors"]], "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.extract_tmatrices": [[154, "triqs-dft-tools-converters-plovasp-proj-shell-projectorshell-extract-tmatrices"]], "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.local_hamiltonian": [[155, "triqs-dft-tools-converters-plovasp-proj-shell-projectorshell-local-hamiltonian"]], "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.select_projectors": [[156, "triqs-dft-tools-converters-plovasp-proj-shell-projectorshell-select-projectors"]], "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors": [[158, "triqs-dft-tools-converters-plovasp-sc-dmft-bcolors"]], "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.BLUE": [[159, "triqs-dft-tools-converters-plovasp-sc-dmft-bcolors-blue"]], "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.ENDC": [[160, "triqs-dft-tools-converters-plovasp-sc-dmft-bcolors-endc"]], "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.GREEN": [[161, "triqs-dft-tools-converters-plovasp-sc-dmft-bcolors-green"]], "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.MAGENTA": [[162, "triqs-dft-tools-converters-plovasp-sc-dmft-bcolors-magenta"]], "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.RED": [[163, "triqs-dft-tools-converters-plovasp-sc-dmft-bcolors-red"]], "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.YELLOW": [[164, "triqs-dft-tools-converters-plovasp-sc-dmft-bcolors-yellow"]], "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.__init__": [[165, "triqs-dft-tools-converters-plovasp-sc-dmft-bcolors-init"]], "triqs_dft_tools.converters.plovasp.sc_dmft.excepthook": [[166, "triqs-dft-tools-converters-plovasp-sc-dmft-excepthook"]], "triqs_dft_tools.converters.plovasp.sc_dmft.get_dft_energy": [[167, "triqs-dft-tools-converters-plovasp-sc-dmft-get-dft-energy"]], "triqs_dft_tools.converters.plovasp.sc_dmft.is_vasp_lock_present": [[168, "triqs-dft-tools-converters-plovasp-sc-dmft-is-vasp-lock-present"]], "triqs_dft_tools.converters.plovasp.sc_dmft.is_vasp_running": [[169, "triqs-dft-tools-converters-plovasp-sc-dmft-is-vasp-running"]], "triqs_dft_tools.converters.plovasp.sc_dmft.main": [[170, "triqs-dft-tools-converters-plovasp-sc-dmft-main"]], "triqs_dft_tools.converters.plovasp.sc_dmft.run_all": [[171, "triqs-dft-tools-converters-plovasp-sc-dmft-run-all"]], "triqs_dft_tools.converters.plovasp.sc_dmft.sigint_handler": [[172, "triqs-dft-tools-converters-plovasp-sc-dmft-sigint-handler"]], "triqs_dft_tools.converters.plovasp.vaspio.Doscar": [[174, "triqs-dft-tools-converters-plovasp-vaspio-doscar"]], "triqs_dft_tools.converters.plovasp.vaspio.Doscar.__init__": [[175, "triqs-dft-tools-converters-plovasp-vaspio-doscar-init"]], "triqs_dft_tools.converters.plovasp.vaspio.Doscar.from_file": [[176, "triqs-dft-tools-converters-plovasp-vaspio-doscar-from-file"]], "triqs_dft_tools.converters.plovasp.vaspio.Eigenval": [[177, "triqs-dft-tools-converters-plovasp-vaspio-eigenval"]], "triqs_dft_tools.converters.plovasp.vaspio.Eigenval.__init__": [[178, "triqs-dft-tools-converters-plovasp-vaspio-eigenval-init"]], "triqs_dft_tools.converters.plovasp.vaspio.Eigenval.from_file": [[179, "triqs-dft-tools-converters-plovasp-vaspio-eigenval-from-file"]], "triqs_dft_tools.converters.plovasp.vaspio.Kpoints": [[180, "triqs-dft-tools-converters-plovasp-vaspio-kpoints"]], "triqs_dft_tools.converters.plovasp.vaspio.Kpoints.__init__": [[181, "triqs-dft-tools-converters-plovasp-vaspio-kpoints-init"]], "triqs_dft_tools.converters.plovasp.vaspio.Kpoints.from_file": [[182, "triqs-dft-tools-converters-plovasp-vaspio-kpoints-from-file"]], "triqs_dft_tools.converters.plovasp.vaspio.Plocar": [[183, "triqs-dft-tools-converters-plovasp-vaspio-plocar"]], "triqs_dft_tools.converters.plovasp.vaspio.Plocar.__init__": [[184, "triqs-dft-tools-converters-plovasp-vaspio-plocar-init"]], "triqs_dft_tools.converters.plovasp.vaspio.Plocar.from_file": [[185, "triqs-dft-tools-converters-plovasp-vaspio-plocar-from-file"]], "triqs_dft_tools.converters.plovasp.vaspio.Plocar.locproj_parser": [[186, "triqs-dft-tools-converters-plovasp-vaspio-plocar-locproj-parser"]], "triqs_dft_tools.converters.plovasp.vaspio.Plocar.search_for": [[187, "triqs-dft-tools-converters-plovasp-vaspio-plocar-search-for"]], "triqs_dft_tools.converters.plovasp.vaspio.Poscar": [[188, "triqs-dft-tools-converters-plovasp-vaspio-poscar"]], "triqs_dft_tools.converters.plovasp.vaspio.Poscar.__init__": [[189, "triqs-dft-tools-converters-plovasp-vaspio-poscar-init"]], "triqs_dft_tools.converters.plovasp.vaspio.Poscar.from_file": [[190, "triqs-dft-tools-converters-plovasp-vaspio-poscar-from-file"]], "triqs_dft_tools.converters.plovasp.vaspio.VaspData": [[191, "triqs-dft-tools-converters-plovasp-vaspio-vaspdata"]], "triqs_dft_tools.converters.plovasp.vaspio.VaspData.__init__": [[192, "triqs-dft-tools-converters-plovasp-vaspio-vaspdata-init"]], "triqs_dft_tools.converters.plovasp.vaspio.read_lines": [[193, "triqs-dft-tools-converters-plovasp-vaspio-read-lines"]], "triqs_dft_tools.converters.plovasp.vaspio.read_symmcar": [[194, "triqs-dft-tools-converters-plovasp-vaspio-read-symmcar"]], "triqs_dft_tools.converters.vasp.VaspConverter": [[196, "triqs-dft-tools-converters-vasp-vaspconverter"]], "triqs_dft_tools.converters.vasp.VaspConverter.__init__": [[197, "triqs-dft-tools-converters-vasp-vaspconverter-init"]], "triqs_dft_tools.converters.vasp.VaspConverter.convert_dft_input": [[198, "triqs-dft-tools-converters-vasp-vaspconverter-convert-dft-input"]], "triqs_dft_tools.converters.vasp.VaspConverter.convert_misc_input": [[199, "triqs-dft-tools-converters-vasp-vaspconverter-convert-misc-input"]], "triqs_dft_tools.converters.vasp.VaspConverter.convert_symmetry_input": [[200, "triqs-dft-tools-converters-vasp-vaspconverter-convert-symmetry-input"]], "triqs_dft_tools.converters.vasp.VaspConverter.det_shell_equivalence": [[201, "triqs-dft-tools-converters-vasp-vaspconverter-det-shell-equivalence"]], "triqs_dft_tools.converters.vasp.VaspConverter.read_data": [[202, "triqs-dft-tools-converters-vasp-vaspconverter-read-data"]], "triqs_dft_tools.converters.vasp.VaspConverter.read_fortran_file": [[203, "triqs-dft-tools-converters-vasp-vaspconverter-read-fortran-file"]], "triqs_dft_tools.converters.vasp.VaspConverter.read_header_and_data": [[204, "triqs-dft-tools-converters-vasp-vaspconverter-read-header-and-data"]], "triqs_dft_tools.converters.vasp.VaspConverter.repack": [[205, "triqs-dft-tools-converters-vasp-vaspconverter-repack"]], "triqs_dft_tools.converters.wannier90.Wannier90Converter": [[207, "triqs-dft-tools-converters-wannier90-wannier90converter"]], "triqs_dft_tools.converters.wannier90.Wannier90Converter.__init__": [[208, "triqs-dft-tools-converters-wannier90-wannier90converter-init"]], "triqs_dft_tools.converters.wannier90.Wannier90Converter.convert_dft_input": [[209, "triqs-dft-tools-converters-wannier90-wannier90converter-convert-dft-input"]], "triqs_dft_tools.converters.wannier90.Wannier90Converter.det_shell_equivalence": [[210, "triqs-dft-tools-converters-wannier90-wannier90converter-det-shell-equivalence"]], "triqs_dft_tools.converters.wannier90.Wannier90Converter.read_fortran_file": [[211, "triqs-dft-tools-converters-wannier90-wannier90converter-read-fortran-file"]], "triqs_dft_tools.converters.wannier90.Wannier90Converter.repack": [[212, "triqs-dft-tools-converters-wannier90-wannier90converter-repack"]], "triqs_dft_tools.converters.wannier90.build_kmesh": [[213, "triqs-dft-tools-converters-wannier90-build-kmesh"]], "triqs_dft_tools.converters.wannier90.check_and_adapt_for_soc": [[214, "triqs-dft-tools-converters-wannier90-check-and-adapt-for-soc"]], "triqs_dft_tools.converters.wannier90.check_bloch_basis_hk": [[215, "triqs-dft-tools-converters-wannier90-check-bloch-basis-hk"]], "triqs_dft_tools.converters.wannier90.check_hr": [[216, "triqs-dft-tools-converters-wannier90-check-hr"]], "triqs_dft_tools.converters.wannier90.check_wannier_basis_hk": [[217, "triqs-dft-tools-converters-wannier90-check-wannier-basis-hk"]], "triqs_dft_tools.converters.wannier90.find_rot_mat": [[218, "triqs-dft-tools-converters-wannier90-find-rot-mat"]], "triqs_dft_tools.converters.wannier90.fourier_transform_hamiltonian": [[219, "triqs-dft-tools-converters-wannier90-fourier-transform-hamiltonian"]], "triqs_dft_tools.converters.wannier90.generate_local_so_matrix_t2g": [[220, "triqs-dft-tools-converters-wannier90-generate-local-so-matrix-t2g"]], "triqs_dft_tools.converters.wannier90.read_all_wannier90_data": [[221, "triqs-dft-tools-converters-wannier90-read-all-wannier90-data"]], "triqs_dft_tools.converters.wannier90.read_input_file": [[222, "triqs-dft-tools-converters-wannier90-read-input-file"]], "triqs_dft_tools.converters.wannier90.read_misc_input": [[223, "triqs-dft-tools-converters-wannier90-read-misc-input"]], "triqs_dft_tools.converters.wannier90.read_wannier90_blochbasis_data": [[224, "triqs-dft-tools-converters-wannier90-read-wannier90-blochbasis-data"]], "triqs_dft_tools.converters.wannier90.read_wannier90_hr_data": [[225, "triqs-dft-tools-converters-wannier90-read-wannier90-hr-data"]], "triqs_dft_tools.converters.wannier90.reorder_orbital_and_spin": [[226, "triqs-dft-tools-converters-wannier90-reorder-orbital-and-spin"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter": [[228, "triqs-dft-tools-converters-wien2k-wien2kconverter"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter.__init__": [[229, "triqs-dft-tools-converters-wien2k-wien2kconverter-init"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_bands_input": [[230, "triqs-dft-tools-converters-wien2k-wien2kconverter-convert-bands-input"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_dft_input": [[231, "triqs-dft-tools-converters-wien2k-wien2kconverter-convert-dft-input"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_misc_input": [[232, "triqs-dft-tools-converters-wien2k-wien2kconverter-convert-misc-input"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_parproj_input": [[233, "triqs-dft-tools-converters-wien2k-wien2kconverter-convert-parproj-input"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_symmetry_input": [[234, "triqs-dft-tools-converters-wien2k-wien2kconverter-convert-symmetry-input"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_transport_input": [[235, "triqs-dft-tools-converters-wien2k-wien2kconverter-convert-transport-input"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter.det_shell_equivalence": [[236, "triqs-dft-tools-converters-wien2k-wien2kconverter-det-shell-equivalence"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter.read_fortran_file": [[237, "triqs-dft-tools-converters-wien2k-wien2kconverter-read-fortran-file"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter.repack": [[238, "triqs-dft-tools-converters-wien2k-wien2kconverter-repack"]], "triqs_dft_tools.sumk_dft.SumkDFT": [[240, "triqs-dft-tools-sumk-dft-sumkdft"]], "triqs_dft_tools.sumk_dft.SumkDFT.__init__": [[241, "triqs-dft-tools-sumk-dft-sumkdft-init"]], "triqs_dft_tools.sumk_dft.SumkDFT.add_dc": [[242, "triqs-dft-tools-sumk-dft-sumkdft-add-dc"]], "triqs_dft_tools.sumk_dft.SumkDFT.analyse_block_structure": [[243, "triqs-dft-tools-sumk-dft-sumkdft-analyse-block-structure"]], "triqs_dft_tools.sumk_dft.SumkDFT.analyse_block_structure_from_gf": [[244, "triqs-dft-tools-sumk-dft-sumkdft-analyse-block-structure-from-gf"]], "triqs_dft_tools.sumk_dft.SumkDFT.analyse_deg_shells": [[245, "triqs-dft-tools-sumk-dft-sumkdft-analyse-deg-shells"]], "triqs_dft_tools.sumk_dft.SumkDFT.calc_dc": [[246, "triqs-dft-tools-sumk-dft-sumkdft-calc-dc"]], "triqs_dft_tools.sumk_dft.SumkDFT.calc_density_correction": [[247, "triqs-dft-tools-sumk-dft-sumkdft-calc-density-correction"]], "triqs_dft_tools.sumk_dft.SumkDFT.calc_mu": [[248, "triqs-dft-tools-sumk-dft-sumkdft-calc-mu"]], "triqs_dft_tools.sumk_dft.SumkDFT.calculate_diagonalization_matrix": [[249, "triqs-dft-tools-sumk-dft-sumkdft-calculate-diagonalization-matrix"]], "triqs_dft_tools.sumk_dft.SumkDFT.calculate_min_max_band_energies": [[250, "triqs-dft-tools-sumk-dft-sumkdft-calculate-min-max-band-energies"]], "triqs_dft_tools.sumk_dft.SumkDFT.check_projectors": [[251, "triqs-dft-tools-sumk-dft-sumkdft-check-projectors"]], "triqs_dft_tools.sumk_dft.SumkDFT.corr_to_inequiv": [[252, "triqs-dft-tools-sumk-dft-sumkdft-corr-to-inequiv"]], "triqs_dft_tools.sumk_dft.SumkDFT.deg_shells": [[253, "triqs-dft-tools-sumk-dft-sumkdft-deg-shells"]], "triqs_dft_tools.sumk_dft.SumkDFT.density_matrix": [[254, "triqs-dft-tools-sumk-dft-sumkdft-density-matrix"]], "triqs_dft_tools.sumk_dft.SumkDFT.downfold": [[255, "triqs-dft-tools-sumk-dft-sumkdft-downfold"]], "triqs_dft_tools.sumk_dft.SumkDFT.eff_atomic_levels": [[256, "triqs-dft-tools-sumk-dft-sumkdft-eff-atomic-levels"]], "triqs_dft_tools.sumk_dft.SumkDFT.extract_G_loc": [[257, "triqs-dft-tools-sumk-dft-sumkdft-extract-g-loc"]], "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver": [[258, "triqs-dft-tools-sumk-dft-sumkdft-gf-struct-solver"]], "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver_dict": [[259, "triqs-dft-tools-sumk-dft-sumkdft-gf-struct-solver-dict"]], "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver_list": [[260, "triqs-dft-tools-sumk-dft-sumkdft-gf-struct-solver-list"]], "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk": [[261, "triqs-dft-tools-sumk-dft-sumkdft-gf-struct-sumk"]], "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk_dict": [[262, "triqs-dft-tools-sumk-dft-sumkdft-gf-struct-sumk-dict"]], "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk_list": [[263, "triqs-dft-tools-sumk-dft-sumkdft-gf-struct-sumk-list"]], "triqs_dft_tools.sumk_dft.SumkDFT.inequiv_to_corr": [[264, "triqs-dft-tools-sumk-dft-sumkdft-inequiv-to-corr"]], "triqs_dft_tools.sumk_dft.SumkDFT.init_dc": [[265, "triqs-dft-tools-sumk-dft-sumkdft-init-dc"]], "triqs_dft_tools.sumk_dft.SumkDFT.lattice_gf": [[266, "triqs-dft-tools-sumk-dft-sumkdft-lattice-gf"]], "triqs_dft_tools.sumk_dft.SumkDFT.load": [[267, "triqs-dft-tools-sumk-dft-sumkdft-load"]], "triqs_dft_tools.sumk_dft.SumkDFT.number_of_atoms": [[268, "triqs-dft-tools-sumk-dft-sumkdft-number-of-atoms"]], "triqs_dft_tools.sumk_dft.SumkDFT.put_Sigma": [[269, "triqs-dft-tools-sumk-dft-sumkdft-put-sigma"]], "triqs_dft_tools.sumk_dft.SumkDFT.read_input_from_hdf": [[270, "triqs-dft-tools-sumk-dft-sumkdft-read-input-from-hdf"]], "triqs_dft_tools.sumk_dft.SumkDFT.rotloc": [[271, "triqs-dft-tools-sumk-dft-sumkdft-rotloc"]], "triqs_dft_tools.sumk_dft.SumkDFT.save": [[272, "triqs-dft-tools-sumk-dft-sumkdft-save"]], "triqs_dft_tools.sumk_dft.SumkDFT.set_Sigma": [[273, "triqs-dft-tools-sumk-dft-sumkdft-set-sigma"]], "triqs_dft_tools.sumk_dft.SumkDFT.set_dc": [[274, "triqs-dft-tools-sumk-dft-sumkdft-set-dc"]], "triqs_dft_tools.sumk_dft.SumkDFT.set_mu": [[275, "triqs-dft-tools-sumk-dft-sumkdft-set-mu"]], "triqs_dft_tools.sumk_dft.SumkDFT.solver_to_sumk": [[276, "triqs-dft-tools-sumk-dft-sumkdft-solver-to-sumk"]], "triqs_dft_tools.sumk_dft.SumkDFT.solver_to_sumk_block": [[277, "triqs-dft-tools-sumk-dft-sumkdft-solver-to-sumk-block"]], "triqs_dft_tools.sumk_dft.SumkDFT.sorts_of_atoms": [[278, "triqs-dft-tools-sumk-dft-sumkdft-sorts-of-atoms"]], "triqs_dft_tools.sumk_dft.SumkDFT.sumk_to_solver": [[279, "triqs-dft-tools-sumk-dft-sumkdft-sumk-to-solver"]], "triqs_dft_tools.sumk_dft.SumkDFT.symm_deg_gf": [[280, "triqs-dft-tools-sumk-dft-sumkdft-symm-deg-gf"]], "triqs_dft_tools.sumk_dft.SumkDFT.total_density": [[281, "triqs-dft-tools-sumk-dft-sumkdft-total-density"]], "triqs_dft_tools.sumk_dft.SumkDFT.transform_to_solver_blocks": [[282, "triqs-dft-tools-sumk-dft-sumkdft-transform-to-solver-blocks"]], "triqs_dft_tools.sumk_dft.SumkDFT.transform_to_sumk_blocks": [[283, "triqs-dft-tools-sumk-dft-sumkdft-transform-to-sumk-blocks"]], "triqs_dft_tools.sumk_dft.SumkDFT.upfold": [[284, "triqs-dft-tools-sumk-dft-sumkdft-upfold"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools": [[286, "triqs-dft-tools-sumk-dft-tools-sumkdfttools"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.__init__": [[287, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-init"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.add_dc": [[288, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-add-dc"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_block_structure": [[289, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-analyse-block-structure"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_block_structure_from_gf": [[290, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-analyse-block-structure-from-gf"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_deg_shells": [[291, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-analyse-deg-shells"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_dc": [[292, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-calc-dc"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_density_correction": [[293, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-calc-density-correction"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_mu": [[294, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-calc-mu"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calculate_diagonalization_matrix": [[295, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-calculate-diagonalization-matrix"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calculate_min_max_band_energies": [[296, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-calculate-min-max-band-energies"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.check_projectors": [[297, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-check-projectors"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.corr_to_inequiv": [[298, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-corr-to-inequiv"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.deg_shells": [[299, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-deg-shells"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.density_matrix": [[300, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-density-matrix"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.density_of_states": [[301, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-density-of-states"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.downfold": [[302, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-downfold"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.eff_atomic_levels": [[303, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-eff-atomic-levels"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.extract_G_loc": [[304, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-extract-g-loc"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gen_Akw": [[305, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-gen-akw"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver": [[306, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-gf-struct-solver"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver_dict": [[307, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-gf-struct-solver-dict"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver_list": [[308, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-gf-struct-solver-list"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk": [[309, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-gf-struct-sumk"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk_dict": [[310, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-gf-struct-sumk-dict"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk_list": [[311, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-gf-struct-sumk-list"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.inequiv_to_corr": [[312, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-inequiv-to-corr"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.init_dc": [[313, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-init-dc"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.lattice_gf": [[314, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-lattice-gf"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.load": [[315, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-load"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.load_parproj": [[316, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-load-parproj"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.number_of_atoms": [[317, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-number-of-atoms"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.occupations": [[318, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-occupations"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.partial_charges": [[319, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-partial-charges"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.print_hamiltonian": [[320, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-print-hamiltonian"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.proj_type_G_loc": [[321, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-proj-type-g-loc"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.put_Sigma": [[322, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-put-sigma"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.read_input_from_hdf": [[323, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-read-input-from-hdf"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.rotloc": [[324, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-rotloc"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.save": [[325, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-save"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_Sigma": [[326, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-set-sigma"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_dc": [[327, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-set-dc"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_mu": [[328, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-set-mu"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.solver_to_sumk": [[329, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-solver-to-sumk"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.solver_to_sumk_block": [[330, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-solver-to-sumk-block"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.sorts_of_atoms": [[331, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-sorts-of-atoms"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.spaghettis": [[332, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-spaghettis"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.spectral_contours": [[333, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-spectral-contours"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.sumk_to_solver": [[334, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-sumk-to-solver"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.symm_deg_gf": [[335, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-symm-deg-gf"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.total_density": [[336, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-total-density"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.transform_to_solver_blocks": [[337, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-transform-to-solver-blocks"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.transform_to_sumk_blocks": [[338, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-transform-to-sumk-blocks"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.upfold": [[339, "triqs-dft-tools-sumk-dft-tools-sumkdfttools-upfold"]], "triqs_dft_tools.symmetry.Symmetry": [[341, "triqs-dft-tools-symmetry-symmetry"]], "triqs_dft_tools.symmetry.Symmetry.__init__": [[342, "triqs-dft-tools-symmetry-symmetry-init"]], "triqs_dft_tools.symmetry.Symmetry.symmetrize": [[343, "triqs-dft-tools-symmetry-symmetry-symmetrize"]], "triqs_dft_tools.trans_basis.TransBasis": [[345, "triqs-dft-tools-trans-basis-transbasis"]], "triqs_dft_tools.trans_basis.TransBasis.__init__": [[346, "triqs-dft-tools-trans-basis-transbasis-init"]], "triqs_dft_tools.trans_basis.TransBasis.calculate_diagonalisation_matrix": [[347, "triqs-dft-tools-trans-basis-transbasis-calculate-diagonalisation-matrix"]], "triqs_dft_tools.trans_basis.TransBasis.rotate_gf": [[348, "triqs-dft-tools-trans-basis-transbasis-rotate-gf"]], "triqs_dft_tools.trans_basis.TransBasis.write_trans_file": [[349, "triqs-dft-tools-trans-basis-transbasis-write-trans-file"]], "triqs_dft_tools.util.compute_DC_from_density": [[351, "triqs-dft-tools-util-compute-dc-from-density"]], "util": [[350, "module-triqs_dft_tools.util"]], "vasp": [[195, "module-triqs_dft_tools.converters.vasp"]], "vaspio": [[173, "module-triqs_dft_tools.converters.plovasp.vaspio"]], "w90 + QE": [[0, "w90-qe"]], "wannier90": [[206, "module-triqs_dft_tools.converters.wannier90"]], "wien2k": [[227, "module-triqs_dft_tools.converters.wien2k"]], "wien2k: FERMI ERROR when running x lapw2 -almd -band": [[359, "wien2k-fermi-error-when-running-x-lapw2-almd-band"]], "x optic does not write a case.pmat file": [[359, "x-optic-does-not-write-a-case-pmat-file"]]}, "docnames": ["ChangeLog", "_python_api/triqs_dft_tools.block_structure", "_python_api/triqs_dft_tools.block_structure.BlockStructure", "_python_api/triqs_dft_tools.block_structure.BlockStructure.__init__", "_python_api/triqs_dft_tools.block_structure.BlockStructure.adapt_deg_shells", "_python_api/triqs_dft_tools.block_structure.BlockStructure.approximate_as_diagonal", "_python_api/triqs_dft_tools.block_structure.BlockStructure.check_gf", "_python_api/triqs_dft_tools.block_structure.BlockStructure.check_matrix", "_python_api/triqs_dft_tools.block_structure.BlockStructure.convert_gf", "_python_api/triqs_dft_tools.block_structure.BlockStructure.convert_matrix", "_python_api/triqs_dft_tools.block_structure.BlockStructure.convert_operator", "_python_api/triqs_dft_tools.block_structure.BlockStructure.copy", "_python_api/triqs_dft_tools.block_structure.BlockStructure.create_gf", "_python_api/triqs_dft_tools.block_structure.BlockStructure.create_matrix", "_python_api/triqs_dft_tools.block_structure.BlockStructure.effective_transformation_solver", "_python_api/triqs_dft_tools.block_structure.BlockStructure.effective_transformation_sumk", "_python_api/triqs_dft_tools.block_structure.BlockStructure.full_structure", "_python_api/triqs_dft_tools.block_structure.BlockStructure.gf_struct_solver_dict", "_python_api/triqs_dft_tools.block_structure.BlockStructure.gf_struct_solver_list", "_python_api/triqs_dft_tools.block_structure.BlockStructure.gf_struct_sumk_dict", "_python_api/triqs_dft_tools.block_structure.BlockStructure.gf_struct_sumk_list", "_python_api/triqs_dft_tools.block_structure.BlockStructure.inequiv_to_corr", "_python_api/triqs_dft_tools.block_structure.BlockStructure.map_gf_struct_solver", "_python_api/triqs_dft_tools.block_structure.BlockStructure.pick_gf_struct_solver", "_python_api/triqs_dft_tools.block_structure.BlockStructure.pick_gf_struct_sumk", "_python_api/triqs_dft_tools.block_structure.BlockStructure.sumk_to_solver_block", "_python_api/triqs_dft_tools.converters", "_python_api/triqs_dft_tools.converters.converter_tools", "_python_api/triqs_dft_tools.converters.converter_tools.ConverterTools", "_python_api/triqs_dft_tools.converters.converter_tools.ConverterTools.__init__", "_python_api/triqs_dft_tools.converters.converter_tools.ConverterTools.det_shell_equivalence", "_python_api/triqs_dft_tools.converters.converter_tools.ConverterTools.read_fortran_file", "_python_api/triqs_dft_tools.converters.converter_tools.ConverterTools.repack", "_python_api/triqs_dft_tools.converters.elk", "_python_api/triqs_dft_tools.converters.elk.ElkConverter", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.__init__", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.axangsu2", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.bzfoldout", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.check_dens", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.convert_bands_input", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.convert_contours_input", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.convert_dft_input", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.convert_transport_input", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.det_shell_equivalence", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.determine_T", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.determine_rep", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.gen_perm", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.plotpt3d", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_eig", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_elk_file", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_elk_file2", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_fortran_file", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_geometry", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_kpoints", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_proj", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_projector", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.readlat", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.readsym", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.repack", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.rotaxang", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.rotsym", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.sort_dft_eigvalues", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.split_string", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.split_string2", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.split_string3", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.symlat_to_complex_harmonics", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.update_so_quatities", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.v3frac", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.ylmrot", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.ylmroty", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.zyz_euler", "_python_api/triqs_dft_tools.converters.elktools", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.__init__", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.axangsu2", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.bzfoldout", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.gen_perm", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.plotpt3d", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.rotaxang", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.symlat_to_complex_harmonics", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.v3frac", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.ylmrot", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.ylmroty", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.zyz_euler", "_python_api/triqs_dft_tools.converters.elktools.readElkfiles", "_python_api/triqs_dft_tools.converters.hk", "_python_api/triqs_dft_tools.converters.hk.HkConverter", "_python_api/triqs_dft_tools.converters.hk.HkConverter.__init__", "_python_api/triqs_dft_tools.converters.hk.HkConverter.convert_dft_input", "_python_api/triqs_dft_tools.converters.hk.HkConverter.det_shell_equivalence", "_python_api/triqs_dft_tools.converters.hk.HkConverter.read_fortran_file", "_python_api/triqs_dft_tools.converters.hk.HkConverter.repack", "_python_api/triqs_dft_tools.converters.plovasp", "_python_api/triqs_dft_tools.converters.plovasp.atm", "_python_api/triqs_dft_tools.converters.plovasp.atm.dos_tetra_weights_3d", "_python_api/triqs_dft_tools.converters.plovasp.converter", "_python_api/triqs_dft_tools.converters.plovasp.converter.generate_and_output_as_text", "_python_api/triqs_dft_tools.converters.plovasp.converter.main", "_python_api/triqs_dft_tools.converters.plovasp.elstruct", "_python_api/triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure", "_python_api/triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure.__init__", "_python_api/triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure.debug_density_matrix", "_python_api/triqs_dft_tools.converters.plovasp.inpconf", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.__init__", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.groups_shells_consistency", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_band_window", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_energy_window", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_file_tmatrix", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_general", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_groups", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_input", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_parameter_set", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_shells", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_dosmesh", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_int", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_ion_list", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_logical", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_tmatrix", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.issue_warning", "_python_api/triqs_dft_tools.converters.plovasp.plotools", "_python_api/triqs_dft_tools.converters.plovasp.plotools.check_data_consistency", "_python_api/triqs_dft_tools.converters.plovasp.plotools.ctrl_output", "_python_api/triqs_dft_tools.converters.plovasp.plotools.generate_plo", "_python_api/triqs_dft_tools.converters.plovasp.plotools.hk_output", "_python_api/triqs_dft_tools.converters.plovasp.plotools.issue_warning", "_python_api/triqs_dft_tools.converters.plovasp.plotools.kpoints_output", "_python_api/triqs_dft_tools.converters.plovasp.plotools.output_as_text", "_python_api/triqs_dft_tools.converters.plovasp.plotools.plo_output", "_python_api/triqs_dft_tools.converters.plovasp.proj_group", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.__init__", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.calc_complement", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.calc_hk", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.get_block_matrix_map", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.nelect_window", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.orthogonalize", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.orthogonalize_projector_matrix", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.select_bands", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.__init__", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.density_matrix", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.density_of_states", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.extract_projectors", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.extract_tmatrices", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.local_hamiltonian", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.select_projectors", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.__init__", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.density_matrix", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.density_of_states", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.extract_projectors", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.extract_tmatrices", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.local_hamiltonian", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.select_projectors", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.BLUE", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.ENDC", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.GREEN", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.MAGENTA", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.RED", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.YELLOW", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.__init__", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.excepthook", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.get_dft_energy", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.is_vasp_lock_present", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.is_vasp_running", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.main", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.run_all", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.sigint_handler", "_python_api/triqs_dft_tools.converters.plovasp.vaspio", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Doscar", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Doscar.__init__", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Doscar.from_file", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Eigenval", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Eigenval.__init__", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Eigenval.from_file", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Kpoints", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Kpoints.__init__", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Kpoints.from_file", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Plocar", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Plocar.__init__", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Plocar.from_file", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Plocar.locproj_parser", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Plocar.search_for", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Poscar", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Poscar.__init__", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Poscar.from_file", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.VaspData", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.VaspData.__init__", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.read_lines", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.read_symmcar", "_python_api/triqs_dft_tools.converters.vasp", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.__init__", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.convert_dft_input", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.convert_misc_input", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.convert_symmetry_input", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.det_shell_equivalence", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.read_data", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.read_fortran_file", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.read_header_and_data", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.repack", "_python_api/triqs_dft_tools.converters.wannier90", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.__init__", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.convert_dft_input", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.det_shell_equivalence", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.read_fortran_file", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.repack", "_python_api/triqs_dft_tools.converters.wannier90.build_kmesh", "_python_api/triqs_dft_tools.converters.wannier90.check_and_adapt_for_soc", "_python_api/triqs_dft_tools.converters.wannier90.check_bloch_basis_hk", "_python_api/triqs_dft_tools.converters.wannier90.check_hr", "_python_api/triqs_dft_tools.converters.wannier90.check_wannier_basis_hk", "_python_api/triqs_dft_tools.converters.wannier90.find_rot_mat", "_python_api/triqs_dft_tools.converters.wannier90.fourier_transform_hamiltonian", "_python_api/triqs_dft_tools.converters.wannier90.generate_local_so_matrix_t2g", "_python_api/triqs_dft_tools.converters.wannier90.read_all_wannier90_data", "_python_api/triqs_dft_tools.converters.wannier90.read_input_file", "_python_api/triqs_dft_tools.converters.wannier90.read_misc_input", "_python_api/triqs_dft_tools.converters.wannier90.read_wannier90_blochbasis_data", "_python_api/triqs_dft_tools.converters.wannier90.read_wannier90_hr_data", "_python_api/triqs_dft_tools.converters.wannier90.reorder_orbital_and_spin", "_python_api/triqs_dft_tools.converters.wien2k", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.__init__", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_bands_input", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_dft_input", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_misc_input", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_parproj_input", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_symmetry_input", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_transport_input", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.det_shell_equivalence", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.read_fortran_file", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.repack", "_python_api/triqs_dft_tools.sumk_dft", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.__init__", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.add_dc", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.analyse_block_structure", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.analyse_block_structure_from_gf", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.analyse_deg_shells", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.calc_dc", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.calc_density_correction", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.calc_mu", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.calculate_diagonalization_matrix", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.calculate_min_max_band_energies", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.check_projectors", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.corr_to_inequiv", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.deg_shells", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.density_matrix", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.downfold", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.eff_atomic_levels", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.extract_G_loc", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver_dict", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver_list", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk_dict", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk_list", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.inequiv_to_corr", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.init_dc", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.lattice_gf", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.load", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.number_of_atoms", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.put_Sigma", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.read_input_from_hdf", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.rotloc", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.save", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.set_Sigma", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.set_dc", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.set_mu", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.solver_to_sumk", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.solver_to_sumk_block", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.sorts_of_atoms", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.sumk_to_solver", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.symm_deg_gf", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.total_density", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.transform_to_solver_blocks", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.transform_to_sumk_blocks", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.upfold", "_python_api/triqs_dft_tools.sumk_dft_tools", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.__init__", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.add_dc", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_block_structure", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_block_structure_from_gf", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_deg_shells", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_dc", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_density_correction", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_mu", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calculate_diagonalization_matrix", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calculate_min_max_band_energies", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.check_projectors", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.corr_to_inequiv", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.deg_shells", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.density_matrix", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.density_of_states", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.downfold", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.eff_atomic_levels", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.extract_G_loc", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gen_Akw", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver_dict", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver_list", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk_dict", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk_list", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.inequiv_to_corr", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.init_dc", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.lattice_gf", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.load", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.load_parproj", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.number_of_atoms", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.occupations", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.partial_charges", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.print_hamiltonian", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.proj_type_G_loc", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.put_Sigma", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.read_input_from_hdf", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.rotloc", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.save", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_Sigma", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_dc", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_mu", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.solver_to_sumk", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.solver_to_sumk_block", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.sorts_of_atoms", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.spaghettis", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.spectral_contours", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.sumk_to_solver", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.symm_deg_gf", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.total_density", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.transform_to_solver_blocks", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.transform_to_sumk_blocks", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.upfold", "_python_api/triqs_dft_tools.symmetry", "_python_api/triqs_dft_tools.symmetry.Symmetry", "_python_api/triqs_dft_tools.symmetry.Symmetry.__init__", "_python_api/triqs_dft_tools.symmetry.Symmetry.symmetrize", "_python_api/triqs_dft_tools.trans_basis", "_python_api/triqs_dft_tools.trans_basis.TransBasis", "_python_api/triqs_dft_tools.trans_basis.TransBasis.__init__", "_python_api/triqs_dft_tools.trans_basis.TransBasis.calculate_diagonalisation_matrix", "_python_api/triqs_dft_tools.trans_basis.TransBasis.rotate_gf", "_python_api/triqs_dft_tools.trans_basis.TransBasis.write_trans_file", "_python_api/triqs_dft_tools.util", "_python_api/triqs_dft_tools.util.compute_DC_from_density", "about", "basicnotions/dft_dmft", "basicnotions/first", "basicnotions/structure", "cpp2rst_generated/contents", "cpp2rst_generated/triqs_dft_tools", "documentation", "faqs/faqs", "guide/BasisRotation", "guide/analysis", "guide/blockstructure", "guide/conv_W90", "guide/conv_elk", "guide/conv_generalhk", "guide/conv_vasp", "guide/conv_wien2k", "guide/conversion", "guide/dftdmft_selfcons", "guide/dftdmft_singleshot", "guide/soc", "guide/transport", "h5structure", "index", "install", "issues", "tutorials", "tutorials/ce-gamma-fscs_wien2k", "tutorials/images_scripts/Ce-gamma_DOS_script", "tutorials/images_scripts/Ce-gamma_script", "tutorials/nio_csc_vasp/INCAR", "tutorials/nio_csc_vasp/KPOINTS", "tutorials/nio_csc_vasp/NiO_local_lattice_GF.py", "tutorials/nio_csc_vasp/POSCAR", "tutorials/nio_csc_vasp/converter.py", "tutorials/nio_csc_vasp/maxent.py", "tutorials/nio_csc_vasp/nio.py", "tutorials/nio_csc_vasp/nio_csc", "tutorials/nio_csc_vasp/nio_csc.py", "tutorials/nio_csc_vasp/plo.cfg", "tutorials/sr2mgoso6_nosoc", "tutorials/sr2mgoso6_soc", "tutorials/srvo3", "tutorials/svo_elk/srvo3", "tutorials/svo_vasp/svo_notebook"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["ChangeLog.md", "_python_api/triqs_dft_tools.block_structure.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.__init__.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.adapt_deg_shells.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.approximate_as_diagonal.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.check_gf.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.check_matrix.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.convert_gf.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.convert_matrix.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.convert_operator.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.copy.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.create_gf.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.create_matrix.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.effective_transformation_solver.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.effective_transformation_sumk.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.full_structure.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.gf_struct_solver_dict.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.gf_struct_solver_list.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.gf_struct_sumk_dict.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.gf_struct_sumk_list.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.inequiv_to_corr.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.map_gf_struct_solver.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.pick_gf_struct_solver.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.pick_gf_struct_sumk.rst", "_python_api/triqs_dft_tools.block_structure.BlockStructure.sumk_to_solver_block.rst", "_python_api/triqs_dft_tools.converters.rst", "_python_api/triqs_dft_tools.converters.converter_tools.rst", "_python_api/triqs_dft_tools.converters.converter_tools.ConverterTools.rst", "_python_api/triqs_dft_tools.converters.converter_tools.ConverterTools.__init__.rst", "_python_api/triqs_dft_tools.converters.converter_tools.ConverterTools.det_shell_equivalence.rst", "_python_api/triqs_dft_tools.converters.converter_tools.ConverterTools.read_fortran_file.rst", "_python_api/triqs_dft_tools.converters.converter_tools.ConverterTools.repack.rst", "_python_api/triqs_dft_tools.converters.elk.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.__init__.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.axangsu2.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.bzfoldout.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.check_dens.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.convert_bands_input.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.convert_contours_input.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.convert_dft_input.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.convert_transport_input.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.det_shell_equivalence.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.determine_T.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.determine_rep.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.gen_perm.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.plotpt3d.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_eig.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_elk_file.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_elk_file2.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_fortran_file.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_geometry.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_kpoints.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_proj.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.read_projector.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.readlat.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.readsym.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.repack.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.rotaxang.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.rotsym.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.sort_dft_eigvalues.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.split_string.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.split_string2.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.split_string3.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.symlat_to_complex_harmonics.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.update_so_quatities.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.v3frac.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.ylmrot.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.ylmroty.rst", "_python_api/triqs_dft_tools.converters.elk.ElkConverter.zyz_euler.rst", "_python_api/triqs_dft_tools.converters.elktools.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.__init__.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.axangsu2.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.bzfoldout.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.gen_perm.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.plotpt3d.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.rotaxang.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.symlat_to_complex_harmonics.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.v3frac.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.ylmrot.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.ylmroty.rst", "_python_api/triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.zyz_euler.rst", "_python_api/triqs_dft_tools.converters.elktools.readElkfiles.rst", "_python_api/triqs_dft_tools.converters.hk.rst", "_python_api/triqs_dft_tools.converters.hk.HkConverter.rst", "_python_api/triqs_dft_tools.converters.hk.HkConverter.__init__.rst", "_python_api/triqs_dft_tools.converters.hk.HkConverter.convert_dft_input.rst", "_python_api/triqs_dft_tools.converters.hk.HkConverter.det_shell_equivalence.rst", "_python_api/triqs_dft_tools.converters.hk.HkConverter.read_fortran_file.rst", "_python_api/triqs_dft_tools.converters.hk.HkConverter.repack.rst", "_python_api/triqs_dft_tools.converters.plovasp.rst", "_python_api/triqs_dft_tools.converters.plovasp.atm.rst", "_python_api/triqs_dft_tools.converters.plovasp.atm.dos_tetra_weights_3d.rst", "_python_api/triqs_dft_tools.converters.plovasp.converter.rst", "_python_api/triqs_dft_tools.converters.plovasp.converter.generate_and_output_as_text.rst", "_python_api/triqs_dft_tools.converters.plovasp.converter.main.rst", "_python_api/triqs_dft_tools.converters.plovasp.elstruct.rst", "_python_api/triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure.rst", "_python_api/triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure.debug_density_matrix.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.groups_shells_consistency.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_band_window.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_energy_window.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_file_tmatrix.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_general.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_groups.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_input.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_parameter_set.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_shells.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_dosmesh.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_int.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_ion_list.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_logical.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_tmatrix.rst", "_python_api/triqs_dft_tools.converters.plovasp.inpconf.issue_warning.rst", "_python_api/triqs_dft_tools.converters.plovasp.plotools.rst", "_python_api/triqs_dft_tools.converters.plovasp.plotools.check_data_consistency.rst", "_python_api/triqs_dft_tools.converters.plovasp.plotools.ctrl_output.rst", "_python_api/triqs_dft_tools.converters.plovasp.plotools.generate_plo.rst", "_python_api/triqs_dft_tools.converters.plovasp.plotools.hk_output.rst", "_python_api/triqs_dft_tools.converters.plovasp.plotools.issue_warning.rst", "_python_api/triqs_dft_tools.converters.plovasp.plotools.kpoints_output.rst", "_python_api/triqs_dft_tools.converters.plovasp.plotools.output_as_text.rst", "_python_api/triqs_dft_tools.converters.plovasp.plotools.plo_output.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.calc_complement.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.calc_hk.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.get_block_matrix_map.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.nelect_window.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.orthogonalize.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.orthogonalize_projector_matrix.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.select_bands.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.density_matrix.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.density_of_states.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.extract_projectors.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.extract_tmatrices.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.local_hamiltonian.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.select_projectors.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.density_matrix.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.density_of_states.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.extract_projectors.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.extract_tmatrices.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.local_hamiltonian.rst", "_python_api/triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.select_projectors.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.BLUE.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.ENDC.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.GREEN.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.MAGENTA.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.RED.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.YELLOW.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.excepthook.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.get_dft_energy.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.is_vasp_lock_present.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.is_vasp_running.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.main.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.run_all.rst", "_python_api/triqs_dft_tools.converters.plovasp.sc_dmft.sigint_handler.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Doscar.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Doscar.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Doscar.from_file.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Eigenval.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Eigenval.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Eigenval.from_file.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Kpoints.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Kpoints.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Kpoints.from_file.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Plocar.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Plocar.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Plocar.from_file.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Plocar.locproj_parser.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Plocar.search_for.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Poscar.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Poscar.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.Poscar.from_file.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.VaspData.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.VaspData.__init__.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.read_lines.rst", "_python_api/triqs_dft_tools.converters.plovasp.vaspio.read_symmcar.rst", "_python_api/triqs_dft_tools.converters.vasp.rst", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.rst", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.__init__.rst", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.convert_dft_input.rst", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.convert_misc_input.rst", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.convert_symmetry_input.rst", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.det_shell_equivalence.rst", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.read_data.rst", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.read_fortran_file.rst", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.read_header_and_data.rst", "_python_api/triqs_dft_tools.converters.vasp.VaspConverter.repack.rst", "_python_api/triqs_dft_tools.converters.wannier90.rst", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.rst", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.__init__.rst", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.convert_dft_input.rst", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.det_shell_equivalence.rst", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.read_fortran_file.rst", "_python_api/triqs_dft_tools.converters.wannier90.Wannier90Converter.repack.rst", "_python_api/triqs_dft_tools.converters.wannier90.build_kmesh.rst", "_python_api/triqs_dft_tools.converters.wannier90.check_and_adapt_for_soc.rst", "_python_api/triqs_dft_tools.converters.wannier90.check_bloch_basis_hk.rst", "_python_api/triqs_dft_tools.converters.wannier90.check_hr.rst", "_python_api/triqs_dft_tools.converters.wannier90.check_wannier_basis_hk.rst", "_python_api/triqs_dft_tools.converters.wannier90.find_rot_mat.rst", "_python_api/triqs_dft_tools.converters.wannier90.fourier_transform_hamiltonian.rst", "_python_api/triqs_dft_tools.converters.wannier90.generate_local_so_matrix_t2g.rst", "_python_api/triqs_dft_tools.converters.wannier90.read_all_wannier90_data.rst", "_python_api/triqs_dft_tools.converters.wannier90.read_input_file.rst", "_python_api/triqs_dft_tools.converters.wannier90.read_misc_input.rst", "_python_api/triqs_dft_tools.converters.wannier90.read_wannier90_blochbasis_data.rst", "_python_api/triqs_dft_tools.converters.wannier90.read_wannier90_hr_data.rst", "_python_api/triqs_dft_tools.converters.wannier90.reorder_orbital_and_spin.rst", "_python_api/triqs_dft_tools.converters.wien2k.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.__init__.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_bands_input.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_dft_input.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_misc_input.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_parproj_input.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_symmetry_input.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_transport_input.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.det_shell_equivalence.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.read_fortran_file.rst", "_python_api/triqs_dft_tools.converters.wien2k.Wien2kConverter.repack.rst", "_python_api/triqs_dft_tools.sumk_dft.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.__init__.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.add_dc.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.analyse_block_structure.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.analyse_block_structure_from_gf.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.analyse_deg_shells.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.calc_dc.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.calc_density_correction.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.calc_mu.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.calculate_diagonalization_matrix.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.calculate_min_max_band_energies.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.check_projectors.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.corr_to_inequiv.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.deg_shells.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.density_matrix.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.downfold.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.eff_atomic_levels.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.extract_G_loc.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver_dict.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver_list.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk_dict.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk_list.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.inequiv_to_corr.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.init_dc.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.lattice_gf.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.load.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.number_of_atoms.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.put_Sigma.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.read_input_from_hdf.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.rotloc.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.save.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.set_Sigma.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.set_dc.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.set_mu.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.solver_to_sumk.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.solver_to_sumk_block.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.sorts_of_atoms.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.sumk_to_solver.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.symm_deg_gf.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.total_density.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.transform_to_solver_blocks.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.transform_to_sumk_blocks.rst", "_python_api/triqs_dft_tools.sumk_dft.SumkDFT.upfold.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.__init__.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.add_dc.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_block_structure.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_block_structure_from_gf.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_deg_shells.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_dc.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_density_correction.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_mu.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calculate_diagonalization_matrix.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calculate_min_max_band_energies.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.check_projectors.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.corr_to_inequiv.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.deg_shells.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.density_matrix.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.density_of_states.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.downfold.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.eff_atomic_levels.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.extract_G_loc.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gen_Akw.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver_dict.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver_list.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk_dict.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk_list.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.inequiv_to_corr.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.init_dc.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.lattice_gf.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.load.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.load_parproj.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.number_of_atoms.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.occupations.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.partial_charges.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.print_hamiltonian.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.proj_type_G_loc.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.put_Sigma.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.read_input_from_hdf.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.rotloc.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.save.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_Sigma.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_dc.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_mu.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.solver_to_sumk.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.solver_to_sumk_block.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.sorts_of_atoms.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.spaghettis.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.spectral_contours.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.sumk_to_solver.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.symm_deg_gf.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.total_density.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.transform_to_solver_blocks.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.transform_to_sumk_blocks.rst", "_python_api/triqs_dft_tools.sumk_dft_tools.SumkDFTTools.upfold.rst", "_python_api/triqs_dft_tools.symmetry.rst", "_python_api/triqs_dft_tools.symmetry.Symmetry.rst", "_python_api/triqs_dft_tools.symmetry.Symmetry.__init__.rst", "_python_api/triqs_dft_tools.symmetry.Symmetry.symmetrize.rst", "_python_api/triqs_dft_tools.trans_basis.rst", "_python_api/triqs_dft_tools.trans_basis.TransBasis.rst", "_python_api/triqs_dft_tools.trans_basis.TransBasis.__init__.rst", "_python_api/triqs_dft_tools.trans_basis.TransBasis.calculate_diagonalisation_matrix.rst", "_python_api/triqs_dft_tools.trans_basis.TransBasis.rotate_gf.rst", "_python_api/triqs_dft_tools.trans_basis.TransBasis.write_trans_file.rst", "_python_api/triqs_dft_tools.util.rst", "_python_api/triqs_dft_tools.util.compute_DC_from_density.rst", "about.rst", "basicnotions/dft_dmft.rst", "basicnotions/first.rst", "basicnotions/structure.rst", "cpp2rst_generated/contents.rst", "cpp2rst_generated/triqs_dft_tools.rst", "documentation.rst", "faqs/faqs.rst", "guide/BasisRotation.rst", "guide/analysis.rst", "guide/blockstructure.rst", "guide/conv_W90.rst", "guide/conv_elk.rst", "guide/conv_generalhk.rst", "guide/conv_vasp.rst", "guide/conv_wien2k.rst", "guide/conversion.rst", "guide/dftdmft_selfcons.rst", "guide/dftdmft_singleshot.rst", "guide/soc.rst", "guide/transport.rst", "h5structure.rst", "index.rst", "install.rst", "issues.rst", "tutorials.rst", "tutorials/ce-gamma-fscs_wien2k.rst", "tutorials/images_scripts/Ce-gamma_DOS_script.rst", "tutorials/images_scripts/Ce-gamma_script.rst", "tutorials/nio_csc_vasp/INCAR.rst", "tutorials/nio_csc_vasp/KPOINTS.rst", "tutorials/nio_csc_vasp/NiO_local_lattice_GF.py.rst", "tutorials/nio_csc_vasp/POSCAR.rst", "tutorials/nio_csc_vasp/converter.py.rst", "tutorials/nio_csc_vasp/maxent.py.rst", "tutorials/nio_csc_vasp/nio.py.rst", "tutorials/nio_csc_vasp/nio_csc.rst", "tutorials/nio_csc_vasp/nio_csc.py.rst", "tutorials/nio_csc_vasp/plo.cfg.rst", "tutorials/sr2mgoso6_nosoc.rst", "tutorials/sr2mgoso6_soc.rst", "tutorials/srvo3.rst", "tutorials/svo_elk/srvo3.rst", "tutorials/svo_vasp/svo_notebook.ipynb"], "indexentries": {}, "objects": {"": [[358, 0, 0, "-", "triqs_dft_tools"]], "triqs_dft_tools": [[1, 0, 0, "-", "block_structure"], [26, 0, 0, "-", "converters"], [239, 0, 0, "-", "sumk_dft"], [285, 0, 0, "-", "sumk_dft_tools"], [340, 0, 0, "-", "symmetry"], [344, 0, 0, "-", "trans_basis"], [350, 0, 0, "-", "util"]], "triqs_dft_tools.block_structure": [[2, 1, 1, "", "BlockStructure"]], "triqs_dft_tools.block_structure.BlockStructure": [[3, 2, 1, "", "__init__"], [4, 2, 1, "", "adapt_deg_shells"], [5, 2, 1, "", "approximate_as_diagonal"], [6, 2, 1, "", "check_gf"], [7, 2, 1, "", "check_matrix"], [8, 2, 1, "", "convert_gf"], [9, 2, 1, "", "convert_matrix"], [10, 2, 1, "", "convert_operator"], [11, 2, 1, "", "copy"], [12, 2, 1, "", "create_gf"], [13, 2, 1, "", "create_matrix"], [14, 3, 1, "", "effective_transformation_solver"], [15, 3, 1, "", "effective_transformation_sumk"], [16, 2, 1, "", "full_structure"], [17, 3, 1, "", "gf_struct_solver_dict"], [18, 3, 1, "", "gf_struct_solver_list"], [19, 3, 1, "", "gf_struct_sumk_dict"], [20, 3, 1, "", "gf_struct_sumk_list"], [21, 3, 1, "", "inequiv_to_corr"], [22, 2, 1, "", "map_gf_struct_solver"], [23, 2, 1, "", "pick_gf_struct_solver"], [24, 2, 1, "", "pick_gf_struct_sumk"], [25, 3, 1, "", "sumk_to_solver_block"]], "triqs_dft_tools.converters": [[27, 0, 0, "-", "converter_tools"], [33, 0, 0, "-", "elk"], [71, 0, 0, "-", "elktools"], [86, 0, 0, "-", "hk"], [93, 0, 0, "-", "plovasp"], [195, 0, 0, "-", "vasp"], [206, 0, 0, "-", "wannier90"], [227, 0, 0, "-", "wien2k"]], "triqs_dft_tools.converters.converter_tools": [[28, 1, 1, "", "ConverterTools"]], "triqs_dft_tools.converters.converter_tools.ConverterTools": [[29, 2, 1, "", "__init__"], [30, 2, 1, "", "det_shell_equivalence"], [31, 2, 1, "", "read_fortran_file"], [32, 2, 1, "", "repack"]], "triqs_dft_tools.converters.elk": [[34, 1, 1, "", "ElkConverter"]], "triqs_dft_tools.converters.elk.ElkConverter": [[35, 2, 1, "", "__init__"], [36, 2, 1, "", "axangsu2"], [37, 2, 1, "", "bzfoldout"], [38, 2, 1, "", "check_dens"], [39, 2, 1, "", "convert_bands_input"], [40, 2, 1, "", "convert_contours_input"], [41, 2, 1, "", "convert_dft_input"], [42, 2, 1, "", "convert_transport_input"], [43, 2, 1, "", "det_shell_equivalence"], [44, 2, 1, "", "determine_T"], [45, 2, 1, "", "determine_rep"], [46, 2, 1, "", "gen_perm"], [47, 2, 1, "", "plotpt3d"], [48, 2, 1, "", "read_eig"], [49, 2, 1, "", "read_elk_file"], [50, 2, 1, "", "read_elk_file2"], [51, 2, 1, "", "read_fortran_file"], [52, 2, 1, "", "read_geometry"], [53, 2, 1, "", "read_kpoints"], [54, 2, 1, "", "read_proj"], [55, 2, 1, "", "read_projector"], [56, 2, 1, "", "readlat"], [57, 2, 1, "", "readsym"], [58, 2, 1, "", "repack"], [59, 2, 1, "", "rotaxang"], [60, 2, 1, "", "rotsym"], [61, 2, 1, "", "sort_dft_eigvalues"], [62, 2, 1, "", "split_string"], [63, 2, 1, "", "split_string2"], [64, 2, 1, "", "split_string3"], [65, 2, 1, "", "symlat_to_complex_harmonics"], [66, 2, 1, "", "update_so_quatities"], [67, 2, 1, "", "v3frac"], [68, 2, 1, "", "ylmrot"], [69, 2, 1, "", "ylmroty"], [70, 2, 1, "", "zyz_euler"]], "triqs_dft_tools.converters.elktools": [[72, 0, 0, "-", "elk_converter_tools"], [85, 0, 0, "-", "readElkfiles"]], "triqs_dft_tools.converters.elktools.elk_converter_tools": [[73, 1, 1, "", "ElkConverterTools"]], "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools": [[74, 2, 1, "", "__init__"], [75, 2, 1, "", "axangsu2"], [76, 2, 1, "", "bzfoldout"], [77, 2, 1, "", "gen_perm"], [78, 2, 1, "", "plotpt3d"], [79, 2, 1, "", "rotaxang"], [80, 2, 1, "", "symlat_to_complex_harmonics"], [81, 2, 1, "", "v3frac"], [82, 2, 1, "", "ylmrot"], [83, 2, 1, "", "ylmroty"], [84, 2, 1, "", "zyz_euler"]], "triqs_dft_tools.converters.hk": [[87, 1, 1, "", "HkConverter"]], "triqs_dft_tools.converters.hk.HkConverter": [[88, 2, 1, "", "__init__"], [89, 2, 1, "", "convert_dft_input"], [90, 2, 1, "", "det_shell_equivalence"], [91, 2, 1, "", "read_fortran_file"], [92, 2, 1, "", "repack"]], "triqs_dft_tools.converters.plovasp": [[94, 0, 0, "-", "atm"], [96, 0, 0, "-", "converter"], [99, 0, 0, "-", "elstruct"], [103, 0, 0, "-", "inpconf"], [121, 0, 0, "-", "plotools"], [130, 0, 0, "-", "proj_group"], [140, 0, 0, "-", "proj_shell"], [157, 0, 0, "-", "sc_dmft"], [173, 0, 0, "-", "vaspio"]], "triqs_dft_tools.converters.plovasp.atm": [[95, 4, 1, "", "dos_tetra_weights_3d"]], "triqs_dft_tools.converters.plovasp.converter": [[97, 4, 1, "", "generate_and_output_as_text"], [98, 4, 1, "", "main"]], "triqs_dft_tools.converters.plovasp.elstruct": [[100, 1, 1, "", "ElectronicStructure"]], "triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure": [[101, 2, 1, "", "__init__"], [102, 2, 1, "", "debug_density_matrix"]], "triqs_dft_tools.converters.plovasp.inpconf": [[104, 1, 1, "", "ConfigParameters"], [120, 4, 1, "", "issue_warning"]], "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters": [[105, 2, 1, "", "__init__"], [106, 2, 1, "", "groups_shells_consistency"], [107, 2, 1, "", "parse_band_window"], [108, 2, 1, "", "parse_energy_window"], [109, 2, 1, "", "parse_file_tmatrix"], [110, 2, 1, "", "parse_general"], [111, 2, 1, "", "parse_groups"], [112, 2, 1, "", "parse_input"], [113, 2, 1, "", "parse_parameter_set"], [114, 2, 1, "", "parse_shells"], [115, 2, 1, "", "parse_string_dosmesh"], [116, 2, 1, "", "parse_string_int"], [117, 2, 1, "", "parse_string_ion_list"], [118, 2, 1, "", "parse_string_logical"], [119, 2, 1, "", "parse_string_tmatrix"]], "triqs_dft_tools.converters.plovasp.plotools": [[122, 4, 1, "", "check_data_consistency"], [123, 4, 1, "", "ctrl_output"], [124, 4, 1, "", "generate_plo"], [125, 4, 1, "", "hk_output"], [126, 4, 1, "", "issue_warning"], [127, 4, 1, "", "kpoints_output"], [128, 4, 1, "", "output_as_text"], [129, 4, 1, "", "plo_output"]], "triqs_dft_tools.converters.plovasp.proj_group": [[131, 1, 1, "", "ProjectorGroup"]], "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup": [[132, 2, 1, "", "__init__"], [133, 2, 1, "", "calc_complement"], [134, 2, 1, "", "calc_hk"], [135, 2, 1, "", "get_block_matrix_map"], [136, 2, 1, "", "nelect_window"], [137, 2, 1, "", "orthogonalize"], [138, 2, 1, "", "orthogonalize_projector_matrix"], [139, 2, 1, "", "select_bands"]], "triqs_dft_tools.converters.plovasp.proj_shell": [[141, 1, 1, "", "ComplementShell"], [149, 1, 1, "", "ProjectorShell"]], "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell": [[142, 2, 1, "", "__init__"], [143, 2, 1, "", "density_matrix"], [144, 2, 1, "", "density_of_states"], [145, 2, 1, "", "extract_projectors"], [146, 2, 1, "", "extract_tmatrices"], [147, 2, 1, "", "local_hamiltonian"], [148, 2, 1, "", "select_projectors"]], "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell": [[150, 2, 1, "", "__init__"], [151, 2, 1, "", "density_matrix"], [152, 2, 1, "", "density_of_states"], [153, 2, 1, "", "extract_projectors"], [154, 2, 1, "", "extract_tmatrices"], [155, 2, 1, "", "local_hamiltonian"], [156, 2, 1, "", "select_projectors"]], "triqs_dft_tools.converters.plovasp.sc_dmft": [[158, 1, 1, "", "bcolors"], [166, 4, 1, "", "excepthook"], [167, 4, 1, "", "get_dft_energy"], [168, 4, 1, "", "is_vasp_lock_present"], [169, 4, 1, "", "is_vasp_running"], [170, 4, 1, "", "main"], [171, 4, 1, "", "run_all"], [172, 4, 1, "", "sigint_handler"]], "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors": [[159, 5, 1, "", "BLUE"], [160, 5, 1, "", "ENDC"], [161, 5, 1, "", "GREEN"], [162, 5, 1, "", "MAGENTA"], [163, 5, 1, "", "RED"], [164, 5, 1, "", "YELLOW"], [165, 2, 1, "", "__init__"]], "triqs_dft_tools.converters.plovasp.vaspio": [[174, 1, 1, "", "Doscar"], [177, 1, 1, "", "Eigenval"], [180, 1, 1, "", "Kpoints"], [183, 1, 1, "", "Plocar"], [188, 1, 1, "", "Poscar"], [191, 1, 1, "", "VaspData"], [193, 4, 1, "", "read_lines"], [194, 4, 1, "", "read_symmcar"]], "triqs_dft_tools.converters.plovasp.vaspio.Doscar": [[175, 2, 1, "", "__init__"], [176, 2, 1, "", "from_file"]], "triqs_dft_tools.converters.plovasp.vaspio.Eigenval": [[178, 2, 1, "", "__init__"], [179, 2, 1, "", "from_file"]], "triqs_dft_tools.converters.plovasp.vaspio.Kpoints": [[181, 2, 1, "", "__init__"], [182, 2, 1, "", "from_file"]], "triqs_dft_tools.converters.plovasp.vaspio.Plocar": [[184, 2, 1, "", "__init__"], [185, 2, 1, "", "from_file"], [186, 2, 1, "", "locproj_parser"], [187, 2, 1, "", "search_for"]], "triqs_dft_tools.converters.plovasp.vaspio.Poscar": [[189, 2, 1, "", "__init__"], [190, 2, 1, "", "from_file"]], "triqs_dft_tools.converters.plovasp.vaspio.VaspData": [[192, 2, 1, "", "__init__"]], "triqs_dft_tools.converters.vasp": [[196, 1, 1, "", "VaspConverter"]], "triqs_dft_tools.converters.vasp.VaspConverter": [[197, 2, 1, "", "__init__"], [198, 2, 1, "", "convert_dft_input"], [199, 2, 1, "", "convert_misc_input"], [200, 2, 1, "", "convert_symmetry_input"], [201, 2, 1, "", "det_shell_equivalence"], [202, 2, 1, "", "read_data"], [203, 2, 1, "", "read_fortran_file"], [204, 2, 1, "", "read_header_and_data"], [205, 2, 1, "", "repack"]], "triqs_dft_tools.converters.wannier90": [[207, 1, 1, "", "Wannier90Converter"], [213, 4, 1, "", "build_kmesh"], [214, 4, 1, "", "check_and_adapt_for_soc"], [215, 4, 1, "", "check_bloch_basis_hk"], [216, 4, 1, "", "check_hr"], [217, 4, 1, "", "check_wannier_basis_hk"], [218, 4, 1, "", "find_rot_mat"], [219, 4, 1, "", "fourier_transform_hamiltonian"], [220, 4, 1, "", "generate_local_so_matrix_t2g"], [221, 4, 1, "", "read_all_wannier90_data"], [222, 4, 1, "", "read_input_file"], [223, 4, 1, "", "read_misc_input"], [224, 4, 1, "", "read_wannier90_blochbasis_data"], [225, 4, 1, "", "read_wannier90_hr_data"], [226, 4, 1, "", "reorder_orbital_and_spin"]], "triqs_dft_tools.converters.wannier90.Wannier90Converter": [[208, 2, 1, "", "__init__"], [209, 2, 1, "", "convert_dft_input"], [210, 2, 1, "", "det_shell_equivalence"], [211, 2, 1, "", "read_fortran_file"], [212, 2, 1, "", "repack"]], "triqs_dft_tools.converters.wien2k": [[228, 1, 1, "", "Wien2kConverter"]], "triqs_dft_tools.converters.wien2k.Wien2kConverter": [[229, 2, 1, "", "__init__"], [230, 2, 1, "", "convert_bands_input"], [231, 2, 1, "", "convert_dft_input"], [232, 2, 1, "", "convert_misc_input"], [233, 2, 1, "", "convert_parproj_input"], [234, 2, 1, "", "convert_symmetry_input"], [235, 2, 1, "", "convert_transport_input"], [236, 2, 1, "", "det_shell_equivalence"], [237, 2, 1, "", "read_fortran_file"], [238, 2, 1, "", "repack"]], "triqs_dft_tools.sumk_dft": [[240, 1, 1, "", "SumkDFT"]], "triqs_dft_tools.sumk_dft.SumkDFT": [[241, 2, 1, "", "__init__"], [242, 2, 1, "", "add_dc"], [243, 2, 1, "", "analyse_block_structure"], [244, 2, 1, "", "analyse_block_structure_from_gf"], [245, 2, 1, "", "analyse_deg_shells"], [246, 2, 1, "", "calc_dc"], [247, 2, 1, "", "calc_density_correction"], [248, 2, 1, "", "calc_mu"], [249, 2, 1, "", "calculate_diagonalization_matrix"], [250, 2, 1, "", "calculate_min_max_band_energies"], [251, 2, 1, "", "check_projectors"], [252, 3, 1, "", "corr_to_inequiv"], [253, 3, 1, "", "deg_shells"], [254, 2, 1, "", "density_matrix"], [255, 2, 1, "", "downfold"], [256, 2, 1, "", "eff_atomic_levels"], [257, 2, 1, "", "extract_G_loc"], [258, 3, 1, "", "gf_struct_solver"], [259, 3, 1, "", "gf_struct_solver_dict"], [260, 3, 1, "", "gf_struct_solver_list"], [261, 3, 1, "", "gf_struct_sumk"], [262, 3, 1, "", "gf_struct_sumk_dict"], [263, 3, 1, "", "gf_struct_sumk_list"], [264, 3, 1, "", "inequiv_to_corr"], [265, 2, 1, "", "init_dc"], [266, 2, 1, "", "lattice_gf"], [267, 2, 1, "", "load"], [268, 2, 1, "", "number_of_atoms"], [269, 2, 1, "", "put_Sigma"], [270, 2, 1, "", "read_input_from_hdf"], [271, 2, 1, "", "rotloc"], [272, 2, 1, "", "save"], [273, 2, 1, "", "set_Sigma"], [274, 2, 1, "", "set_dc"], [275, 2, 1, "", "set_mu"], [276, 3, 1, "", "solver_to_sumk"], [277, 3, 1, "", "solver_to_sumk_block"], [278, 2, 1, "", "sorts_of_atoms"], [279, 3, 1, "", "sumk_to_solver"], [280, 2, 1, "", "symm_deg_gf"], [281, 2, 1, "", "total_density"], [282, 2, 1, "", "transform_to_solver_blocks"], [283, 2, 1, "", "transform_to_sumk_blocks"], [284, 2, 1, "", "upfold"]], "triqs_dft_tools.sumk_dft_tools": [[286, 1, 1, "", "SumkDFTTools"]], "triqs_dft_tools.sumk_dft_tools.SumkDFTTools": [[287, 2, 1, "", "__init__"], [288, 2, 1, "", "add_dc"], [289, 2, 1, "", "analyse_block_structure"], [290, 2, 1, "", "analyse_block_structure_from_gf"], [291, 2, 1, "", "analyse_deg_shells"], [292, 2, 1, "", "calc_dc"], [293, 2, 1, "", "calc_density_correction"], [294, 2, 1, "", "calc_mu"], [295, 2, 1, "", "calculate_diagonalization_matrix"], [296, 2, 1, "", "calculate_min_max_band_energies"], [297, 2, 1, "", "check_projectors"], [298, 3, 1, "", "corr_to_inequiv"], [299, 3, 1, "", "deg_shells"], [300, 2, 1, "", "density_matrix"], [301, 2, 1, "", "density_of_states"], [302, 2, 1, "", "downfold"], [303, 2, 1, "", "eff_atomic_levels"], [304, 2, 1, "", "extract_G_loc"], [305, 2, 1, "", "gen_Akw"], [306, 3, 1, "", "gf_struct_solver"], [307, 3, 1, "", "gf_struct_solver_dict"], [308, 3, 1, "", "gf_struct_solver_list"], [309, 3, 1, "", "gf_struct_sumk"], [310, 3, 1, "", "gf_struct_sumk_dict"], [311, 3, 1, "", "gf_struct_sumk_list"], [312, 3, 1, "", "inequiv_to_corr"], [313, 2, 1, "", "init_dc"], [314, 2, 1, "", "lattice_gf"], [315, 2, 1, "", "load"], [316, 2, 1, "", "load_parproj"], [317, 2, 1, "", "number_of_atoms"], [318, 2, 1, "", "occupations"], [319, 2, 1, "", "partial_charges"], [320, 2, 1, "", "print_hamiltonian"], [321, 2, 1, "", "proj_type_G_loc"], [322, 2, 1, "", "put_Sigma"], [323, 2, 1, "", "read_input_from_hdf"], [324, 2, 1, "", "rotloc"], [325, 2, 1, "", "save"], [326, 2, 1, "", "set_Sigma"], [327, 2, 1, "", "set_dc"], [328, 2, 1, "", "set_mu"], [329, 3, 1, "", "solver_to_sumk"], [330, 3, 1, "", "solver_to_sumk_block"], [331, 2, 1, "", "sorts_of_atoms"], [332, 2, 1, "", "spaghettis"], [333, 2, 1, "", "spectral_contours"], [334, 3, 1, "", "sumk_to_solver"], [335, 2, 1, "", "symm_deg_gf"], [336, 2, 1, "", "total_density"], [337, 2, 1, "", "transform_to_solver_blocks"], [338, 2, 1, "", "transform_to_sumk_blocks"], [339, 2, 1, "", "upfold"]], "triqs_dft_tools.symmetry": [[341, 1, 1, "", "Symmetry"]], "triqs_dft_tools.symmetry.Symmetry": [[342, 2, 1, "", "__init__"], [343, 2, 1, "", "symmetrize"]], "triqs_dft_tools.trans_basis": [[345, 1, 1, "", "TransBasis"]], "triqs_dft_tools.trans_basis.TransBasis": [[346, 2, 1, "", "__init__"], [347, 2, 1, "", "calculate_diagonalisation_matrix"], [348, 2, 1, "", "rotate_gf"], [349, 2, 1, "", "write_trans_file"]], "triqs_dft_tools.util": [[351, 4, 1, "", "compute_DC_from_density"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [0, 2, 5, 6, 8, 9, 14, 17, 18, 19, 20, 23, 24, 36, 59, 65, 69, 70, 75, 79, 80, 83, 84, 121, 241, 243, 244, 245, 246, 255, 257, 266, 269, 271, 282, 283, 284, 289, 290, 291, 292, 301, 302, 304, 305, 314, 321, 322, 324, 332, 333, 337, 338, 339, 343, 348, 351, 352, 353, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 377, 378, 379, 380, 383, 387, 389, 391, 392, 393, 394, 395], "0": [4, 6, 7, 8, 9, 10, 12, 13, 18, 20, 22, 23, 24, 40, 206, 213, 216, 218, 220, 240, 241, 246, 248, 280, 286, 287, 292, 294, 301, 305, 332, 333, 335, 351, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395], "00": [379, 380], "00000": [391, 392], "000000": [378, 391, 392, 393], "0000000": [378, 391, 392, 393, 395], "00000000": [364, 378, 391, 392, 393, 394], "000000000": [364, 394], "0000000000": 384, "0000001": 395, "0000003": 395, "000001": [369, 380, 388, 389], "0000038": 395, "0000042": 395, "000005000": [391, 392], "0000066": 395, "0000070": 395, "0000078": 395, "0000080": 395, "00001000": [378, 393], "000010000": [391, 392], "00005000": 393, "0001": [378, 393, 394], "00010000": 393, "000100000": [391, 392], "0001854": 395, "00018730701619647": 351, "0003240": 395, "0003707": 395, "000554": 392, "000739": 391, "0007559": 395, "0007563": 395, "001": [301, 332, 333, 361, 389], "001156": 392, "0015674": 395, "0015679": 395, "0016078": 395, "0021714": 395, "0021719": 395, "0022211": 395, "003574": 392, "01": [248, 294, 367, 386, 387, 389, 391, 392, 393], "011530": 392, "012866": 378, "013": 378, "014697": 392, "018": [0, 351], "018026": 392, "018147": 392, "02": [369, 378, 379, 388, 392], "020080": 392, "020434": 391, "028": 391, "028268": 392, "03": 392, "033088": 351, "035120": 372, "04": 375, "048438": 392, "05": [243, 244, 245, 289, 290, 291, 372, 381, 388, 395], "054529": 352, "055": [364, 394], "06": [46, 77, 207, 208, 392], "07": [364, 394], "071": 392, "085101": 352, "085104": 372, "09": [391, 392], "099298": 391, "0_": 353, "0m": 160, "0th": [23, 24], "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395], "10": [0, 8, 9, 351, 363, 364, 365, 367, 369, 373, 381, 387, 388, 391, 392, 395], "100": [248, 294, 359, 387, 389, 391], "1000": [362, 369, 372, 383, 387, 388, 389], "10000": 378, "100000": [391, 392, 393, 394], "1000000": [391, 392, 393, 394], "101": 372, "1025": [240, 241, 286, 287, 378], "1038": [0, 351], "1080": 351, "10x10": 392, "11": [364, 365, 367, 393], "1103": 351, "111512": 392, "11253e": 392, "12": [364, 391, 392, 394, 395], "120": 372, "1225_fm": 378, "123": [387, 389, 391, 392, 393], "128": 392, "13": [361, 364, 365, 366], "131": 392, "14": [364, 365, 366, 367, 381, 388, 391, 392, 393, 395], "15": [364, 370, 375, 393, 394], "150": 359, "156": 391, "157594": 392, "16": [359, 362, 364, 365, 393, 394, 395], "160": 393, "16290063e": 392, "165115": 388, "166": 372, "16f": [369, 380, 394], "17": [366, 384], "1710": 366, "173": 391, "173j": 391, "175": 378, "17717": 378, "18": 359, "18000000": 392, "18e6": 392, "19004569e": 392, "1930": 353, "1e": [46, 77, 243, 244, 245, 289, 290, 291, 362, 366, 383, 387, 389, 395], "1st": [23, 24], "1x1": [361, 362, 391], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395], "20": [0, 117, 386, 388], "200": [352, 359, 391, 392, 393, 394], "2000": [389, 391], "20000": [386, 389], "200000": 387, "2001": [366, 378, 379, 395], "20045070e": 392, "2006": 372, "2007": [370, 388], "2009": 352, "201": 386, "2010": 372, "2011": 352, "2015": 206, "2016": [206, 352], "2018": 366, "2019": 395, "2020": 206, "2021": 206, "2022": 206, "204": 352, "21": [364, 367, 388, 390, 395], "216": 0, "21790000": [391, 392], "22": [0, 367, 375], "225": 0, "227": 0, "228": 0, "229": 0, "22991244e": 392, "23": [367, 393], "24": [0, 359], "24181422e": 392, "24610000": [391, 392], "247": 391, "24863778e": 392, "24e6": 391, "25": 364, "250": 0, "252": 0, "254943": 392, "25730000": [391, 392], "260500000": [364, 394], "261300": 393, "27": 395, "27731": [0, 351], "28002405": 395, "2925": 361, "29359496e": 392, "2d": [243, 289, 364], "2e": [207, 208], "2g": [361, 362, 363, 366, 371, 391, 394, 395], "2m_e": 353, "2p": 363, "2x2": [362, 391], "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395], "30": [366, 387, 389, 393, 394], "3000": 378, "30431196e": 392, "30734642e": 392, "32": 364, "3221_pm": 393, "3332630": 395, "3333123": 395, "3333128": 395, "33737319": 395, "34": 395, "35": [381, 388], "363933": 392, "370632": 378, "38": [391, 392, 393], "3834262": 395, "39": 395, "391": 391, "3m": [378, 393], "3x2": [366, 395], "3x3": [362, 392, 395], "3y2": 366, "4": [40, 70, 84, 117, 186, 351, 359, 362, 363, 364, 365, 366, 372, 373, 375, 378, 379, 384, 386, 387, 389, 391, 392, 393, 394, 395], "40": [240, 241, 286, 287, 361, 362, 372, 378, 379, 380, 391, 392, 393, 394, 395], "400": [388, 390], "43": [391, 392], "4374": 395, "4495": 372, "45": 363, "475901": 366, "48285647": 395, "4f": [378, 380], "4i6": 366, "5": [0, 180, 186, 208, 248, 294, 351, 359, 361, 362, 363, 364, 365, 366, 367, 369, 372, 378, 380, 381, 383, 386, 387, 388, 389, 391, 392, 393, 394, 395], "50": [359, 387, 389], "5000": [378, 393], "50000": [391, 392, 393], "50000000": [364, 391, 392, 393, 394], "5000000000": 384, "502746": 391, "507954": [391, 392], "51": 372, "52": 395, "52bccac": 0, "54": 388, "55": [388, 390], "56": 370, "560": 366, "56271503": 378, "56285812": 378, "56287381": 378, "56318334": 378, "5633801": 395, "5633806": 395, "56342250": 378, "567": [387, 389, 391, 392, 393], "572": 392, "58": [378, 391, 392], "580": 366, "5815486": 395, "5815487": 395, "5875772": 395, "5876172": 395, "5876177": 395, "59": [387, 388, 389], "5x5": 392, "6": [0, 67, 81, 208, 220, 354, 359, 361, 362, 363, 364, 365, 366, 371, 372, 373, 378, 379, 380, 381, 382, 386, 388, 391, 392, 395], "60": [369, 386, 393, 394], "608": 392, "64": [355, 365, 369], "644": 366, "65": [393, 394], "689539": 395, "695": 366, "6f": [380, 387, 389, 393, 394], "7": [354, 364, 366, 372, 380, 381, 386, 388, 393, 394, 395], "70": [379, 380, 393], "70akalin": 0, "729": 395, "73": 372, "735763": 391, "74270000": [391, 392], "75": [378, 388], "750000": 378, "75000000": [391, 392], "75390000": [391, 392], "76": [391, 392], "77161009e": 392, "781": [378, 391, 392, 393], "78210000": [391, 392], "8": [67, 81, 354, 363, 364, 366, 370, 372, 387, 388, 389, 391, 392, 393, 394], "80": 352, "8000": 387, "804": 364, "80477133e": 392, "805": [364, 369, 394], "806": 364, "807": 364, "808": [364, 369, 394], "809": 364, "815j": 391, "82": 372, "820": 364, "829": 370, "84": 352, "87": [391, 392], "884": 391, "884535": 392, "89": [391, 392], "9": [117, 364, 378, 388, 390, 394, 395], "90": [378, 391, 392, 393], "91": 393, "91m": 163, "9294790": 395, "9294791": 395, "92m": 161, "93m": 164, "94": [391, 392], "94m": 159, "9501031": 372, "95348202e": 392, "95m": 162, "968880": [391, 392], "9715748": 395, "9715751": 395, "985": 391, "985j": 391, "99": [366, 367], "99544": 391, "99583": 392, "9998880790966638": 395, "9999741659673522": 395, "9x9x9": 384, "A": [0, 14, 15, 21, 117, 248, 267, 294, 301, 305, 315, 319, 332, 333, 352, 353, 354, 358, 359, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 375, 388, 391, 392, 393, 394], "And": [393, 394], "As": [301, 354, 355, 360, 361, 362, 363, 364, 366, 369, 371, 372, 373, 378, 388, 391, 392, 393, 394], "At": [355, 366, 367, 368, 369, 370, 391, 392], "BE": 373, "Be": [5, 362, 369, 370], "By": [281, 301, 332, 333, 336, 349, 361, 378], "FOR": [68, 82], "For": [0, 12, 13, 14, 23, 24, 113, 133, 135, 246, 292, 301, 305, 333, 351, 353, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 388, 391, 392, 393, 394, 395], "IF": 366, "IN": [365, 378], "If": [12, 13, 23, 24, 59, 79, 115, 145, 146, 153, 154, 225, 241, 243, 244, 245, 246, 247, 248, 257, 266, 269, 281, 289, 290, 291, 292, 293, 294, 301, 304, 305, 314, 318, 319, 322, 332, 333, 336, 342, 352, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 376, 378, 391, 392, 393, 394], "In": [0, 2, 5, 14, 15, 106, 115, 118, 137, 266, 314, 352, 353, 354, 355, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 388, 391, 392, 393, 394, 395], "It": [241, 247, 254, 293, 300, 341, 343, 354, 355, 360, 361, 362, 364, 365, 366, 367, 370, 372, 373, 378, 388, 391, 392, 393, 394], "Its": [353, 373], "NOT": [117, 351, 361, 372], "No": [254, 300, 364, 373, 395], "OF": [378, 391, 392, 393], "ON": [359, 372, 375], "OR": 2, "Of": [353, 359, 370, 393], "On": [353, 361, 393, 394], "One": [115, 365, 366, 369, 378], "THEN": 366, "TO": 373, "That": [17, 18, 19, 20, 366, 369, 371, 373], "The": [0, 2, 14, 17, 18, 19, 20, 31, 49, 50, 51, 59, 79, 88, 91, 104, 109, 115, 117, 121, 123, 125, 129, 131, 133, 135, 137, 139, 149, 203, 211, 221, 224, 226, 237, 241, 243, 244, 245, 246, 247, 249, 256, 269, 271, 281, 282, 283, 289, 290, 291, 292, 293, 295, 301, 303, 322, 324, 332, 333, 336, 337, 338, 343, 352, 353, 354, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 387, 388, 389, 395], "Then": [364, 370, 371, 378, 391, 392, 393], "There": [137, 146, 154, 246, 292, 346, 353, 361, 366, 370, 371, 373, 375], "These": [301, 332, 333, 353, 361, 364, 365, 366, 367, 369, 370, 372, 373, 375, 378, 391, 392], "To": [0, 23, 24, 281, 336, 362, 366, 369, 370, 372, 373, 375, 378, 388, 391, 392, 393, 394], "With": [353, 362, 363, 370], "_": [55, 256, 301, 303, 332, 333, 353, 359, 361, 364, 366, 372, 395], "_0": 364, "_3": [369, 395], "_a": [55, 364], "_f": 364, "_fs_": [333, 361], "_il": 134, "_it": [386, 388], "_omega_": [333, 361], "_proj": [301, 332, 333, 361], "_spin": 221, "_triq": 375, "_wanband": 364, "a_": 372, "a_brav": 188, "a_out": 386, "ab": [239, 240, 374], "abl": 361, "abort": [0, 206], "about": [2, 8, 9, 56, 121, 125, 354, 362, 363, 364, 369, 371, 373, 376, 378], "abov": [246, 292, 301, 332, 333, 351, 352, 353, 355, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 388, 391, 392, 393, 394], "absolut": [372, 381, 388], "accept": [115, 117], "access": 378, "accid": 388, "accord": [0, 8, 9, 12, 13, 24, 117, 121, 131, 145, 149, 153, 246, 282, 283, 292, 337, 338, 353, 367, 372, 378, 391], "accordingli": [0, 246, 292, 369], "account": [244, 290, 362, 367, 378, 393, 394], "accur": 372, "achiev": [353, 360, 363, 372], "act": 10, "actual": [23, 88, 245, 291, 353, 355, 360, 362, 363, 366, 367, 368, 370, 373, 378, 391, 392, 395], "ad": [0, 220, 241, 366, 367, 369, 371], "adapt": [0, 4, 371, 378, 388, 393, 394], "add": [0, 133, 208, 220, 241, 359, 366, 369, 370, 388, 394], "add_lambda": [0, 207, 208, 214, 220, 221, 363], "addit": [0, 222, 232, 355, 363, 365, 366, 367, 368, 374, 375, 378, 393, 394], "addition": [241, 354, 361, 363, 366, 372, 378, 388, 395], "adjust": [0, 353, 369, 372, 393, 394], "adopt": [355, 369], "adv": 370, "advanc": [305, 370, 393, 394], "advantag": 362, "advis": [362, 369, 372, 375, 393, 394], "aforement": 364, "after": [0, 62, 63, 64, 125, 244, 290, 353, 355, 363, 364, 365, 366, 367, 369, 370, 373, 375, 378, 379, 380, 388, 391, 392, 393, 394], "afterward": [354, 395], "again": [137, 353, 361, 365, 367, 388, 392, 393, 394], "against": 0, "againt": 375, "agre": 353, "agreement": 0, "aichhorn": [0, 352], "aim": [362, 374, 393, 394], "akw": [305, 332, 333, 361], "akw_": [332, 333, 361], "al": [366, 373, 388], "alberto": 0, "alexand": 0, "algorithm": [248, 294], "align": 0, "aliv": 169, "all": [0, 2, 6, 7, 26, 31, 49, 50, 51, 89, 91, 95, 106, 114, 117, 121, 123, 128, 129, 135, 139, 146, 154, 191, 197, 200, 203, 208, 211, 213, 221, 226, 237, 243, 244, 245, 247, 249, 255, 257, 269, 271, 283, 284, 289, 290, 291, 293, 295, 302, 304, 305, 319, 322, 324, 332, 338, 339, 353, 355, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 376, 377, 378, 381, 391, 392, 393, 394, 395], "all_reduc": [0, 383], "alloc": 366, "allow": [0, 246, 292, 351, 353, 354, 355, 363, 366, 367, 376], "almd": [358, 367, 369, 371, 378, 391, 392, 393], "almost": [369, 394], "alon": [353, 394], "along": [12, 40, 247, 248, 257, 266, 281, 293, 294, 304, 314, 333, 336, 361, 364, 366, 369], "alongsid": [301, 332, 333, 361], "alpha": [359, 372, 388], "alpha_max": 386, "alpha_mesh": 386, "alpha_min": 386, "alphabet": [0, 18], "alreadi": [0, 349, 354, 355, 361, 370, 375, 391], "also": [0, 121, 179, 206, 333, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 378, 388, 391, 392, 393, 394, 395], "alter": [0, 364], "altern": [241, 244, 290, 360, 370], "although": [371, 391, 392], "aluminum": 353, "alwai": [0, 2, 363, 366, 369], "alyn": [0, 364, 394], "amend": [364, 369], "amf": [246, 292, 351, 370, 379, 380, 387, 389, 393, 394], "amix": [369, 388], "amount": [353, 388], "an": [0, 6, 7, 8, 9, 21, 22, 23, 24, 34, 59, 79, 87, 103, 104, 115, 117, 121, 139, 186, 196, 206, 207, 222, 228, 241, 246, 256, 267, 280, 292, 301, 303, 315, 335, 346, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 378, 388, 391, 392, 393, 394], "ana": 386, "anaconda": 0, "analyiss": 285, "analys": [241, 243, 244, 245, 286, 289, 290, 291, 361, 363, 378, 393, 394], "analyse_block_structur": [0, 241, 244, 290, 360, 366], "analyse_block_structure_from_gf": [383, 387, 389, 395], "analyse_deg_shel": [244, 290], "analysi": [0, 244, 290, 358, 360, 364, 366, 367, 377], "analyt": [94, 95, 355, 359, 361, 372, 378], "analyz": [0, 383, 386, 388], "analyzer_result": 386, "anderson": [353, 362, 371], "angi": [68, 82], "angl": [59, 69, 70, 79, 83, 84, 378], "angular": [367, 373, 375, 378, 391, 392, 393], "ani": [0, 301, 332, 333, 352, 361, 362, 363, 364, 366, 367, 371, 375, 378, 392, 394], "anoth": [22, 353, 355, 360, 361, 364, 365, 366], "antoin": 352, "anymor": [378, 395], "anywai": [362, 366], "apart": 369, "app": 0, "app4triq": 0, "app_convert": 0, "appli": [2, 133, 134, 146, 154, 341, 364, 366, 369, 373], "applic": [0, 98, 352, 353, 354, 373, 374, 375, 376, 378, 379, 380, 388], "appreci": 352, "approach": [373, 378], "appropri": [39, 40, 41, 89, 137, 209, 230, 231, 233, 375, 391, 392], "approx": 378, "approxim": [5, 8, 9, 246, 292, 353, 360, 363, 369, 377, 391, 392], "approximate_as_diagon": 362, "apr": 206, "apt": 375, "ar": [0, 2, 6, 7, 8, 9, 24, 60, 89, 106, 115, 117, 118, 121, 129, 137, 139, 145, 146, 149, 153, 154, 173, 179, 206, 217, 220, 232, 241, 243, 244, 245, 246, 247, 255, 267, 269, 270, 272, 280, 284, 287, 289, 290, 291, 292, 293, 301, 302, 315, 319, 322, 323, 325, 332, 333, 335, 339, 343, 346, 351, 352, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 380, 383, 386, 387, 388, 389, 391, 392, 393, 394, 395], "arbitrari": 366, "arbitrarili": 360, "archiv": [0, 32, 35, 39, 40, 41, 42, 58, 88, 89, 92, 197, 200, 205, 208, 209, 212, 229, 230, 231, 232, 233, 235, 238, 241, 301, 305, 318, 319, 332, 333, 342, 346, 361, 363, 364, 366, 367, 368, 369, 370, 372, 373, 388, 391, 392, 393, 394], "area": 395, "argument": [0, 2, 12, 366], "argv": [387, 389], "aris": 372, "arm": 0, "around": [69, 83, 246, 292, 351, 364, 366, 367, 370, 372, 388, 392], "arount": 366, "arp": 361, "arrai": [0, 2, 9, 14, 15, 40, 61, 66, 95, 100, 121, 129, 131, 137, 138, 139, 141, 145, 149, 153, 180, 183, 186, 188, 243, 289, 301, 305, 318, 319, 332, 333, 361, 362, 364, 366, 373, 383, 391, 392], "array_view": 95, "arriv": [391, 392], "artifact": [301, 332, 333, 361], "ascend": 139, "ascii": 364, "ask": [358, 369], "aspect": 354, "assum": [121, 139, 180, 220, 246, 292, 342, 354, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 375, 388, 393, 394], "assumpt": [254, 300], "atom": [0, 46, 77, 100, 125, 256, 268, 301, 303, 305, 317, 332, 333, 341, 355, 361, 363, 364, 365, 366, 367, 369, 371, 373, 378, 379, 380, 388, 391, 392, 393, 394], "atpo": [46, 77], "atposl": [364, 394], "attribut": [2, 158, 240, 241, 243, 244, 245, 286, 289, 290, 291], "aug": 206, "author": 0, "autom": 394, "automat": [0, 106, 232, 269, 301, 322, 332, 333, 358, 361, 362, 363, 364, 366, 371, 372, 373, 377, 382, 388], "autosummari": 0, "avail": [0, 26, 213, 354, 359, 360, 361, 362, 363, 364, 367, 370, 372, 375, 391, 392], "avec": [364, 394], "averag": [247, 280, 293, 335, 392], "avoid": [146, 154, 301, 332, 333, 361, 363, 367], "awai": [0, 5, 8, 9, 23, 24], "ax": [359, 363], "axi": [59, 69, 79, 83, 247, 248, 257, 266, 281, 293, 294, 304, 314, 336, 354, 361, 372, 377, 378, 379], "b": [14, 18, 20, 352, 359, 362, 372, 378, 391, 392, 393], "b1": 40, "b2": 40, "b3": 40, "back": [121, 137, 353, 360], "background": 388, "backward": 0, "band": [0, 35, 42, 95, 100, 107, 121, 138, 139, 197, 199, 221, 223, 224, 229, 232, 235, 241, 281, 301, 316, 318, 321, 332, 336, 353, 354, 355, 358, 364, 366, 367, 368, 369, 371, 372, 373, 374, 378, 388, 390, 393, 394, 395], "band_window": [38, 61, 223, 373], "bandcharact": 0, "bands_convert": 316, "bands_data": [240, 241, 286, 287], "bands_subgrp": [34, 35, 39, 196, 197, 228, 229, 230], "bandwin_fil": 199, "barrier": [380, 383], "base": [0, 24, 35, 197, 206, 208, 218, 229, 342, 352, 353, 354, 355, 366, 368, 369, 373, 374], "basenam": [125, 127, 129, 366, 388], "bash": [0, 98, 394], "basi": [0, 44, 45, 55, 60, 208, 215, 217, 219, 221, 223, 225, 247, 281, 293, 301, 336, 344, 345, 348, 353, 354, 358, 361, 363, 364, 366, 367, 371, 373, 375, 378, 380, 388], "basic": [353, 354, 355, 362, 366, 367, 370, 372, 373, 378, 393, 394, 395], "bbox_inch": 359, "bc_data": [240, 241], "bc_subgrp": [34, 35], "bcast": [370, 379, 380, 383, 387, 389, 393, 394], "becaus": [22, 109, 217, 222, 244, 290, 353, 354, 368, 369, 370, 371, 373], "beck": [0, 206], "becom": [354, 363, 369], "been": [0, 68, 82, 206, 352, 361, 364, 366, 369, 372, 375, 391, 394], "befor": [2, 23, 24, 266, 314, 353, 355, 360, 361, 366, 369, 370, 371, 372, 378, 388, 391, 392, 393, 394, 395], "begin": [362, 363], "behavior": [0, 353, 366], "behind": 366, "being": [2, 107, 108, 135, 206, 208, 333, 353, 361, 369], "belong": [2, 135, 363, 365, 373], "below": [0, 38, 222, 243, 244, 245, 289, 290, 291, 360, 361, 363, 364, 366, 367, 369, 370, 372, 373, 375, 378, 393, 394], "benefici": [354, 362, 391, 392], "besid": [0, 372], "best": 375, "beta": [0, 12, 69, 83, 240, 241, 247, 248, 254, 281, 286, 287, 293, 294, 300, 336, 361, 362, 372, 378, 379, 380, 383, 387, 388, 389, 391, 392, 393, 394, 395], "better": [186, 360, 381, 388], "between": [2, 30, 43, 90, 106, 123, 197, 201, 210, 226, 236, 243, 244, 245, 247, 248, 257, 266, 281, 289, 290, 291, 293, 294, 304, 314, 336, 352, 353, 360, 362, 363, 366, 367, 372, 373, 391, 395], "beyond": 222, "bfcmt": [364, 394], "bibtex": 352, "biermann": 352, "bigger": 366, "bin": [369, 375], "binari": [185, 364, 372], "bisect": [0, 248, 294], "bit": [245, 291, 367, 371, 391, 392], "bl_map": 135, "black": 354, "blaha": 372, "bloc": [393, 394], "bloch": [133, 208, 215, 247, 256, 281, 293, 303, 336, 353, 355, 366, 369, 373, 380], "bloch_basi": [0, 206, 207, 208, 214, 221, 224, 363], "block": [0, 1, 2, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 135, 137, 241, 243, 244, 249, 255, 257, 269, 271, 283, 284, 289, 290, 295, 302, 304, 321, 322, 324, 338, 339, 348, 358, 360, 361, 366, 371, 378, 380, 383, 387, 388, 389, 391, 392, 393, 394, 395], "block_1": 22, "block_2": 22, "block_dimens": [18, 20], "block_gf": 0, "block_list": [361, 383], "block_map": 135, "block_nam": [2, 18, 20, 361], "block_structr": 241, "block_structur": [0, 243, 244, 245, 246, 289, 290, 291, 292, 360, 383, 387, 389, 391, 392, 395], "block_sumk": 14, "block_txtfil": 361, "blockgf": [0, 6, 8, 12, 244, 245, 257, 266, 269, 282, 283, 290, 291, 304, 314, 322, 337, 338, 343, 348, 361, 362, 383], "blockstructur": [0, 241, 249, 295, 360, 362, 391, 392], "blue": [359, 395], "bmix": [369, 388], "bname": [17, 19, 255, 284, 302, 339, 383], "bodi": [353, 388], "bohr": [378, 393], "bond": 363, "bool": [2, 8, 9, 149, 208, 244, 246, 249, 257, 269, 290, 292, 295, 304, 322, 347], "boolean": [35, 88, 89, 197, 199, 208, 229, 241, 257, 266, 270, 281, 301, 304, 305, 314, 318, 319, 323, 332, 333, 336, 361], "both": [121, 146, 154, 301, 332, 333, 361, 363, 364, 365, 369, 371, 375, 395], "bottom": [353, 366, 378], "bound": [0, 248, 294], "box": [354, 364], "bracket": 366, "break": [0, 395], "brent": [0, 248, 294], "brief": [354, 394], "brillouin": [241, 257, 304, 355, 361, 364, 367, 372, 373, 378, 391, 393], "bring": [0, 218], "broadcast": [368, 370], "broaden": [247, 248, 257, 266, 281, 293, 294, 301, 304, 305, 314, 332, 333, 336, 361, 372, 378, 379], "broyden": 370, "bryan": 386, "buffer": 366, "bug": [0, 352, 363, 366, 376], "bugfix": 0, "build": [0, 137, 354, 361, 366, 370, 375, 376, 393, 394, 395], "built": 374, "bump": 0, "button": 354, "bz": [243, 289, 373, 378], "bz_weight": [38, 373, 383], "c": [0, 186, 352, 366, 367, 375, 392], "c_1": 2, "c_2": 2, "c_i": 2, "cage": 360, "calc": [378, 387, 389, 393, 394], "calc_dc": [360, 370, 380, 387, 388, 389, 391, 392, 393, 394], "calc_dc_for_dens": 0, "calc_dc_from_dens": 0, "calc_density_correct": [0, 369, 380, 388, 389, 394], "calc_in_solver_block": [249, 295, 347, 391, 392], "calc_mu": [0, 360, 369, 370, 380, 387, 388, 389, 391, 392, 393, 394], "calcul": [0, 23, 24, 36, 40, 42, 44, 45, 65, 66, 68, 70, 75, 80, 82, 84, 94, 96, 102, 133, 134, 137, 206, 223, 235, 241, 243, 246, 247, 248, 249, 251, 254, 256, 257, 266, 281, 289, 292, 293, 294, 295, 297, 300, 301, 303, 304, 305, 314, 318, 319, 321, 332, 333, 336, 347, 352, 353, 354, 358, 360, 361, 362, 363, 364, 365, 366, 368, 369, 373, 374, 377, 380, 387, 388, 389, 395], "calculate_density_matrix": 0, "calculate_diagonalization_matrix": [360, 391, 392], "calculate_dos_wannier_basi": 371, "call": [0, 4, 32, 58, 92, 98, 205, 212, 232, 238, 244, 290, 355, 360, 361, 362, 363, 364, 366, 369, 370, 371, 372, 373, 375, 378, 388, 391, 392, 393, 394], "camf": 351, "can": [0, 2, 34, 44, 87, 117, 118, 137, 196, 206, 207, 208, 217, 228, 234, 241, 245, 269, 271, 283, 291, 322, 324, 338, 353, 354, 355, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 388, 391, 392, 393, 394, 395], "candid": 133, "cannot": [241, 353, 371, 391, 392], "care": [360, 362, 363, 366, 369, 370, 388, 391, 392], "carefulli": [361, 363, 372, 395], "carlo": 362, "carri": 370, "carta": 0, "cartesian": [333, 361, 364], "case": [0, 42, 115, 117, 118, 123, 135, 137, 197, 199, 200, 206, 232, 234, 235, 266, 301, 314, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 378, 391, 392, 393, 394], "categori": [383, 387, 389], "caus": 206, "cb": 359, "cd": [375, 379], "ce": [355, 369], "cea": 352, "cell": [0, 341, 355, 363, 365, 369, 372, 373], "center": [361, 363, 364], "central": [353, 355], "certain": [0, 23, 24, 131, 353, 360, 361, 364, 366, 395], "cf_f_mm2": 375, "cf_p_cubic": 375, "cfg": [366, 385, 388, 395], "cfg_file": 171, "cfll": 351, "chang": [2, 66, 226, 355, 359, 364, 366, 367, 369, 372, 374, 375, 378, 388], "changelog": 374, "channel": [123, 221, 366, 373, 381, 388, 395], "charact": [0, 364], "charg": [0, 38, 247, 248, 281, 293, 294, 319, 336, 352, 354, 358, 364, 366, 367, 368, 370, 371, 373, 374, 375, 380, 387, 389, 391, 392, 393, 395], "charge_below": 373, "check": [0, 6, 7, 38, 100, 103, 106, 121, 122, 179, 206, 208, 214, 215, 216, 217, 221, 251, 297, 362, 363, 367, 371, 372, 375, 378, 380, 387, 388, 389, 391, 392, 393, 394], "checker": 0, "checkout": 375, "cheld": [246, 292, 351], "chemic": [0, 248, 257, 266, 275, 281, 294, 301, 304, 305, 314, 318, 319, 328, 332, 333, 336, 353, 355, 361, 362, 365, 369, 370, 372, 373, 378, 379, 380, 388, 391, 392, 393, 394], "chemical_potenti": [257, 266, 281, 304, 314, 336, 361, 369, 370, 372, 379, 380, 383, 387, 388, 389, 391, 392, 393, 394], "chemical_potential_init": 380, "chgcar": 388, "chi_": 353, "chi_l": 366, "chmod": 375, "choic": [0, 353, 360, 361, 367, 378, 391, 392, 393, 394], "choos": [23, 24, 366, 371, 378, 392], "chose": 388, "chosen": [222, 241, 360, 362, 363, 366, 372], "circumv": 366, "citat": 352, "cite": 388, "clarif": 0, "clarifi": 0, "class": [0, 1, 2, 12, 13, 27, 28, 33, 34, 35, 72, 73, 86, 87, 88, 99, 100, 103, 104, 130, 131, 140, 141, 149, 157, 158, 173, 174, 177, 180, 183, 188, 191, 195, 196, 197, 206, 207, 208, 227, 228, 229, 239, 240, 241, 269, 285, 286, 287, 322, 340, 341, 342, 344, 345, 346, 347, 350, 353, 360, 361, 362, 363, 366, 370, 371, 373, 378, 379, 380, 391, 392, 393, 394], "classif": 353, "classifi": 353, "classmethod": 16, "claud": 206, "cleanup": 0, "clearli": 378, "click": 354, "clone": 375, "close": [206, 369, 378, 380, 391, 392, 393, 394, 395], "closest": 372, "cluster": [137, 369], "cm": 359, "cmake": 376, "cmakecach": 376, "cmakelist": 376, "cmap": 359, "code": [0, 14, 206, 223, 239, 240, 247, 293, 354, 355, 358, 360, 361, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 393], "code_vers": [387, 389], "coeffici": 372, "coher": 0, "coincid": [388, 395], "collabor": 352, "collect": [361, 366], "collinear": [0, 100, 123, 149, 366], "colorbar": 359, "colour": 359, "column": [301, 332, 333, 361, 366, 371], "com": [375, 376], "combat": 0, "combin": [121, 221, 239, 240, 301, 355, 361, 362, 366, 369, 374], "come": [0, 100, 354, 355, 361, 366, 368], "command": [0, 355, 366, 367, 369, 370, 375, 376, 392], "comment": [0, 333, 361, 364, 365, 366, 373], "commit": 0, "common": 370, "commonli": 362, "commt": 352, "commun": 352, "compar": [0, 361, 371, 372, 388], "comparison": [0, 395], "compat": [0, 88, 214, 365, 366, 369, 373], "compil": 376, "complement": [133, 141, 366, 388, 390], "complet": [353, 362, 363, 364, 366, 372, 373, 378, 391, 392], "complex": [0, 13, 65, 68, 80, 82, 100, 129, 138, 218, 219, 220, 221, 360, 364, 366, 367, 373, 375, 378, 391, 392, 393], "compli": 363, "complianc": 367, "compon": [0, 67, 81, 89, 363], "compos": 361, "compound": [353, 371], "compress": 0, "compris": 137, "compromis": [248, 294], "comput": [0, 345, 351, 354, 369, 378, 379, 380, 389, 391, 392, 393, 394], "computation": 353, "compute_dc_from_dens": [246, 292], "concept": 355, "conda": 375, "conden": 366, "condit": [345, 366, 370], "conduct": [0, 353, 355, 372], "conductivity_and_seebeck": 372, "conductor": 353, "conf": [96, 104, 112, 124], "conf_filenam": 97, "conf_par": [123, 124, 125, 129], "config": [97, 103, 104, 121, 125, 129, 131, 141, 146, 149, 154, 366], "configur": [0, 375, 388, 395], "conj": 2, "conj_1": 2, "conj_2": 2, "conj_i": 2, "conjug": [2, 14, 391, 392], "connect": [354, 355], "consecut": 370, "consid": [22, 135, 234, 243, 244, 245, 289, 290, 291, 319, 355, 370], "consider": 393, "consist": [0, 22, 100, 106, 121, 122, 123, 135, 137, 179, 221, 224, 247, 293, 319, 352, 354, 358, 360, 362, 368, 370, 373, 374, 375, 387, 389, 391, 393, 395], "constant": [246, 292, 372], "constitut": 12, "constraint": 353, "construct": [12, 16, 60, 137, 218, 241, 352, 354, 355, 361, 362, 363, 367, 369, 373, 375, 378, 387, 389, 393, 394], "constructor": [8, 9, 12, 131, 132, 149, 367], "cont_data": [240, 241, 286, 287], "cont_subgrp": [34, 35, 40], "contain": [0, 2, 26, 88, 100, 104, 109, 121, 123, 125, 131, 137, 141, 149, 174, 177, 179, 183, 188, 191, 200, 213, 234, 241, 247, 267, 269, 283, 293, 301, 305, 315, 318, 321, 322, 332, 333, 338, 341, 355, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 375, 378, 388], "content": [48, 52, 53, 54, 55, 362, 363, 373], "context": [353, 355], "continu": [355, 359, 361, 369, 372, 373, 378, 392], "contour": [0, 368], "contribut": [241, 301, 305, 332, 333, 353, 361, 362, 372, 380], "contributor": [0, 352], "control": [0, 123, 369], "conv": 0, "conv_elk": 0, "conveni": [361, 366, 393, 394], "convent": [0, 59, 70, 79, 84, 125, 135, 208, 246, 292, 364, 365, 367, 387, 389, 391, 392], "converg": [248, 294, 353, 369, 370, 372, 378, 381, 388, 393, 394, 395], "convers": [0, 34, 73, 87, 196, 207, 228, 354, 355, 368, 388, 393, 394], "convert": [2, 8, 9, 10, 27, 33, 71, 86, 93, 195, 206, 227, 247, 248, 281, 293, 294, 316, 336, 355, 358, 361, 362, 363, 364, 365, 367, 368, 369, 372, 374, 378, 379, 380, 389, 391, 392, 393, 394], "convert_bands_input": [364, 367], "convert_contours_input": 364, "convert_dft_input": [232, 363, 364, 365, 366, 367, 372, 379, 380, 385, 388, 389, 391, 392, 393, 394, 395], "convert_gf": [14, 362], "convert_matrix": [391, 392], "convert_oper": [360, 391, 392], "convert_parpoj_input": 378, "convert_parproj_input": [367, 379], "convert_transport_input": 372, "convinc": 352, "coordin": [57, 180, 188, 213, 218, 281, 332, 333, 336, 355, 361, 364, 373], "copi": [222, 366, 375, 388, 393, 395], "copper": 353, "core": [355, 366, 369, 371, 378, 388, 393, 394], "corner": [95, 364], "corr": [0, 255, 271, 284, 302, 324, 339, 366, 380, 388, 390], "corr_energy_it": 389, "corr_shel": [0, 30, 43, 45, 66, 90, 201, 210, 214, 215, 218, 222, 234, 236, 301, 361, 373, 379, 380, 383, 387, 389, 393, 394], "corr_to_inequiv": [2, 3, 16, 30, 43, 90, 201, 210, 236, 373], "correct": [0, 12, 13, 246, 247, 251, 257, 266, 274, 292, 293, 297, 301, 304, 305, 314, 318, 319, 327, 332, 333, 351, 353, 355, 360, 361, 363, 366, 369, 370, 373, 375, 378, 380, 388, 389, 391, 392, 394, 395], "correctli": [0, 363, 366], "correl": [0, 2, 12, 13, 14, 15, 16, 21, 30, 35, 38, 43, 88, 90, 125, 197, 201, 208, 210, 222, 223, 229, 234, 236, 241, 243, 244, 245, 246, 249, 254, 255, 256, 257, 269, 271, 274, 280, 282, 283, 284, 289, 290, 291, 292, 295, 300, 301, 302, 303, 304, 305, 322, 324, 327, 332, 333, 335, 337, 338, 339, 342, 353, 355, 361, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 378, 380, 388, 391, 392, 394, 395], "correnerg": [369, 380, 388, 389, 394], "correspon": [247, 293], "correspond": [0, 2, 6, 7, 8, 9, 12, 13, 14, 16, 59, 79, 96, 121, 133, 135, 148, 156, 187, 208, 215, 226, 241, 243, 244, 245, 255, 257, 280, 281, 284, 289, 290, 291, 301, 302, 304, 332, 333, 335, 336, 339, 341, 361, 363, 364, 366, 367, 369, 373, 378, 388, 391, 392], "cost": [393, 394], "cost_funct": 386, "could": [22, 270, 323, 363, 366], "coulomb": [353, 370, 378, 388], "count": [0, 242, 246, 257, 265, 274, 281, 288, 292, 301, 304, 305, 313, 318, 319, 327, 332, 333, 336, 351, 353, 355, 361, 369, 370, 372, 378, 380, 387, 388, 389, 391, 392, 393, 394], "counter": 2, "coupl": [0, 66, 206, 214, 220, 234, 241, 301, 320, 355, 358, 360, 361, 362, 363, 366, 367, 370, 373, 378, 391, 392], "cours": [353, 355, 359, 366, 369, 370, 375, 393], "cover": [354, 355, 371], "coverag": [0, 375], "covert": 73, "creat": [0, 5, 8, 9, 12, 13, 35, 88, 100, 106, 197, 206, 208, 229, 282, 283, 301, 318, 332, 333, 337, 338, 355, 361, 363, 365, 366, 367, 369, 375, 378, 379, 388, 393, 395], "create_gf": [362, 383, 387, 389, 395], "create_group": [370, 380, 383, 387, 389, 393, 394], "cricchio": 372, "criteria": [393, 394], "criterion": [378, 388], "critic": 366, "cross": 364, "crucial": [363, 372], "crude": 388, "crystal": [57, 65, 80, 100, 249, 295, 347, 353, 360, 363, 364, 366, 372, 373, 391, 392], "crystallin": 353, "csc": [255, 284, 302, 339, 366, 369, 383], "csc_dmft": 369, "csh": 16, "ct": [355, 372, 378], "cthyb": [353, 370, 375, 388, 393, 394], "cthyb_git": [387, 389], "cthyb_vers": [387, 389], "ctmqc": 391, "ctqmc": [360, 383, 387, 389], "ctqmcout": [197, 367, 378], "ctrl": [123, 129, 200, 366, 395], "ctrl_head": 200, "cubic": [44, 45, 364, 366, 367, 373, 375, 391, 392, 393, 395], "cumbersum": 360, "current": [0, 44, 206, 353, 361, 364, 366, 368, 369, 372], "customiz": 354, "cut": [0, 353, 371], "cycl": [0, 353, 354, 355, 368, 369, 377, 387, 389, 391, 392], "d": [301, 353, 361, 362, 364, 365, 366, 367, 369, 372, 373, 380, 381, 387, 388, 389, 390, 391, 392, 394, 395], "d_": [301, 361, 363, 391], "d_xy": 220, "d_xz": 220, "d_yz": 220, "dagger": 2, "dai": 354, "dario": 0, "dat": [225, 301, 320, 332, 333, 359, 361, 363, 366, 378, 395], "data": [0, 35, 39, 40, 41, 42, 88, 89, 97, 99, 100, 104, 121, 122, 123, 127, 173, 174, 177, 183, 188, 191, 197, 198, 202, 204, 208, 209, 221, 222, 229, 230, 231, 232, 233, 234, 235, 241, 267, 270, 272, 286, 301, 315, 316, 318, 323, 325, 332, 333, 342, 346, 353, 361, 363, 366, 368, 370, 372, 377, 379, 380, 391, 392, 393, 394, 395], "data_typ": 316, "dataset": [267, 270, 272, 315, 323, 325], "dav": 369, "dbuild_dep": 0, "dbuild_document": 375, "dbuild_test": 375, "dc": [0, 246, 266, 292, 314, 351, 353, 370, 378, 379, 380, 387, 388, 389, 393, 394], "dc_energ": [246, 274, 292, 327, 361, 369, 370, 372, 379, 380, 383, 387, 389, 391, 392, 393, 394], "dc_energy_it": 389, "dc_imp": [246, 274, 292, 327, 361, 369, 370, 372, 379, 380, 383, 387, 389, 391, 392, 393, 394], "dc_type": [360, 379, 380, 387, 389, 391, 392, 393, 394], "dc_val": 351, "dc_valu": [387, 388, 389], "dc_value_init": 380, "dcmake_build_typ": 375, "dcmake_install_prefix": 375, "deactiv": 388, "deal": [354, 393, 394], "debian": 0, "debug": [366, 375], "dec": 206, "decoupl": 362, "def": 389, "default": [0, 6, 7, 8, 9, 12, 16, 113, 182, 185, 190, 247, 248, 257, 269, 280, 281, 293, 294, 301, 304, 322, 332, 333, 335, 336, 351, 360, 361, 363, 364, 366, 367, 369, 373, 378, 391, 393], "defin": [0, 31, 40, 49, 50, 51, 60, 91, 96, 102, 106, 117, 119, 125, 129, 131, 135, 138, 203, 206, 211, 219, 220, 237, 247, 249, 280, 293, 295, 335, 347, 353, 361, 363, 364, 365, 366, 372, 373, 388, 393, 394], "definit": [319, 351, 352, 353, 366, 367, 393, 394], "deg_shel": [2, 3, 4, 280, 335, 387, 389, 395], "degener": [206, 245, 280, 291, 335, 363, 387, 389, 391, 395], "degeneraci": [219, 221, 280, 335, 395], "degre": [226, 347, 353, 363], "degshel": 0, "del": [383, 386, 387, 389], "delta": [248, 294, 378], "delta_": [256, 303, 353], "deltan": [247, 293], "demonstr": [362, 370], "den": [247, 281, 293, 336], "deng": 352, "deniti": 380, "denot": 0, "dens": 372, "dens_mat": [246, 254, 292, 300, 319], "densiti": [0, 38, 102, 125, 241, 243, 244, 246, 247, 249, 251, 254, 289, 290, 292, 293, 295, 297, 300, 301, 318, 319, 321, 343, 347, 351, 354, 355, 360, 363, 364, 365, 366, 367, 369, 370, 371, 373, 378, 380, 387, 388, 389, 391, 392, 393, 394, 395], "density_of_st": [0, 361, 378], "density_requir": 373, "depend": [109, 234, 246, 281, 292, 301, 336, 351, 355, 361, 363, 366, 368, 369, 370, 372, 373, 393], "depr": 0, "depract": 0, "deprec": 0, "deriv": [246, 292], "describ": [180, 333, 353, 355, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 378, 393, 394], "descript": [0, 69, 83, 246, 292, 353, 361, 366, 370, 372, 378], "design": 375, "desir": [248, 294, 316, 359, 364, 366, 370, 372, 378, 388], "detail": [0, 353, 363, 368, 369, 370, 371, 372, 386, 388, 393, 394], "detect": [245, 291, 366, 370, 388], "determin": [30, 43, 45, 59, 79, 90, 136, 201, 210, 236, 241, 243, 244, 245, 247, 248, 268, 278, 281, 289, 290, 291, 293, 294, 301, 317, 331, 332, 333, 336, 343, 353, 355, 360, 361, 363, 364, 366, 373, 388, 391, 392, 393, 394, 395], "develop": [352, 355], "dewhurst": 372, "dft": [0, 35, 88, 98, 197, 208, 223, 229, 241, 243, 247, 248, 251, 266, 289, 293, 294, 297, 301, 314, 332, 333, 351, 354, 355, 361, 362, 363, 366, 367, 368, 372, 373, 374, 377, 380], "dft_bandchar_input": [34, 35, 240, 241], "dft_bands_input": [34, 35, 196, 197, 228, 229, 240, 241, 286, 287], "dft_code": [0, 373], "dft_contours_input": [34, 35, 240, 241, 286, 287], "dft_data": [240, 241, 286, 287], "dft_dmft_cthyb": 393, "dft_dmft_cthyb_elk": 394, "dft_fermi_weight": 373, "dft_file": 54, "dft_filenam": [369, 370, 378, 379, 380, 393, 394], "dft_input": [0, 34, 35, 87, 88, 196, 197, 207, 208, 228, 229, 240, 241, 286, 287, 372, 373], "dft_misc_input": [34, 35, 196, 197, 207, 208, 228, 229, 240, 241, 286, 287, 372, 373], "dft_parproj_input": [196, 197, 228, 229, 240, 241, 286, 287], "dft_subgrp": [34, 35, 41, 87, 88, 89, 196, 197, 207, 208, 209, 228, 229, 231], "dft_symmcorr_input": [34, 35, 87, 88, 196, 197, 207, 208, 228, 229, 240, 241, 286, 287, 373], "dft_symmpar_input": [34, 35, 196, 197, 228, 229, 240, 241, 286, 287], "dft_tool": [125, 206, 351, 352, 361, 375, 376, 388], "dft_tools_git": 389, "dft_tools_vers": [387, 389], "dft_transp_input": [34, 35, 196, 197, 228, 229, 240, 241, 286, 287, 372], "dfttool": [0, 26, 121, 353, 358, 359, 360, 362, 363, 365, 366, 370, 371, 395], "di": 224, "diagon": [0, 5, 22, 217, 241, 249, 254, 295, 300, 345, 347, 349, 360, 363, 364, 371, 378, 388, 391, 392], "diagonalis": [249, 295, 347, 348, 360, 362, 371, 391, 392], "dichotomi": [0, 248, 294, 380], "dict": [0, 2, 7, 9, 14, 15, 16, 22, 23, 24, 30, 31, 43, 49, 50, 51, 90, 91, 100, 124, 131, 141, 149, 183, 200, 201, 203, 210, 211, 234, 236, 237, 243, 249, 254, 289, 295, 300, 301, 305, 318, 332, 333, 361, 373], "dictionari": [2, 17, 19, 31, 49, 50, 51, 91, 104, 115, 124, 190, 200, 203, 211, 237, 332, 333, 361], "dicttyp": 343, "differ": [0, 100, 135, 137, 243, 244, 245, 289, 290, 291, 353, 354, 355, 359, 360, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 378, 391, 392], "difficult": 393, "dim": [125, 218, 301, 332, 333, 361, 363, 365, 373, 379, 380, 383, 387, 389, 393, 394], "dim_corr_shel": [215, 217, 221], "dim_rep": [45, 66, 373], "dimens": [2, 16, 17, 18, 19, 20, 135, 213, 301, 332, 333, 353, 361, 363, 365, 366, 373, 395], "dimension": 361, "dir": 367, "direct": [271, 324, 364, 369, 371, 372, 384], "directli": [14, 98, 226, 249, 295, 351, 359, 361, 366, 373, 376, 378], "directori": [182, 185, 190, 367, 369, 371, 375, 376, 379, 388, 394, 395], "directorynam": 379, "dis_win_max": 363, "dis_win_min": 363, "disabl": [375, 393], "disappear": 371, "discourag": 360, "discuss": [353, 361, 364, 369, 370, 372, 391, 392, 393, 394], "disentangl": [0, 206, 363, 391], "displai": [257, 304], "distanc": [247, 248, 257, 266, 281, 293, 294, 304, 314, 336], "distinct": [281, 336], "distort": [360, 391, 392], "distribut": [121, 364, 372, 375], "divid": 241, "dm": [243, 249, 251, 289, 295, 297, 347, 360, 361, 370, 380, 387, 388, 389, 391, 392, 393, 394], "dm_type": [0, 247, 293, 369, 388, 389], "dmatdmft": [364, 369, 394], "dmft": [0, 247, 293, 301, 332, 333, 352, 354, 361, 362, 363, 365, 368, 369, 371, 372, 373, 374, 377, 379, 380, 387, 389, 395], "dmft_cycl": [171, 369, 388, 389], "dmft_info": 369, "dmft_input": [383, 387, 389], "dmft_output": [361, 370, 372, 380, 393, 394], "dmft_result": [370, 383, 386, 387, 388, 389], "dmft_script": 369, "dmft_script_it": [387, 389], "dmftproj": [0, 349, 353, 355, 358, 359, 367, 371, 372, 373, 375, 377, 391, 392, 393], "dn": [199, 369, 371, 380, 392, 394], "do": [0, 2, 23, 24, 94, 95, 133, 144, 152, 206, 222, 301, 305, 318, 321, 332, 333, 346, 353, 354, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 378, 379, 381, 387, 388, 389, 391, 392, 393, 394, 395], "do_transform": [146, 154], "doc": 0, "document": [30, 43, 90, 201, 210, 236, 353, 354, 355, 360, 361, 362, 363, 368, 369, 371, 373, 374, 375, 393, 394], "doe": [0, 35, 88, 118, 125, 197, 206, 208, 215, 229, 354, 355, 358, 361, 363, 366, 369, 371, 372, 378, 391, 392, 393, 394], "doesn": 364, "doi": [0, 351], "don": [14, 23, 24, 362, 367], "done": [255, 281, 284, 302, 336, 339, 347, 353, 355, 360, 361, 362, 364, 366, 367, 368, 369, 371, 373, 378, 391, 392, 393, 394], "doption1": 375, "doption2": 375, "dos_": [301, 361], "dos_filenam": 176, "dos_parproj_basi": 379, "dos_tetra3d": 0, "dos_wann_": 371, "dos_wannier_basi": [0, 367, 371], "doscar": [0, 100, 173, 366], "doscorrdown": 378, "doscorrup": 378, "doscorrup_proj3": 378, "dosmesh": [366, 388, 390, 395], "dosocc": [301, 361], "dosproj": [301, 361], "dosproj_orb": [301, 361], "doubl": [0, 40, 95, 242, 246, 247, 248, 257, 265, 266, 274, 281, 288, 292, 293, 294, 301, 304, 305, 313, 314, 318, 319, 327, 332, 333, 336, 347, 351, 353, 355, 361, 364, 369, 370, 372, 378, 380, 387, 388, 389, 391, 392, 393, 394], "down": [0, 23, 24, 208, 226, 301, 360, 361, 362, 373, 378, 383, 387, 389, 391, 392, 393, 394, 395], "down_0": 395, "down_1": [391, 395], "down_2": [391, 395], "down_3": 391, "downarrow": 363, "downfold": [215, 257, 304, 321, 353, 355, 364, 373, 383], "download": [354, 375, 383, 385, 386, 387, 389, 390], "dramat": 353, "drop": [23, 24], "dtest_coverag": 375, "dtype": [13, 180, 188], "due": [8, 9, 245, 291, 362, 369, 378, 391, 392], "dummi": 373, "dure": [0, 257, 304, 354, 364, 366, 375, 376, 391, 392, 393, 394], "dx": 0, "dx2": [366, 395], "dxy": [366, 395], "dxz": [366, 395], "dylan": 0, "dymkovski": 206, "dynam": [354, 369, 374], "dyson": [353, 362], "dyz": [366, 395], "dz2": [366, 395], "e": [0, 8, 9, 14, 16, 117, 135, 137, 197, 206, 220, 245, 246, 249, 280, 282, 291, 292, 295, 301, 332, 333, 335, 337, 347, 352, 353, 354, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 378, 381, 386, 388, 391, 393, 394, 395], "e_": [371, 378], "e_f": 378, "e_fermi": 176, "e_g": 391, "e_val": 351, "each": [0, 2, 14, 15, 16, 17, 18, 19, 20, 22, 40, 109, 117, 121, 125, 129, 135, 137, 146, 154, 188, 213, 218, 221, 241, 243, 244, 245, 249, 254, 256, 274, 281, 289, 290, 291, 295, 300, 301, 303, 305, 327, 332, 333, 336, 341, 352, 354, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 378, 388, 391, 392, 393, 394, 395], "eal": [249, 295, 347, 360, 378, 379, 380, 391, 392], "eal2": [391, 392], "eal3": 392, "earlier": 366, "eas": 388, "easi": [354, 355, 362, 369, 373, 392], "easier": 376, "easili": [353, 360, 369, 372, 378], "ecol": 352, "eder": 206, "ediff": [381, 388, 395], "edit": [0, 359], "efermi": [0, 48, 100, 123, 364, 366, 395], "efermi_requir": [191, 192], "eff_atlevel": [256, 303], "eff_atomic_level": [243, 289, 378, 379, 380, 391, 392], "effect": [14, 15, 256, 257, 303, 304, 353, 361, 369, 370, 378], "effici": [354, 355, 373, 393, 394], "eg": [365, 367, 373, 388], "eg_orb": 386, "eig": [224, 363], "eig1": 129, "eig2": 129, "eig_filenam": 179, "eigenst": 373, "eigenv": [173, 366], "eigenvalu": [61, 100, 129, 131, 134, 138, 139, 177, 179, 206, 218, 221, 224, 363, 364, 366, 369, 371, 378, 388], "eigenvector": 364, "eigk": 95, "eign": 129, "eigval": [48, 100, 131, 132, 133, 134, 139, 364, 395], "eigval_f": 364, "either": [2, 234, 271, 281, 324, 333, 336, 361, 366, 369], "el": 372, "el_struct": [102, 122, 123, 124, 125, 127, 128, 129, 136, 143, 144, 147, 151, 152, 155], "elabor": 395, "electron": [99, 100, 125, 136, 352, 353, 355, 363, 364, 365, 366, 367, 369, 372, 373, 378, 394, 395], "electronicstructur": 124, "element": [0, 2, 5, 8, 9, 22, 30, 42, 43, 66, 90, 117, 123, 201, 210, 217, 221, 224, 225, 235, 236, 241, 243, 244, 245, 289, 290, 291, 362, 363, 371, 372, 391, 392], "elementari": 353, "elist": 359, "elk": [71, 73, 75, 79, 80, 81, 83, 84, 247, 293, 358, 361, 368, 375], "elk_fcsc": 394, "elk_mast": 394, "elkconvert": [364, 372, 394], "els": [12, 13, 257, 269, 304, 322, 353, 370, 380, 383], "elsewher": [109, 363], "emax": [115, 129, 139, 359, 366, 381, 388, 395], "embed": 366, "emesh": [144, 152], "emin": [115, 129, 139, 359, 366, 381, 388, 395], "emploi": 378, "empti": [0, 88, 301, 305, 332, 333, 361, 362, 366, 378], "en": [61, 95, 378], "enabl": [364, 372], "encount": [187, 369, 391, 392], "end": [362, 363, 364, 366, 369, 370, 391, 392, 394], "endif": 366, "energi": [0, 38, 61, 95, 108, 115, 121, 129, 131, 139, 148, 156, 167, 206, 223, 242, 246, 257, 266, 269, 274, 281, 283, 288, 292, 301, 304, 305, 314, 318, 319, 322, 327, 332, 333, 336, 338, 351, 352, 353, 354, 355, 359, 360, 362, 363, 366, 367, 368, 369, 370, 372, 373, 378, 379, 380, 381, 387, 388, 389, 391, 392, 393, 394, 395], "energy_unit": [61, 369, 373, 394], "energy_window": 372, "enforc": [280, 335, 366], "enhanc": 366, "enough": 370, "ensur": [0, 106, 135, 137, 224, 248, 294, 363, 364, 369, 370, 375], "entangl": 224, "entir": [23, 24, 366], "entri": [2, 6, 7, 352, 360, 362, 373, 391, 392], "entropi": 354, "environ": [354, 359, 375], "ep": [67, 81, 134], "eps_l": 134, "epsilon": 378, "epsilon_": [256, 303], "epsilon_nk": 224, "epslat": [46, 77], "eq": [364, 394], "equal": [115, 243, 244, 245, 289, 290, 291, 301, 332, 333, 361, 363, 366, 371, 373, 378, 395], "equat": [351, 353, 362, 364, 367, 369, 394], "equival": [0, 30, 43, 90, 117, 201, 210, 236, 255, 269, 271, 284, 302, 322, 324, 339, 343, 361, 363, 364, 365, 366, 369, 373], "erik": 0, "error": [0, 6, 7, 206, 217, 358, 363], "especi": [0, 372], "espresso": [0, 208, 363], "essenti": [370, 378, 380], "et": [366, 388], "etc": [121, 186, 241, 355, 360, 366, 373, 375], "eth": 206, "euler": [70, 84], "ev": [224, 301, 332, 333, 359, 361, 362, 363, 364, 372, 378, 388, 394], "evalu": [246, 281, 292, 333, 336, 361, 364, 366, 369, 395], "evecsv": 364, "even": [353, 369, 370], "eventu": [186, 371, 391, 392], "everi": [14, 15, 208, 226, 247, 293, 360, 364, 366, 369], "everyth": [221, 360, 367, 391, 392, 393, 394], "ewindow": [366, 388, 390, 395], "exact": [353, 355, 369, 380, 395], "exactli": [287, 361, 362], "exampl": [0, 22, 301, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 373, 375, 378, 388, 391, 392, 393, 394, 395], "except": [113, 364, 367, 368, 372, 393, 394], "excess": [62, 63, 64], "exchang": [353, 378], "excit": 353, "exclam": 364, "exclude_band": 363, "execut": [219, 364, 366, 367, 369, 375, 376, 378, 388, 391, 392, 393, 394, 395], "exept": [267, 315], "exist": [106, 133, 346, 353], "expans": [354, 370], "expect": 369, "experi": [353, 361], "experienc": 376, "experiment": 364, "expert": [332, 361], "expertis": 371, "explain": [353, 361, 364, 367], "explan": [353, 366], "explanatori": [393, 394], "explicit": 361, "explicitli": [16, 106, 353, 363, 371, 388], "expos": 0, "extend": [0, 44, 286, 353, 366, 368], "extens": [285, 353, 361, 364, 365, 367, 369, 375], "extern": [369, 388], "extra": 367, "extract": [0, 145, 146, 153, 154, 257, 304, 366, 370, 395], "extract_g_loc": [0, 282, 337, 360, 370, 380, 383, 387, 389, 391, 392, 393, 394, 395], "ey": 392, "f": [118, 187, 333, 353, 361, 362, 364, 366, 367, 369, 370, 372, 378, 380, 394], "f0": 378, "f12": 366, "f2py": 0, "f90": 364, "facilit": 360, "fact": [118, 362, 371, 378], "factor": [0, 245, 291, 370, 372, 380, 393, 394], "fail": [0, 206, 218, 353, 363, 366], "fairli": 369, "fall": 367, "fals": [0, 34, 35, 87, 88, 89, 100, 113, 118, 123, 135, 137, 196, 197, 207, 208, 228, 229, 240, 241, 247, 266, 281, 282, 286, 287, 293, 301, 305, 314, 318, 319, 332, 333, 336, 337, 347, 361, 363, 364, 366, 370, 372, 378, 379, 380, 383, 387, 388, 389, 390, 393, 395], "familiar": [354, 364, 367, 369], "famou": [353, 362], "far": 363, "fashion": 366, "fast": [370, 378], "faster": [0, 248, 294], "fastest": 0, "fcc": 378, "fcsc": [364, 369, 394], "fe": 365, "feat": 0, "featur": [0, 360, 372], "feb": 206, "feedback": [353, 369], "feedstock": 375, "fer": 359, "fermi": [0, 38, 40, 100, 123, 183, 223, 247, 248, 281, 293, 294, 333, 336, 353, 358, 361, 363, 366, 367, 368, 372, 373, 392, 395], "fermi_energi": 223, "fermi_weight": 223, "fermion": [360, 362, 383, 387, 389], "fermon": [360, 371], "ferrero": 352, "ferw": [100, 183], "fese": 365, "few": [0, 354, 355, 369, 370, 388, 393, 394], "fewer": [363, 373, 394], "ff": 378, "fh": 202, "fictiti": 362, "field": [241, 246, 249, 292, 295, 347, 351, 354, 370, 374], "fig": 359, "figur": [0, 361, 372, 386, 391, 392], "file": [0, 2, 31, 32, 34, 35, 39, 40, 41, 49, 50, 51, 58, 62, 63, 64, 71, 87, 88, 89, 91, 92, 96, 97, 100, 103, 104, 109, 112, 117, 121, 123, 124, 125, 127, 128, 129, 131, 141, 149, 173, 177, 179, 185, 186, 187, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 237, 238, 247, 267, 270, 272, 293, 301, 315, 316, 318, 320, 323, 325, 332, 333, 349, 352, 355, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 387, 389, 391, 392, 393, 394], "fileio": 366, "filenam": [31, 34, 35, 49, 50, 51, 87, 88, 91, 109, 123, 125, 129, 182, 185, 190, 193, 196, 197, 199, 203, 204, 211, 228, 229, 237, 247, 293, 349, 359, 361, 364, 365, 366, 367, 369, 370, 372, 379, 380, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395], "filext": [48, 53, 55], "fill": [353, 378, 391, 392, 395], "filterwarn": [383, 387, 389], "final": [361, 364, 370, 371, 372, 375, 378, 388, 391, 392, 393, 394, 395], "find": [0, 67, 81, 218, 248, 294, 352, 363, 369, 376, 380, 391, 392, 393, 394, 395], "find_rot_mat": [0, 206], "finder": 0, "fine": [369, 375], "finish": [244, 290, 354, 369, 380, 391, 392], "finit": 353, "fior": 0, "first": [0, 89, 107, 108, 118, 121, 125, 137, 208, 226, 254, 300, 352, 354, 355, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 378, 380, 387, 388, 389, 391, 392, 393, 394, 395], "first_real_part_matrix": 89, "fit": [0, 377, 388, 391, 392, 394], "fit_max_mo": [387, 389, 391, 392, 393, 394], "fit_max_n": [387, 389, 391, 393, 394], "fit_max_w": 392, "fit_min_n": [387, 389, 391, 393, 394], "fit_min_w": 392, "fit_tail": 393, "five": [366, 391, 392, 395], "fix": [0, 369, 380, 388], "fix_gf_struct_typ": 0, "fixm": [255, 284, 302, 339], "flag": [100, 146, 154, 333, 360, 361, 363, 364, 366, 367, 369, 371, 378, 388, 391, 392, 393, 394, 395], "fledg": [366, 374], "flexibl": 354, "fll": [246, 292, 351, 370, 379, 380, 387, 389, 391, 392, 393, 394], "float": [0, 8, 9, 31, 49, 50, 51, 91, 95, 100, 108, 115, 139, 180, 188, 203, 208, 211, 213, 219, 221, 223, 225, 237, 246, 247, 248, 254, 257, 274, 275, 281, 292, 293, 294, 300, 304, 327, 328, 336, 351, 366, 373], "fluctuat": 369, "flush": 366, "fmt": 386, "focu": 362, "focus": 366, "folder": 0, "follow": [0, 40, 59, 65, 79, 80, 89, 98, 117, 121, 123, 129, 135, 208, 226, 246, 281, 292, 301, 305, 321, 332, 333, 336, 352, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 375, 376, 378, 388, 391, 392, 393, 394], "fontsiz": 359, "forc": 0, "forg": 375, "forget": [360, 366], "form": [0, 137, 301, 332, 333, 353, 354, 355, 361, 362, 365, 366, 368], "formal": [366, 369, 391, 392], "format": [2, 61, 73, 115, 117, 123, 125, 129, 343, 355, 358, 363, 365, 368, 369, 371, 387, 389, 393, 394, 395], "former": 362, "formual": [69, 83], "formul": 353, "formula": [0, 246, 292, 351, 369, 370, 378, 388, 394], "forth": 360, "fortran": [0, 31, 49, 50, 51, 91, 203, 211, 237, 355, 364, 367, 372], "fortran_to_replac": 222, "forward": [368, 369], "found": [0, 225, 267, 270, 272, 315, 323, 325, 353, 359, 363, 364, 366, 369, 371, 372, 387, 389, 395], "four": [333, 361, 363, 365, 366, 367, 378], "fourier": [0, 219, 353, 363], "fourth": 378, "frac": [353, 372], "fraction": [67, 81, 180, 188], "frame": [172, 257, 271, 304, 324, 363], "framework": [352, 354, 361, 369, 370, 372], "freedom": [226, 353], "frequeci": [247, 293], "frequenc": [241, 247, 248, 257, 269, 281, 283, 293, 294, 301, 304, 305, 318, 322, 332, 333, 336, 338, 354, 355, 358, 372, 378, 391, 392, 393, 394], "frequent": 358, "from": [0, 2, 8, 9, 10, 14, 16, 22, 34, 42, 44, 62, 63, 64, 87, 100, 113, 117, 121, 124, 125, 129, 131, 135, 141, 145, 149, 153, 167, 174, 176, 177, 179, 182, 183, 185, 188, 196, 199, 200, 206, 207, 208, 218, 219, 221, 222, 223, 224, 226, 228, 232, 234, 235, 241, 242, 243, 247, 248, 251, 257, 266, 267, 270, 271, 272, 281, 282, 283, 288, 289, 293, 294, 297, 301, 304, 305, 314, 315, 316, 318, 321, 323, 324, 325, 332, 333, 336, 337, 338, 343, 346, 351, 354, 355, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 373, 374, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395], "from_block": [2, 22], "from_idx": 2, "from_index": 22, "from_l_g_r": [0, 14], "fulfil": 353, "full": [213, 244, 246, 247, 249, 281, 290, 292, 293, 295, 301, 336, 347, 351, 352, 354, 358, 361, 362, 364, 365, 366, 367, 368, 370, 373, 374, 375, 378, 391, 392, 393, 394], "full_structur": 362, "fulli": [0, 246, 292, 352, 354, 367, 369, 375, 377, 393], "func": 225, "function": [0, 1, 2, 5, 6, 8, 9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 48, 52, 53, 54, 55, 94, 96, 98, 103, 104, 121, 157, 173, 206, 221, 225, 232, 239, 241, 243, 244, 245, 247, 248, 255, 257, 266, 269, 271, 280, 281, 282, 283, 284, 289, 290, 291, 293, 294, 301, 302, 304, 305, 314, 321, 322, 324, 332, 333, 335, 336, 337, 338, 339, 343, 348, 350, 352, 354, 355, 358, 359, 360, 363, 366, 367, 368, 369, 370, 371, 372, 375, 377, 378, 380, 381, 387, 389, 391, 392, 393, 394, 395], "fund": 352, "fundament": 371, "further": [363, 364, 366, 367, 370, 371], "furthermor": [366, 369, 372, 373], "futur": 355, "futurewarn": [383, 387, 389], "fx": 366, "fxyz": 366, "fxz2": 366, "fy": 366, "fyz2": 366, "fz": 366, "fz3": 366, "g": [6, 7, 8, 9, 16, 117, 137, 197, 206, 244, 245, 247, 248, 281, 282, 290, 291, 293, 294, 301, 336, 337, 352, 353, 354, 359, 361, 362, 363, 365, 366, 367, 370, 371, 372, 373, 375, 380, 383, 387, 388, 389, 393, 394, 395], "g0": [370, 378, 387, 389], "g0_iw": [360, 369, 370, 387, 389, 391, 392, 393, 394], "g0loc_it": [387, 389], "g_": [2, 247, 281, 293, 336, 353], "g_0": [393, 394], "g_1": 2, "g_2": 2, "g_block": 361, "g_i": 2, "g_inp": 321, "g_iw": [360, 369, 370, 387, 388, 389, 391, 392, 393, 394], "g_latt": [266, 314, 321, 386], "g_latt_k": 383, "g_latt_orb": 383, "g_latt_orb_it": [383, 386, 388], "g_latt_orb_w_o": [386, 388], "g_loc": [254, 257, 282, 300, 304, 337], "g_out": [8, 9, 282, 337], "g_proj": 321, "g_solver": 14, "g_struct": [8, 9], "g_sumk": 14, "g_tau": [387, 389, 393, 394], "gabriel": 206, "galitski": 388, "gamma": [0, 361, 363, 366, 369, 373, 378, 379, 382, 388, 389], "gamma_": 372, "gamma_do": 378, "gamma_w": 372, "gap": 353, "gener": [2, 5, 31, 46, 49, 50, 51, 54, 77, 86, 87, 91, 96, 110, 121, 129, 135, 185, 193, 202, 203, 204, 206, 211, 213, 237, 239, 240, 271, 281, 301, 324, 333, 336, 352, 353, 354, 358, 360, 361, 362, 363, 364, 368, 369, 372, 374, 378, 382, 385, 388, 390, 391, 393, 394, 395], "generate_and_output_as_text": [366, 385, 388, 395], "geometri": [52, 364], "georg": [352, 372], "gernot": 0, "get": [8, 9, 133, 186, 223, 254, 280, 300, 335, 353, 354, 355, 358, 361, 362, 363, 366, 370, 375, 378, 379, 387, 389, 391, 392], "get_a_out": 386, "get_block_matrix_map": 137, "getcwd": [369, 380], "gf": [0, 5, 8, 9, 12, 24, 217, 247, 248, 254, 255, 257, 266, 271, 280, 281, 284, 293, 294, 300, 302, 304, 314, 321, 324, 335, 336, 339, 348, 360, 361, 362, 379, 380, 383, 386, 387, 389, 393, 394], "gf2": 362, "gf3": 362, "gf4": 362, "gf_csc": 383, "gf_downfold": [255, 302], "gf_function": 12, "gf_inp": [255, 284, 302, 339], "gf_realomega": [378, 379], "gf_rotat": [271, 324], "gf_solver": 362, "gf_struct": [4, 16, 387, 389, 391, 392, 393, 394], "gf_struct_old": 0, "gf_struct_solv": [0, 2, 3, 6, 7, 12, 13, 22, 246, 257, 280, 282, 292, 304, 335, 337, 361, 387, 389, 394], "gf_struct_solver_list": [387, 389, 391, 392, 393], "gf_struct_sumk": [2, 3, 6, 7, 12, 13, 242, 256, 257, 269, 274, 282, 283, 288, 303, 304, 322, 327, 337, 338, 387, 389], "gf_sumk": 362, "gf_to_downfold": [255, 302], "gf_to_rot": [271, 324, 348], "gf_to_symm": [280, 335], "gf_to_upfold": [284, 339], "gf_upfold": [284, 339], "gfimfreq": [12, 244, 245, 290, 291], "gfimtim": [244, 245, 290, 291], "gfrefreq": [244, 290], "gfretim": [244, 290], "gfreturn": 348, "gimp_it": [387, 389], "gist": 376, "git": 375, "git_hash": [387, 389], "github": [0, 354, 375, 376], "give": [2, 16, 125, 197, 248, 294, 301, 333, 346, 352, 361, 364, 365, 366, 367, 369, 373, 376, 378, 391, 392, 393], "given": [0, 2, 6, 7, 8, 9, 89, 95, 104, 107, 108, 118, 121, 139, 145, 148, 153, 156, 188, 225, 241, 247, 248, 255, 266, 269, 274, 281, 282, 284, 293, 294, 301, 302, 305, 314, 322, 327, 332, 333, 336, 337, 339, 342, 343, 345, 348, 361, 362, 363, 365, 366, 367, 369, 370, 372, 373, 378, 391, 392, 393, 394, 395], "global": [218, 271, 281, 324, 336, 355, 363, 366, 373], "gloc": [0, 380, 387, 389, 393, 394, 395], "gloc_it": [387, 389], "gnu": [352, 375], "go": [353, 354, 366, 375, 388, 393, 394], "good": [360, 371, 391, 392, 393, 394], "gr_option": 104, "gr_par": [131, 132], "gr_requir": 104, "gradient": 0, "grai": 395, "grain": 369, "gram": 133, "grana": 372, "great": [353, 354], "greater": [363, 388], "green": [0, 2, 5, 6, 8, 9, 14, 17, 18, 19, 20, 22, 23, 24, 241, 243, 244, 245, 255, 257, 266, 269, 271, 282, 283, 284, 289, 290, 291, 301, 302, 304, 305, 314, 321, 322, 324, 332, 333, 337, 338, 339, 343, 348, 353, 355, 358, 360, 361, 363, 369, 370, 371, 372, 377, 378, 380, 387, 389, 391, 392, 393, 394, 395], "grep": [359, 378], "grid": [180, 213, 355, 359, 363, 364, 373, 381, 388], "grid3d": [40, 47, 78], "gross": 372, "ground": [353, 364, 369, 378, 394], "groundstat": [364, 372], "group": [2, 88, 104, 106, 111, 117, 121, 123, 125, 129, 130, 131, 133, 134, 135, 137, 200, 352, 358, 388, 390, 391, 392, 393, 394, 395], "grp": 2, "gt": 395, "gtau_it": [387, 389], "guarante": 0, "guess": [393, 394], "guid": [0, 353, 354, 355, 361, 368, 371, 372, 393, 394, 395], "guidelin": 376, "h": [0, 86, 87, 88, 89, 134, 206, 218, 219, 220, 225, 255, 256, 284, 302, 303, 339, 358, 360, 363, 366, 368, 372, 374, 378, 387, 389], "h5": [0, 197, 200, 206, 316, 361, 364, 366, 367, 370, 372, 378, 379, 380, 383, 386, 387, 388, 389, 391, 392, 393, 394, 395], "h5repack": [32, 58, 92, 205, 212, 238], "h_": [256, 303, 353, 355], "h_field": [240, 241, 286, 287], "h_i": 363, "h_ij": 134, "h_int": [360, 370, 387, 389, 391, 392, 393, 394], "h_int_dens": [387, 389, 393, 394], "h_int_kanamori": [393, 394], "h_int_slat": [391, 392, 393, 394], "h_solver": 360, "h_sumk": [360, 391, 392], "ha": [0, 6, 7, 16, 40, 68, 82, 125, 206, 269, 322, 332, 333, 343, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 374, 375, 378, 380, 391, 393, 394, 395], "hack": 359, "had": 0, "half": 206, "ham": 320, "hamdn": 320, "hamilonian": [221, 225], "hamiltonian": [0, 125, 208, 215, 216, 217, 219, 221, 226, 241, 243, 246, 249, 256, 266, 289, 292, 295, 303, 314, 320, 347, 353, 355, 360, 362, 363, 365, 366, 369, 371, 373, 374, 377, 383, 387, 388, 389, 393, 394, 395], "hamiltonian_stor": [387, 389], "hamitlonian": 366, "hampel": [0, 352], "hamup": 320, "hand": [59, 79, 352, 353, 354, 355, 364, 393], "handl": [137, 206, 371], "happen": [353, 362, 363, 369], "hardli": 354, "harmon": [44, 45, 65, 68, 80, 82, 364, 366, 367, 373, 378, 391, 392, 393], "harri": 0, "harrison": 0, "hartre": [364, 369, 391, 392, 394], "hat": 378, "haul": 372, "have": [0, 12, 13, 22, 23, 24, 133, 135, 222, 244, 290, 301, 319, 332, 333, 346, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 380, 388, 391, 392, 393, 394], "hbar": 372, "hdf": [2, 267, 270, 272, 315, 323, 325, 365, 370, 372, 387, 389], "hdf5": [0, 30, 32, 34, 35, 39, 40, 41, 42, 43, 58, 87, 88, 89, 90, 92, 196, 197, 201, 205, 206, 207, 208, 209, 210, 212, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 267, 270, 272, 301, 305, 315, 318, 319, 323, 325, 332, 333, 342, 346, 355, 358, 361, 363, 364, 367, 368, 369, 370, 372, 377, 378, 391, 392, 393, 394], "hdf5_datafil": 346, "hdf_datafil": [345, 346], "hdf_file": [240, 241, 286, 287, 341, 342, 360, 361, 366, 370, 372, 378, 379, 380, 383, 387, 389, 391, 392, 393, 394, 395], "hdf_filenam": [34, 35, 87, 88, 196, 197, 207, 208, 228, 229, 367], "hdfarchiv": [361, 370, 372, 380, 383, 386, 387, 389, 393, 394], "hdffile": 198, "header": [123, 125, 200, 204, 365, 366, 373], "held": [246, 292, 351, 370, 379, 380, 387, 389, 393, 394], "help": [73, 206, 352, 369, 388, 393, 394], "helper": [0, 1, 27, 239, 350], "henc": [319, 375, 378], "here": [0, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 378, 388, 391, 392, 393, 394, 395], "hermann": 0, "hermitian": 216, "hi": 393, "high": [359, 363, 366, 369, 378, 388, 392], "higher": [245, 291, 362, 393, 394], "highest": [139, 366, 367], "highli": 375, "highlight": 395, "hiroshi": 0, "hk": [125, 365, 366, 373, 385, 388, 389, 390], "hkconvert": [355, 365, 373], "hkinputfil": 365, "hline": 359, "hloc": [243, 244, 289, 290], "hloc_diag": [0, 207, 208, 363], "hohenberg": 353, "hold": 361, "holder": [367, 369], "home": 369, "homepag": 374, "hop": [215, 217, 254, 300, 363, 373], "hopefulli": 360, "hour": 354, "how": [353, 355, 358, 360, 361, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 391, 392, 393, 394], "howev": [0, 24, 353, 354, 355, 359, 360, 362, 363, 364, 366, 369, 370, 371, 372, 373, 378, 392], "http": [0, 225, 375, 376], "hub": 378, "hubbard": [254, 256, 300, 303, 366, 369, 370, 377, 380], "hubbard_i": [378, 379, 380], "hubbard_solv": [378, 379, 380], "huge": 0, "hugo": 0, "human": 393, "hund": [370, 378], "hy": [366, 395], "hybrid": [354, 370, 378], "hybridis": [360, 362, 371, 392], "hydrogen": 395, "hyperbol": [248, 294], "i": [0, 2, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 44, 59, 71, 79, 88, 93, 96, 100, 106, 107, 108, 115, 119, 121, 125, 129, 133, 135, 137, 138, 146, 154, 169, 180, 186, 187, 199, 200, 202, 206, 208, 216, 219, 220, 222, 226, 232, 234, 241, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 256, 257, 266, 267, 270, 271, 272, 280, 281, 282, 284, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 314, 315, 318, 319, 323, 324, 325, 332, 333, 335, 336, 337, 339, 342, 343, 345, 347, 349, 352, 353, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 387, 388, 389, 391, 392, 393, 394, 395], "i1_end": 135, "i1_ion": 135, "i1_shel": 135, "i1_start": 135, "i2_end": 135, "i2_ion": 135, "i2_shel": 135, "i2_start": 135, "i_corr_shel": [30, 43, 90, 201, 210, 236], "i_inequiv_shel": [30, 43, 90, 201, 210, 236], "i_sh": [387, 389, 395], "ib1": 129, "ib2": 129, "ib_max": [129, 148, 156], "ib_min": [129, 148, 156], "ib_win": [139, 148, 156], "iblock": [387, 389, 395], "ibz": [180, 364], "ibz_filenam": 182, "ibzkpt": [173, 182, 366], "icharg": [366, 369, 388], "icrsh": 14, "icsh": 16, "id": 0, "idea": [362, 366], "ideal": 366, "ident": [362, 363, 366, 369, 378, 394], "identi": 366, "identifi": [0, 393], "idx": 2, "ie": [254, 300], "ignor": [0, 8, 9, 246, 292, 363, 366, 383, 387, 389], "igor": 354, "ii": 380, "ik": [255, 266, 284, 302, 314, 321, 332, 333, 339, 361, 383], "ik1": 129, "ik2": 129, "ikarrai": 383, "ill": 354, "illustr": 362, "imag": 375, "imaginari": [0, 89, 125, 217, 241, 247, 248, 257, 266, 269, 281, 283, 293, 294, 301, 304, 314, 322, 336, 338, 361, 365, 371, 373, 378, 392], "imix": [369, 388], "immedi": 208, "implement": [0, 14, 117, 206, 245, 246, 247, 291, 292, 293, 351, 352, 354, 361, 363, 364, 366, 369, 370, 373, 388], "impli": [366, 371], "implicitli": 363, "import": [354, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 378, 379, 380, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395], "improp": [59, 79, 352], "improv": [0, 206, 360, 369, 370], "impur": [0, 242, 269, 283, 288, 322, 338, 351, 353, 354, 355, 358, 360, 362, 363, 366, 369, 371, 372, 373, 375, 378, 380, 387, 389, 391, 392, 393, 394, 395], "impurity_solv": [378, 379, 380], "in2": [359, 372], "inbetween": 369, "incar": [366, 369, 388, 395], "includ": [0, 23, 24, 44, 88, 117, 255, 266, 281, 284, 302, 314, 333, 336, 339, 352, 353, 360, 361, 362, 364, 366, 367, 369, 371, 372, 373, 375, 376, 378, 380, 388, 391, 392, 393, 394, 395], "include_shel": [243, 244, 245, 289, 290, 291], "incompat": 0, "incorrect": [0, 352, 363], "increas": [378, 388, 393, 394], "ind": [45, 55, 60], "inde": [352, 395], "independ": [246, 292, 353, 364, 365, 366, 369, 393, 394], "index": [0, 2, 6, 7, 8, 9, 10, 12, 13, 14, 16, 23, 24, 30, 43, 90, 135, 201, 210, 236, 246, 255, 266, 271, 280, 284, 292, 301, 302, 314, 321, 324, 332, 333, 335, 339, 353, 361, 364, 365, 366, 367, 369, 373, 378], "indic": [0, 23, 24, 117, 129, 135, 139, 186, 223, 225, 247, 249, 293, 295, 301, 305, 332, 355, 361, 363, 364, 366, 367, 372, 373, 388, 392, 394], "individu": [2, 12, 393, 394], "indmftpr": [0, 367, 371, 375, 378, 393], "ineq_shel": 0, "inequiv_to_corr": [14, 30, 43, 90, 201, 210, 236, 373], "inequival": [2, 12, 13, 14, 16, 21, 30, 43, 90, 201, 210, 236, 243, 244, 245, 246, 255, 256, 257, 268, 269, 271, 278, 280, 282, 283, 284, 289, 290, 291, 292, 302, 303, 304, 317, 322, 324, 331, 335, 337, 338, 339, 363, 365, 367, 373, 378, 395], "infam": [387, 389], "inflat": 392, "influenc": 372, "info": 125, "inform": [0, 2, 42, 56, 62, 63, 64, 121, 123, 128, 232, 234, 235, 355, 362, 363, 364, 366, 367, 371, 372, 373, 375, 376, 378, 383, 387, 388, 389, 395], "ingredi": 355, "init": [0, 197, 378, 379, 380, 387, 389, 391, 393, 394], "init0": 364, "init_dmftpr": 367, "init_so": 392, "initi": [0, 138, 169, 246, 265, 292, 313, 346, 358, 366, 367, 377, 378, 380, 388], "initialis": [35, 88, 208, 229, 241, 287, 342, 360, 362, 371, 391, 392, 393], "initio": [239, 240, 374], "inop": 372, "inp": 363, "inp_fil": 222, "input": [0, 8, 9, 34, 40, 44, 87, 103, 104, 112, 117, 121, 124, 173, 196, 198, 199, 200, 207, 222, 223, 228, 256, 257, 269, 280, 281, 301, 303, 304, 319, 321, 322, 332, 335, 336, 343, 349, 351, 352, 355, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 388, 391, 392, 393, 394, 395], "input_filenam": [104, 105], "inputfil": 365, "insert": [269, 322, 375], "insid": [363, 366, 369], "inspect": [354, 393], "instabilti": 217, "instal": [0, 355, 376], "instanc": [346, 353, 360, 362, 363, 367, 369, 370, 391], "instead": [0, 281, 336, 351, 360, 364, 378, 388, 393, 395], "instruct": [0, 375], "insul": [353, 369, 388], "int": [0, 6, 7, 8, 9, 10, 12, 13, 100, 107, 115, 116, 180, 188, 199, 219, 221, 223, 246, 247, 248, 249, 280, 292, 293, 294, 295, 335, 351, 359, 366, 372, 373], "integ": [0, 24, 30, 40, 43, 90, 115, 201, 210, 213, 225, 234, 236, 241, 243, 244, 245, 255, 266, 271, 284, 289, 290, 291, 302, 305, 314, 321, 324, 332, 339, 361, 364, 366, 367, 373], "integr": [243, 247, 248, 257, 281, 289, 293, 294, 304, 336, 361, 366, 373, 378], "intel": 375, "intend": 363, "interac": [281, 336], "interact": [220, 244, 245, 246, 247, 281, 290, 291, 292, 293, 336, 353, 355, 360, 363, 365, 367, 369, 370, 373, 377, 378, 380, 388, 393, 394], "interdepend": 0, "interest": [355, 361, 362, 386], "interfac": [0, 185, 246, 292, 352, 353, 354, 358, 361, 369, 371, 372, 374, 375, 378, 393, 394, 395], "intern": [4, 99, 104, 305, 316, 321, 363], "interpret": [109, 146, 154, 367], "introduc": [0, 22, 146, 154, 353, 360, 362, 366, 369, 378, 393, 394], "introduct": [352, 354, 355, 358], "invari": [393, 394], "invers": [241, 254, 300, 360, 362, 369, 370, 373, 387, 389, 391, 392, 393, 394], "invert": 369, "invest": 354, "invok": [98, 353, 367, 369, 388], "involv": [367, 369, 371, 373], "io": [366, 386], "iom": [333, 361], "iomega_": [247, 293], "iomega_n": 362, "ion": [0, 109, 117, 121, 135, 146, 154, 188, 366, 388, 390, 395], "ion1": 135, "ion2": 135, "ipynb": 0, "ipython": 354, "ir": [255, 284, 302, 339, 383], "irep": [45, 363, 365, 367, 373, 391, 392, 393], "irreduc": [45, 60, 361, 364, 365, 371, 372, 373, 378], "irrep": [125, 365, 367, 373], "irrespect": 369, "is_group": [393, 394], "is_master_nod": [369, 370, 379, 380, 383, 387, 389, 393, 394], "isbn": 372, "ish": [0, 2, 4, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 20, 23, 24, 45, 55, 255, 271, 280, 284, 302, 321, 324, 335, 339, 369, 387, 389, 393, 394], "ish_from": [8, 9], "ish_to": [8, 9], "ishin": 45, "isit": 395, "ismear": [366, 381, 384, 388, 395], "isn": 0, "isp": 129, "isplit": [378, 391, 392, 393], "issu": [0, 120, 126, 146, 154, 358, 363, 366], "istart": 369, "isym": [366, 381, 388, 395], "item": [0, 361], "iter": [0, 247, 293, 353, 364, 366, 369, 370, 378, 380, 383, 386, 387, 388, 389, 391, 392, 393, 394, 395], "iteration_count": [383, 386, 387, 389], "iteration_numb": [370, 378, 380, 391, 392, 393, 394], "iteration_offset": [360, 383, 386, 387, 389], "iteritem": [361, 394], "itertool": [383, 387, 389], "itet": 180, "itiner": 353, "itn": 380, "its": [0, 8, 9, 138, 208, 343, 352, 362, 364, 369, 378, 388, 391, 393], "itself": [16, 23, 121, 354, 365, 367, 373, 391, 392, 393, 394], "itt": 95, "iu0": 366, "iu6": 366, "iunclud": 392, "iw": [266, 314], "iw_or_w": 0, "ix_end": 135, "ix_ion": 135, "ix_last": 135, "ix_shel": 135, "ix_start": 135, "j": [0, 246, 292, 351, 352, 360, 363, 366, 369, 370, 371, 372, 378, 387, 388, 389, 391, 392, 393, 394], "j_hund": [246, 292, 360, 370, 378, 379, 380, 387, 388, 389, 391, 392, 393, 394], "jame": [0, 352, 364, 394], "jammi": 375, "jan": 206, "jenkin": 0, "jj": 380, "join": 359, "jonathan": 0, "json": [123, 204], "just": [0, 2, 6, 7, 8, 9, 16, 23, 24, 88, 206, 244, 249, 290, 295, 347, 353, 355, 362, 363, 366, 367, 369, 391, 392, 394], "justifi": [5, 362], "k": [0, 86, 87, 88, 89, 100, 121, 123, 125, 127, 131, 134, 179, 180, 182, 197, 199, 206, 213, 219, 221, 223, 224, 241, 247, 255, 256, 266, 281, 284, 293, 302, 303, 305, 314, 318, 321, 332, 333, 336, 339, 340, 341, 353, 354, 355, 358, 359, 363, 364, 366, 367, 368, 369, 370, 372, 374, 378, 391, 393, 395], "k_b": 372, "k_dep_project": 373, "k_mesh": 224, "k_mesh_from_umat": 221, "k_x": 363, "k_y": 363, "k_z": 363, "kanamori": [246, 292, 393, 394], "kappa": 372, "karp": 0, "keep": [0, 247, 293, 361, 363, 367, 369, 372, 375, 388, 391, 393, 394], "kei": [2, 373, 387, 389, 395], "kept": [0, 365], "keyword": [12, 104, 363], "kgen": [372, 378], "kgrid": [40, 364], "kind": [352, 373], "kinet": [372, 378], "klist": 359, "kmesh": [100, 145, 149, 150, 153, 222], "kmesh_mod": 213, "kmesh_siz": 213, "kname": 359, "know": [23, 24, 358, 360, 362, 366, 391], "known": 353, "kohn": [177, 206, 223, 224, 320, 353, 363, 364, 366, 367, 369, 394], "kotliar": 372, "kpo": 359, "kpoint": [53, 364, 366, 388, 395], "kpoint_f": 364, "kpt": [0, 180, 213, 219, 373, 381, 388], "kpt_basi": [188, 223, 373], "kpt_weight": [213, 373], "kpts_basi": 0, "kpts_to_writ": [247, 293], "kraberg": [0, 352], "krivenko": 354, "kron": 392, "ks_eigenv": 221, "ks_eigenvals_spin": 224, "kune": 388, "kvasnicka": 372, "kwarg": [8, 9, 12], "kweight": 129, "kwght": 0, "kx": [129, 333, 361], "ky": [129, 333, 361], "kz": [129, 333, 361], "l": [0, 44, 68, 69, 82, 83, 125, 133, 352, 363, 364, 365, 366, 367, 372, 373, 378, 379, 380, 387, 389, 391, 392, 393, 394, 395], "l_": [367, 378], "label": [255, 271, 284, 302, 324, 339, 366, 395], "labollita": 0, "lai": 0, "laid": 364, "lambda_i": [220, 363], "lambda_matrix": 220, "lambda_x": [220, 363], "lambda_z": [220, 363], "langl": [363, 366, 378], "lapw1": [359, 367, 372], "lapw2": [355, 358, 367, 369, 371, 372, 378, 391, 392, 393], "lapwso": 371, "larg": [0, 186, 353, 366], "larger": 361, "largest": 133, "last": [135, 167, 363, 364, 365, 367, 369, 370, 373, 375, 378, 388, 391, 392, 393, 394], "later": [364, 366, 369, 370, 388, 395], "latest": [0, 375], "latic": 364, "latt": 353, "latter": [121, 365, 369, 378], "lattic": [40, 56, 57, 123, 188, 217, 232, 241, 254, 255, 257, 266, 284, 300, 302, 304, 314, 321, 339, 353, 362, 363, 364, 366, 372, 373, 377, 378, 393], "lattice_gf": [301, 305, 332, 333, 361, 383], "launch": [355, 378], "launcher": 355, "lavo": 363, "lda": [378, 391, 393], "lead": [133, 353, 354, 360, 362, 363, 370, 371], "learn": [374, 378], "least": [12, 353, 354, 363, 366, 371, 375, 388], "leav": 22, "left": [23, 24, 353, 361, 362, 366, 372], "legaci": [0, 246, 292], "len": [359, 380, 387, 389, 395], "length": [135, 343, 364, 373, 394], "length_cycl": [387, 389, 391, 392, 393, 394], "less": [0, 371, 393, 394], "let": [353, 362, 366, 370, 388], "level": [38, 100, 123, 256, 303, 333, 353, 355, 361, 366, 371, 378, 379, 380, 392], "li": 362, "librari": [0, 44, 248, 294, 352, 361, 364, 375, 393, 394], "licens": 0, "lichtenstein": [379, 380], "lift": 394, "light": [355, 365, 368, 373], "lighter": 353, "like": [242, 246, 256, 274, 280, 288, 292, 303, 327, 335, 355, 362, 363, 364, 366, 367, 369, 371, 375, 391, 392, 393, 394, 395], "limit": [206, 246, 292, 360, 367, 368, 370, 378, 393], "line": [0, 62, 63, 64, 119, 125, 167, 187, 193, 353, 355, 359, 363, 364, 365, 366, 367, 369, 372, 378, 386, 388, 391, 392, 393, 394, 395], "linear": [366, 370, 388], "linearli": 370, "linearomegamesh": 386, "linefitanalyz": 386, "link": [375, 395], "linspac": 372, "linux": 375, "list": [0, 2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 43, 90, 117, 121, 123, 135, 149, 188, 200, 201, 208, 210, 213, 218, 226, 234, 236, 243, 244, 245, 249, 254, 257, 267, 269, 270, 272, 274, 282, 283, 289, 290, 291, 295, 300, 304, 305, 315, 319, 322, 323, 325, 327, 332, 333, 337, 338, 343, 351, 361, 363, 364, 366, 369, 372, 373, 383, 387, 389, 395], "list_to_return": [267, 315], "literatur": [353, 388], "littl": 370, "lm": [364, 394], "lmax": [367, 378, 391, 392, 393], "lmaxmix": [381, 388, 395], "lmirep": 364, "load": [316, 361, 364, 370, 372, 377, 378, 379, 380, 395], "loadtxt": 359, "loc": [256, 303, 353], "local": [0, 96, 121, 197, 208, 215, 218, 220, 241, 243, 244, 245, 246, 249, 256, 257, 271, 281, 289, 290, 291, 292, 295, 303, 304, 321, 324, 332, 336, 347, 353, 355, 360, 361, 362, 363, 366, 370, 371, 373, 375, 377, 378, 391, 392, 393, 394, 395], "localis": [246, 292, 362, 370, 391, 392, 393], "locat": [0, 365], "lock": [369, 388], "locproj": [0, 149, 173, 186, 363, 366, 381, 388, 395], "locproj_filenam": 186, "logalphamesh": 386, "logic": [0, 118, 247, 293], "long": 95, "longer": 0, "look": [0, 354, 362, 364, 365, 366, 367, 375, 388, 391, 392, 393, 394, 395], "loon": 0, "loop": [0, 248, 294, 358, 367, 369, 373, 374, 377, 378, 380, 388, 393, 394], "lorbit": [366, 381, 388, 395], "lorentzian": [301, 305, 332, 333, 361], "lot": [373, 392], "low": [0, 366, 369, 372, 392, 393, 394], "lower": [364, 367, 378, 393], "lowest": [139, 366, 367], "lprj_ldapu": 366, "lprj_write": 366, "lshell": [366, 388, 390, 395], "lstart": [371, 392], "lt": 375, "luitz": 372, "lunio3": 0, "ly": 139, "m": [98, 256, 301, 303, 332, 333, 352, 353, 355, 359, 361, 366, 372, 395], "m_j": 392, "machin": [369, 375], "machineri": 388, "made": [0, 70, 84, 254, 281, 300, 336, 362, 363, 391], "madsen": 372, "magnet": [0, 149, 241, 247, 293, 363, 364, 366, 371, 378, 391, 392, 393, 394, 395], "magnitud": [8, 9], "mai": [353, 355, 361, 364, 366, 373, 378, 386], "main": [121, 353, 355, 362, 364, 366, 367, 369, 371, 375, 391, 392, 393, 394], "maintain": 363, "major": [0, 355, 364, 375], "make": [0, 206, 353, 354, 359, 360, 363, 364, 369, 375, 376, 388, 392, 393, 394, 395], "make_copi": [361, 383], "malt": 0, "manag": 369, "mani": [0, 6, 7, 133, 353, 354, 355, 367, 369, 371, 388], "manifold": [362, 363, 366], "manipul": [130, 140, 241, 358, 360, 371, 391, 392], "manner": 375, "manual": [0, 69, 83, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 378, 393, 394, 395], "manuel": 0, "map": [0, 2, 16, 21, 22, 23, 24, 30, 43, 90, 104, 135, 137, 201, 210, 236, 362, 363, 373], "map_gf_struct": 4, "map_gf_struct_solv": 362, "map_operator_structur": [387, 389, 393, 394], "mark": [221, 364, 366, 373, 395], "marku": 0, "martin": 352, "marvlj": 352, "mass": 353, "master": [366, 368, 370, 383, 387, 389], "masternod": 206, "mat": [60, 66, 224, 363, 391, 392], "match": [0, 251, 297, 363], "materi": [206, 353, 354, 355, 364, 365, 372, 374, 391, 393, 394], "math": [247, 293, 369], "mathbf": [353, 355, 363, 365, 367, 378], "matplotlib": [359, 395], "matric": [0, 2, 7, 44, 60, 109, 135, 143, 146, 147, 151, 154, 155, 206, 218, 241, 243, 254, 255, 284, 289, 300, 301, 302, 318, 319, 321, 339, 341, 343, 360, 363, 364, 365, 372, 373, 375, 391, 392, 393, 394, 395], "matrix": [2, 7, 9, 13, 14, 15, 36, 42, 44, 60, 68, 69, 70, 75, 82, 83, 84, 102, 109, 119, 125, 135, 137, 138, 143, 146, 147, 151, 154, 155, 218, 221, 224, 225, 226, 235, 241, 243, 244, 245, 246, 247, 249, 251, 254, 271, 289, 290, 291, 292, 293, 295, 297, 300, 301, 318, 319, 324, 347, 348, 351, 353, 355, 361, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 378, 380, 387, 388, 389, 391, 392, 393, 394, 395], "matsubara": [241, 247, 266, 293, 314, 318, 361, 372, 378, 393, 394], "matsubra": 354, "matter": [118, 362, 366, 371], "max": [0, 332, 333, 359, 361, 364, 367, 373, 378, 394], "max_loop": [0, 248, 294], "max_tim": [387, 389], "maxent": [354, 377], "maxim": [248, 294, 353, 363, 366, 373, 395], "maximilian": 206, "maximum": [135, 245, 291, 354, 359, 367, 378, 394], "mayb": 367, "mc": [391, 392], "me": 369, "mean": [2, 40, 246, 292, 347, 351, 354, 360, 363, 364, 365, 367, 370, 371, 373, 374, 392], "meaning": 354, "measur": [0, 347, 353, 369, 392, 393, 394], "mechan": 353, "mediat": 373, "member": [0, 343, 347], "mention": [355, 369, 374], "merg": 22, "merkel": [0, 206], "mesh": [0, 12, 100, 213, 224, 240, 241, 247, 248, 257, 266, 281, 286, 287, 293, 294, 301, 304, 305, 314, 332, 333, 336, 361, 363, 364, 366, 372, 373, 378, 382, 383, 387, 389], "mesh_siz": 359, "meshgrid": 359, "meshimfreq": [241, 266, 314, 383, 387, 389], "meshrefreq": [0, 241, 247, 248, 266, 281, 293, 294, 314, 336], "meshtyp": [301, 305, 332, 333, 361], "messag": [120, 126, 257, 304, 363], "metal": [353, 372], "method": [0, 2, 28, 34, 67, 73, 81, 87, 94, 95, 100, 104, 131, 141, 149, 158, 174, 177, 180, 183, 188, 191, 196, 207, 213, 215, 218, 219, 224, 225, 228, 240, 248, 254, 286, 294, 300, 341, 345, 351, 353, 354, 360, 361, 362, 363, 366, 367, 369, 370, 372, 391, 392, 393, 394], "methodolog": 366, "methodologi": [65, 80], "mg": [391, 392], "mgoso": 371, "migdal": [369, 378, 388, 394], "might": [206, 360, 362, 363, 366, 369], "miller": 225, "min": [0, 332, 333, 359, 361], "mind": [361, 366, 367, 372, 375, 393], "minim": [360, 395], "minimis": 392, "minimum": [359, 393], "minor": [0, 364, 375], "minut": 378, "misc_data": [240, 241, 286, 287, 318, 361], "misc_subgrp": [34, 35, 41, 196, 197, 199, 206, 207, 208, 209, 228, 229, 231], "miscellan": [35, 197, 208, 229, 241], "mishchenko": 354, "mix": [224, 358, 363, 369, 378, 380, 388, 393, 394], "miyak": [352, 372], "mkdir": 375, "mkl": 375, "mlwf": 363, "mm": 362, "mn": [353, 355], "mode": [0, 213, 222, 355, 366, 367, 368, 369, 371, 373, 375, 378, 388, 391, 393], "model": [353, 366, 370, 371], "modif": [369, 370], "modifi": [0, 214, 366, 369, 370, 378], "modul": [0, 26, 27, 71, 93, 103, 121, 340, 344, 355, 361, 364, 367, 368, 369, 375, 377, 391, 392, 395], "modular": 368, "moment": [45, 355, 365, 366, 368, 371, 378, 392], "momentum": [353, 372], "mommat2": 359, "mont": 362, "more": [0, 2, 206, 248, 294, 353, 354, 355, 361, 363, 364, 365, 366, 367, 369, 370, 371, 373, 375, 378, 391, 392, 393, 394, 395], "moreov": [353, 364, 366, 369, 395], "morev": 366, "mosca": 0, "most": [353, 354, 355, 361, 362, 366, 369, 370, 388], "motiv": 352, "mott": 353, "move": [0, 125, 351, 353, 365, 375], "mpi": [0, 206, 355, 358, 363, 364, 369, 370, 375, 379, 380, 383, 387, 389, 391, 392, 393, 394, 395], "mpirun": [355, 369, 375], "mpl_interfac": 386, "mpprun": 375, "mr": 363, "mravlj": 352, "mry": 378, "mu": [0, 248, 257, 266, 275, 281, 294, 301, 304, 305, 314, 318, 319, 328, 332, 333, 336, 353, 361, 366, 378, 380, 389], "mu_": 388, "much": [353, 388, 391, 392], "mult": [367, 378, 391, 392, 393], "multi": [355, 372, 374, 393, 394], "multilin": 366, "multipl": [0, 146, 154, 364, 366, 367, 369, 378, 393, 394], "multiplet": 378, "multipli": 369, "must": [113, 360, 363, 365, 366, 369, 373, 375], "mutual": 354, "myscript": 355, "n": [46, 77, 123, 129, 133, 183, 247, 281, 293, 301, 332, 333, 336, 353, 355, 361, 364, 366, 369, 372, 378, 379, 380, 386, 387, 388, 389, 394, 395], "n_": [247, 281, 293, 336, 363, 366, 372, 388], "n_band": [215, 221, 223], "n_corr_shel": [66, 215, 218, 220, 373], "n_cycl": [387, 389, 391, 392, 393, 394], "n_el": 125, "n_inequiv_corr_shel": 373, "n_inequiv_shel": [30, 43, 66, 90, 201, 210, 236, 373], "n_it": 388, "n_iter": [171, 360, 387, 388, 389], "n_iter_dft": 171, "n_iters_dft": 388, "n_iw": [240, 241, 286, 287, 383, 387, 389], "n_k": [37, 38, 47, 61, 66, 76, 78, 199, 213, 215, 219, 221, 223, 332, 333, 359, 361, 373, 383], "n_list": 361, "n_loop": [370, 391, 392], "n_msb": 378, "n_o": 388, "n_om": [301, 332, 333, 361, 372, 378, 379], "n_orb": [383, 387, 389, 393, 394], "n_orbit": [61, 66, 281, 336, 351, 373], "n_parproj": 316, "n_point": [115, 362, 386], "n_proc": 388, "n_r": [219, 221], "n_r_spin": 225, "n_rep": [45, 373], "n_sh": 125, "n_shell": [60, 65, 66, 80, 301, 332, 333, 361, 373], "n_spin": 351, "n_spin_bloc": [38, 61], "n_spin_block": [55, 215, 218, 219, 221, 223], "n_symm": [37, 47, 60, 66, 76, 78], "n_tot": 351, "n_wannier": [219, 221], "n_wannier_spin": [224, 225], "n_warmup_cycl": [387, 389, 391, 392, 393, 394], "na": [46, 77], "nabla": 353, "name": [0, 2, 14, 18, 20, 31, 35, 49, 50, 51, 88, 91, 104, 117, 193, 197, 199, 200, 203, 204, 208, 211, 229, 234, 237, 241, 243, 247, 255, 267, 270, 272, 284, 289, 293, 302, 315, 323, 325, 333, 339, 342, 346, 349, 359, 360, 361, 362, 363, 365, 366, 367, 369, 373, 388], "name_list": [361, 383], "namebas": 123, "nan": 115, "natmtot": [46, 77], "natom": [100, 364, 394], "natur": [354, 355], "nb": [129, 138, 183, 366], "nb_max": 139, "nb_min": 139, "nband": 100, "nbvalmax": 372, "nc_flag": [100, 123, 141, 142, 149, 150, 395], "ncdij": 366, "ncore": 395, "ncsf": 0, "nda": 0, "ndarrai": [213, 218, 219, 220, 221, 223, 224, 225, 226], "ndim": 129, "necess": 355, "necessari": [0, 30, 35, 42, 43, 88, 90, 121, 128, 129, 145, 153, 197, 201, 208, 210, 229, 235, 236, 241, 352, 354, 355, 360, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 378, 388, 391, 392, 393, 394], "necessarili": 353, "nedo": 395, "need": [0, 12, 14, 35, 88, 197, 206, 208, 214, 224, 229, 247, 293, 301, 332, 333, 353, 355, 359, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 378, 388, 391, 392, 393, 394], "neg": 392, "neglect": [371, 378], "neither": 363, "nelect": 129, "nelm": [369, 388], "nelmin": [369, 381, 388], "never": [0, 206], "nevil": 353, "new": [0, 4, 8, 9, 22, 23, 119, 244, 275, 282, 290, 328, 337, 345, 348, 349, 353, 360, 364, 366, 369, 370, 375, 378, 380, 387, 388, 389, 391, 392, 393, 394], "new_char": [31, 49, 50, 51, 91, 203, 211, 237], "new_gf_struct": [23, 24], "newer": 375, "newton": [0, 248, 294], "next": [0, 31, 49, 50, 51, 91, 125, 203, 211, 237, 353, 364, 365, 366, 367, 369, 370, 372, 378, 388, 391, 392, 393, 394, 395], "nf": 366, "ng": [123, 125, 129, 366], "ngrid": [40, 47, 78, 364], "ngridk": [364, 394], "ngroup": 395, "ni": [381, 384, 388, 390], "nickel": 367, "nil": 0, "nio": [0, 369, 381, 384, 388, 395], "nio_csc": 388, "nio_local_lattice_gf": 388, "nion": [129, 135, 183, 188], "nk": [123, 125, 183, 366, 395], "nktot": [100, 180], "nl": 361, "nlm": 135, "nlmmax": 183, "nm": 138, "nmoment": 378, "nnkp": [206, 363], "no_gamma_writ": 369, "node": [366, 368, 369, 370, 383, 387, 389], "nois": [361, 388, 393, 394], "nom": [371, 392], "non": [0, 5, 96, 100, 149, 185, 241, 244, 245, 247, 255, 271, 281, 284, 290, 291, 293, 302, 319, 324, 336, 339, 353, 361, 362, 363, 364, 365, 366, 369, 373, 378, 380, 391, 392, 393, 394], "noncollinear": 123, "none": [0, 2, 3, 6, 7, 8, 9, 16, 22, 23, 24, 34, 35, 40, 87, 88, 196, 197, 207, 208, 218, 221, 228, 229, 240, 241, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 265, 266, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 313, 314, 316, 318, 319, 321, 332, 333, 336, 337, 338, 339, 341, 342, 345, 346, 351, 361, 362, 363, 364, 366, 378, 383], "nonequiv": [378, 393], "nor": 363, "norb": 380, "nordstrom": 372, "norm": 133, "normal": [0, 96, 133, 185, 241, 255, 284, 302, 339, 355, 362, 364, 366, 367, 373, 386, 388, 390], "normion": [0, 135, 137, 366, 388, 390], "notat": [0, 351], "note": [2, 23, 24, 40, 137, 179, 246, 292, 332, 353, 355, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 391, 392, 393, 394, 395], "notebook": 354, "noth": [353, 367], "notic": 378, "notimplementederror": 222, "nours": 0, "now": [0, 206, 213, 353, 362, 363, 365, 366, 367, 369, 370, 371, 378, 380, 388, 391, 392, 393, 394, 395], "np": [0, 213, 218, 219, 220, 221, 223, 224, 225, 226, 355, 359, 361, 362, 383, 387, 389, 392], "npoint": 366, "npt": [378, 391, 392, 393], "nq": 188, "nscf": [363, 366], "nshell": 129, "nsort": [367, 378, 391, 392, 393], "nspeci": [364, 394], "nspin": 100, "nstsv": 38, "nsym": [46, 65, 77, 80], "ntet": 180, "ntype": 188, "nu": [256, 281, 303, 336, 353], "num_block_deg_orb": [387, 389, 395], "number": [0, 18, 20, 30, 31, 40, 43, 49, 50, 51, 90, 91, 100, 115, 121, 123, 125, 136, 138, 180, 188, 199, 201, 203, 210, 211, 213, 221, 223, 225, 236, 237, 241, 248, 268, 278, 281, 294, 301, 317, 331, 332, 333, 336, 343, 351, 353, 355, 361, 363, 364, 365, 366, 367, 369, 371, 372, 373, 375, 376, 378, 380, 388, 391, 392, 393, 394, 395], "numer": [133, 245, 291, 301, 332, 333, 361, 362, 371, 392, 393, 394], "numk": [378, 391, 393], "numpi": [0, 2, 9, 14, 15, 40, 131, 138, 139, 141, 149, 180, 183, 188, 243, 289, 301, 305, 318, 319, 332, 333, 359, 361, 362, 364, 372, 373, 383, 387, 389], "nunu": [247, 293], "nwf": [220, 226], "o": [0, 10, 71, 93, 352, 363, 364, 367, 369, 372, 380, 381, 384, 388, 390, 391, 392, 393, 394, 395], "obj": 343, "object": [0, 2, 12, 100, 104, 121, 124, 131, 202, 257, 266, 269, 272, 283, 301, 304, 314, 322, 325, 332, 333, 338, 343, 361, 362, 366, 369, 370, 372, 395], "observ": [360, 364], "obsolot": 0, "obtain": [219, 343, 363, 364, 366, 367, 372, 378, 393], "obvious": 366, "occ": 38, "occik": 318, "occsv": 364, "occup": [0, 143, 147, 151, 155, 223, 301, 361, 364, 373, 378, 380, 388], "occupi": [0, 301, 361], "occur": [206, 360, 366], "octahedra": 363, "odd": 353, "off": [0, 5, 22, 360, 362, 363, 366, 371, 372, 375, 378, 381, 388, 391, 392, 395], "off_diag": [391, 392], "offdiagon": 362, "offer": [354, 360, 361], "offiagon": 391, "offici": 364, "offset": [305, 332, 333, 361, 383], "often": [354, 360, 362, 370, 371, 392], "old": [0, 246, 292, 379, 380], "old_char": [31, 49, 50, 51, 91, 203, 211, 237], "oleg": 0, "olivi": [0, 352], "om_mesh": 372, "omega": [301, 305, 332, 333, 353, 354, 361, 364, 370, 372, 386, 393], "omega_": [281, 336], "omega_1": 372, "omega_2": 372, "omega_max": 386, "omega_min": 386, "omit": [366, 369], "ommax": [378, 379], "ommin": [378, 379], "omp_num_thread": 394, "onc": [360, 363, 364, 369, 371, 372, 378, 391, 392, 394, 395], "one": [2, 6, 7, 8, 9, 14, 15, 16, 22, 107, 108, 118, 137, 206, 246, 254, 257, 282, 283, 292, 300, 301, 304, 305, 318, 319, 332, 333, 337, 338, 353, 355, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 373, 374, 375, 378, 391, 392, 393, 394, 395], "ones": 222, "onli": [0, 45, 59, 68, 79, 82, 89, 106, 118, 176, 206, 213, 247, 248, 254, 255, 257, 271, 281, 284, 293, 294, 300, 301, 302, 304, 305, 321, 324, 332, 333, 336, 339, 355, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 388, 391, 392, 393, 394, 395], "only_upper_triangl": 89, "onsit": 363, "onto": [135, 363, 366, 371], "onward": 375, "oo": 386, "op_orb": 386, "open": [204, 353, 367, 369, 380, 387, 389, 394], "openmp": [364, 394], "oper": [0, 10, 93, 121, 123, 241, 340, 341, 353, 364, 367, 368, 372, 376, 378, 383, 387, 389, 391, 392, 393, 394], "oplot": 386, "optic": [0, 42, 235, 355, 358, 367], "optic_cond": 372, "optim": [0, 146, 154, 248, 294, 354, 366, 381, 388, 395], "option": [0, 8, 9, 12, 35, 40, 88, 89, 104, 113, 115, 117, 123, 137, 146, 154, 180, 182, 197, 208, 213, 229, 234, 241, 243, 244, 245, 246, 247, 248, 249, 254, 255, 257, 266, 267, 269, 271, 272, 281, 284, 289, 290, 291, 292, 293, 294, 295, 300, 301, 302, 304, 305, 314, 315, 316, 318, 319, 321, 322, 324, 325, 332, 333, 336, 339, 342, 346, 347, 354, 360, 361, 363, 365, 366, 367, 371, 372, 378, 388, 391, 392, 393, 394], "orb": [0, 246, 292, 360, 366, 370, 380, 386, 387, 388, 389, 391, 392, 393, 394], "orbit": [0, 23, 24, 60, 66, 96, 121, 125, 135, 138, 186, 197, 199, 200, 206, 208, 214, 220, 226, 234, 241, 301, 305, 319, 320, 321, 332, 333, 344, 351, 353, 355, 360, 361, 364, 365, 366, 367, 368, 373, 374, 375, 377, 380, 387, 389, 394, 395], "order": [0, 32, 58, 92, 96, 121, 137, 139, 205, 206, 212, 220, 226, 238, 281, 301, 332, 333, 336, 352, 353, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 376, 378, 388, 391, 392, 395], "org": [0, 225, 351], "origin": [40, 121, 353, 364, 371, 372], "ortho": 366, "orthogon": [121, 133, 135, 138, 366], "orthonorm": [135, 255, 284, 302, 319, 339, 366, 367, 378, 388, 395], "osx": 375, "oszicar": [167, 366], "other": [2, 22, 44, 88, 353, 355, 358, 361, 363, 364, 365, 366, 367, 372, 375, 378, 388, 391, 392, 393, 394], "otherhand": 372, "otherwis": [217, 281, 336, 361, 363, 366, 367, 372, 373, 391, 392, 393], "oubwin": [199, 232, 367, 372, 378], "oudovenko": 372, "our": [352, 353, 354, 362, 363, 365, 367, 369, 370, 378, 388, 393], "ourselv": [391, 392], "out": [0, 48, 52, 53, 54, 55, 102, 121, 354, 359, 362, 363, 364, 366, 369, 370, 372, 373, 380, 391, 394, 395], "outcar": [363, 366], "outer": [206, 363], "outlin": [360, 375], "output": [0, 8, 9, 34, 60, 73, 102, 121, 123, 125, 127, 128, 129, 196, 199, 207, 208, 224, 228, 232, 280, 282, 301, 305, 321, 332, 333, 335, 337, 354, 355, 358, 361, 363, 364, 367, 368, 369, 371, 372, 374, 376, 378, 388, 391, 392, 394], "outputfil": 365, "outputs_fil": 199, "outsid": 363, "outsourc": 0, "over": [0, 247, 280, 293, 335, 363, 370, 393], "overlap": [102, 133, 138, 366, 371, 395], "overrid": [301, 305, 318, 319, 332, 333, 346, 361, 366], "overwritten": [280, 335], "own": [0, 354, 355, 370, 388, 393, 394], "oxygen": 395, "p": [68, 82, 133, 134, 251, 256, 297, 303, 352, 353, 359, 360, 364, 365, 366, 367, 369, 370, 372, 373, 381, 387, 388, 389, 390, 391, 392, 393, 394], "p_": [256, 303, 353], "p_lj": 134, "p_matrix": 138, "pack": 364, "packag": [0, 352, 353, 354, 355, 358, 361, 362, 367, 369, 371, 373, 374, 391, 392, 393, 394], "pade": 354, "page": [0, 354, 366, 370, 372, 374, 375, 376, 378], "pair": 104, "pakw": [305, 332, 333, 361], "pakw_orb": [305, 332, 333, 361], "palsson": 372, "panel": 361, "paper": [352, 388], "par": [122, 128, 131], "par_str": [107, 108, 115, 116, 117, 118, 119], "parallel": [355, 363, 364, 369, 388, 393, 394], "param": [0, 183, 370], "param_set": 113, "paramagnet": [373, 378], "paramet": [0, 2, 6, 7, 8, 9, 10, 12, 13, 16, 22, 23, 24, 30, 31, 35, 40, 43, 49, 50, 51, 88, 89, 90, 91, 100, 104, 109, 113, 116, 118, 124, 129, 131, 138, 139, 141, 145, 149, 153, 182, 183, 185, 186, 190, 193, 197, 199, 200, 201, 202, 203, 204, 208, 210, 211, 213, 219, 220, 223, 224, 225, 229, 232, 234, 236, 237, 241, 243, 244, 245, 246, 247, 248, 249, 254, 255, 256, 257, 265, 266, 267, 269, 270, 271, 272, 274, 275, 280, 281, 282, 283, 284, 287, 289, 290, 291, 292, 293, 294, 295, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 327, 328, 332, 333, 335, 336, 337, 338, 339, 342, 343, 346, 347, 348, 349, 351, 359, 361, 363, 365, 366, 367, 369, 370, 372, 377, 378, 387, 389, 391, 392, 394, 395], "paramt": 100, "parcollet": [0, 352], "parproj": [316, 367, 378], "parproj_convert": 316, "parproj_data": [240, 241, 286, 287], "parproj_subgrp": [35, 196, 197, 228, 229, 233], "pars": [97, 103, 104, 109, 110, 111, 112, 113, 114, 186, 366], "parser": [109, 115, 146, 154, 186, 366], "part": [0, 2, 23, 24, 59, 67, 79, 81, 89, 125, 247, 293, 301, 352, 355, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 378, 388, 391, 392, 393, 394], "partial": [35, 197, 206, 229, 234, 241, 319, 353, 355, 367, 378, 391, 392], "partial_charg": 361, "particl": [353, 374], "particular": [0, 2, 106, 135, 352, 353, 362, 363, 366, 375, 392], "pass": [0, 8, 9, 12, 125, 129, 131, 149, 359, 366], "patch": 0, "path": [96, 182, 185, 190, 241, 364, 367, 369, 375], "path_to_dft_tool": 375, "path_to_triq": 375, "path_to_triqs_install_directori": 375, "path_to_wien2k": 375, "patt": 187, "pattern": 187, "pauli": 353, "paw": [366, 395], "pbe": 395, "pbnm": 363, "pcolormesh": 359, "pdagger": [251, 297], "pdf": [367, 386], "pdo": 0, "pdos_": 366, "pdos_x": 395, "peak": 378, "pedagog": 391, "peil": [0, 352], "per": [0, 46, 77, 221, 257, 282, 283, 304, 318, 321, 337, 338, 363, 366, 369, 391], "perform": [0, 6, 7, 22, 100, 121, 137, 186, 248, 294, 354, 355, 359, 360, 362, 366, 367, 369, 370, 372, 373, 374, 378, 388, 392, 393, 394, 395], "perform_tail_fit": [387, 389, 391, 392, 393, 394], "permut": [46, 77, 341], "permutaion": 241, "perovskit": 363, "perpendicular": [220, 363], "pg1": [366, 395], "pgroup": [125, 128, 129], "phase": 378, "philosophi": [355, 368], "phy": [352, 366, 370, 372], "physic": [353, 360], "physrevresearch": 351, "pi": 372, "pick": [23, 24, 360, 391, 392, 395], "pick_gf_struct": 4, "pick_gf_struct_solv": [362, 391, 392], "pictur": 353, "piec": 370, "place": [0, 367, 369, 370], "placehold": 363, "plain": [202, 204, 366], "plane": [361, 364], "pleas": [361, 362, 363, 366, 367, 369, 372, 375, 376, 395], "plethora": 354, "plo": [96, 121, 129, 183, 185, 366, 385, 388, 395], "plo_convert": [366, 385, 388, 395], "plocar": 100, "plocar_filenam": [182, 185, 190], "plog": 129, "plot": [305, 332, 333, 354, 358, 361, 362, 367, 368, 372, 378, 381, 386, 388, 392, 393, 395], "plot1d": 364, "plot3d": [40, 364], "plot_linefit": 386, "plot_rang": [305, 332, 333, 361], "plot_shift": [305, 332, 333, 361], "plovasp": [358, 368, 377, 385], "plt": [359, 386], "plu": 354, "pmat": [42, 235, 358, 372], "pmatrix": 362, "png": 359, "pnma": 363, "point": [40, 89, 100, 115, 121, 123, 125, 127, 179, 180, 182, 199, 213, 219, 221, 223, 225, 243, 247, 248, 255, 257, 266, 281, 284, 289, 293, 294, 302, 304, 314, 318, 321, 332, 333, 336, 339, 355, 359, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 378, 388, 391, 393, 395], "polar": [100, 225, 351, 363, 366, 378, 391, 393, 394], "polaris": [234, 371, 373, 392], "polytechniqu": 352, "popular": 353, "port": 0, "port_to_triqs3": 0, "poscar": [117, 173, 366, 388, 395], "poscar_filenam": 190, "pose": 354, "posit": [359, 364, 366, 378, 380, 392], "possibl": [31, 49, 50, 51, 91, 203, 211, 237, 351, 352, 354, 360, 362, 363, 364, 365, 366, 367, 369, 370, 371, 373, 375, 391, 392, 393, 394], "possibli": [319, 380], "post": [0, 354, 366, 368, 373, 377, 388, 391, 392, 393, 394], "potcar": [388, 395], "potenti": [0, 224, 248, 257, 266, 275, 281, 294, 301, 304, 305, 314, 318, 319, 328, 332, 333, 336, 351, 353, 355, 361, 362, 365, 369, 370, 372, 373, 378, 379, 380, 388, 391, 392, 393, 394], "pourovskii": 352, "pr": [366, 381, 388, 395], "practial": 393, "practic": [353, 369, 394], "prb": 388, "pre": 149, "prec_mu": [393, 394], "precis": [248, 294, 353, 366, 369, 380, 387, 388, 389, 391, 392, 393, 394], "predict": 353, "prefix": 363, "prepar": [0, 355, 366, 378, 387, 389, 391, 392, 393, 395], "prepare_run_directori": 379, "prepend": [333, 361], "prerequisit": [301, 354, 361], "presenc": [206, 353, 371, 392], "present": [146, 154, 182, 232, 266, 270, 314, 323, 355, 361, 363, 366, 367, 370, 372, 378, 388], "preserv": 121, "pretti": [353, 388], "prevent": 366, "previou": [206, 364, 365, 369, 370, 378, 380, 387, 389, 393], "previous": [0, 241, 364, 372, 378], "previous_pres": [370, 380], "previous_run": [370, 380], "princip": 366, "principl": [353, 360], "print": [206, 215, 216, 270, 272, 301, 320, 323, 325, 361, 363, 366, 367, 372, 378, 379, 380, 383, 386, 387, 389, 391, 392, 393, 394], "printout": 0, "probabl": [354, 386], "problem": [206, 353, 355, 359, 360, 362, 366, 369, 370, 371, 373, 374, 376, 378, 380, 387, 388, 389, 391, 392, 393, 394], "proce": [248, 294, 367, 369, 370, 371], "procedur": [362, 369, 371, 392, 393, 394, 395], "process": [0, 97, 121, 169, 206, 354, 366, 368, 369, 373, 377, 388, 393], "produc": [0, 31, 49, 50, 51, 91, 203, 211, 225, 237, 353, 363, 365, 366, 367, 368, 373, 378, 393], "product": 364, "program": [0, 352, 353, 355, 367, 369, 375, 378, 393], "proj": [54, 196, 197, 364, 366, 373, 395], "proj_compl": [141, 142], "proj_f": 364, "proj_mat": [55, 66, 215, 373], "proj_mat_al": [316, 363], "proj_mat_csc": [373, 383], "proj_or_hk": [196, 197, 373, 385, 388, 389], "proj_param": [145, 149, 150, 153], "proj_raw": [100, 145, 149, 150, 153], "proj_typ": [301, 305, 321, 332, 333, 361, 378], "proj_wanband": 364, "projcar": [173, 366, 395], "project": [0, 45, 96, 121, 129, 144, 152, 221, 226, 256, 301, 303, 305, 319, 321, 332, 333, 352, 355, 361, 362, 363, 364, 366, 367, 369, 372, 373, 377, 378, 381, 391, 392, 394, 395], "projector": [0, 35, 60, 96, 100, 102, 121, 123, 130, 131, 133, 134, 135, 137, 138, 140, 141, 145, 148, 149, 153, 156, 183, 185, 186, 197, 215, 229, 234, 241, 251, 255, 284, 297, 301, 302, 305, 319, 321, 332, 333, 339, 353, 361, 363, 364, 367, 368, 369, 372, 378, 381, 388, 394, 395], "projectorgroup": 121, "projectorshel": [121, 131], "prop": 0, "prop_to_be_diagon": [249, 295, 347, 360, 391, 392], "proper": [59, 79, 96, 352, 366, 369, 393, 395], "properli": 366, "properti": [14, 15, 17, 18, 19, 20, 21, 25, 180, 183, 188, 225, 249, 252, 253, 258, 259, 260, 261, 262, 263, 264, 276, 277, 279, 295, 298, 299, 306, 307, 308, 309, 310, 311, 312, 329, 330, 334, 345, 347, 353, 354, 355, 360, 391, 392], "prototyp": 186, "provid": [0, 12, 121, 146, 154, 240, 243, 244, 245, 246, 247, 248, 257, 266, 281, 289, 290, 291, 292, 293, 294, 304, 314, 319, 332, 333, 336, 341, 352, 354, 355, 359, 361, 366, 367, 368, 369, 372, 373, 374, 375, 376, 388, 391, 392, 393, 394, 395], "pseudopotenti": 395, "pshell": [128, 129], "psi_": [353, 366], "public": 352, "publish": 352, "pull": 0, "pure": 0, "purpos": [146, 154, 354, 361, 362, 366, 367, 368, 369, 373], "pursu": 366, "put": [354, 359, 361, 367, 370, 372, 378, 380, 391, 392, 393, 394], "put_sigma": [360, 383, 387, 389, 395], "px": 366, "py": [0, 96, 355, 366, 369, 371, 378, 388, 391, 392, 393, 394], "py3": 0, "pyplot": 359, "python": [0, 96, 98, 135, 358, 359, 366, 367, 369, 375, 378, 388, 391, 392, 393, 394], "python3": 0, "python_with_dmft": 375, "pz": 366, "q": 366, "q_type": 188, "qdmft": [369, 378, 380], "qe": [247, 293], "qmc": [355, 360, 362, 371, 372, 378, 388], "qtl": 359, "quadrat": 366, "quadtrat": 133, "qualit": 353, "quanti": [364, 394], "quantiti": [349, 353, 355, 358, 361, 363, 367, 368, 370, 393, 394], "quantiz": 10, "quantum": [0, 208, 362, 363, 365, 366, 367, 371, 373, 378, 392], "question": 358, "quick": [254, 300, 388], "quickli": [354, 369, 376], "quit": [355, 369, 371, 373, 392], "r": [0, 59, 79, 216, 218, 219, 221, 225, 353, 361, 363, 370, 372, 380, 393, 394], "r0": [378, 391, 392, 393], "r3fac": [67, 81], "r_degeneraci": [219, 221], "r_degeneracy_spin": 225, "r_vector": [219, 221], "r_vector_spin": 225, "r_zero_index": 216, "rais": [216, 217, 222, 267, 315], "random_nam": [387, 389], "random_se": [387, 389, 391, 392, 393], "rang": [115, 117, 135, 359, 360, 362, 366, 367, 370, 373, 378, 380, 383, 387, 389, 391, 392, 393, 394, 395], "rangl": [363, 366, 378], "rank": [361, 387, 389, 391, 392, 393, 394, 395], "rather": 208, "ratio": 366, "raw": [96, 100, 109, 121, 137, 145, 149, 153, 183, 368], "re": [23, 24, 226, 391, 392, 395], "reach": 369, "read": [0, 39, 40, 41, 42, 48, 52, 53, 54, 55, 56, 57, 62, 63, 64, 89, 100, 121, 167, 176, 179, 182, 183, 185, 187, 190, 194, 198, 199, 200, 202, 204, 206, 209, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 267, 270, 315, 316, 323, 355, 359, 361, 363, 364, 365, 366, 367, 368, 369, 372, 373, 378, 379, 380, 387, 388, 389, 391, 392, 393, 394, 395], "read_al": [191, 192], "read_gf_from_txt": 361, "read_inp_from_h5": 0, "read_wannier90_blochbasis_data": 221, "read_wannier90_hr_data": 221, "read_wannier90data": 206, "readabl": [349, 366, 388], "reader": 371, "readm": 0, "real": [0, 69, 83, 89, 95, 119, 125, 216, 219, 226, 241, 243, 244, 245, 247, 248, 257, 266, 269, 281, 283, 289, 290, 291, 293, 294, 301, 304, 305, 314, 322, 332, 333, 336, 338, 353, 354, 355, 358, 360, 365, 366, 372, 373, 377, 378, 379, 380, 383, 387, 389, 391, 392, 393, 394], "realist": [354, 374], "rearrang": 61, "reason": [23, 24, 363, 365, 369, 370, 373, 380, 391, 393], "recalcul": [367, 369, 378, 380, 388], "recent": 0, "reciproc": [40, 188, 215, 217, 223, 333, 361, 364, 372, 373], "recommend": [354, 363, 366, 372, 375], "rectangular": [138, 224], "reduc": [32, 58, 60, 92, 205, 212, 238, 362, 364, 369, 394, 395], "reduce_4index_to_2index": [387, 389], "reduct": 363, "redund": [70, 84], "ref": 0, "refactor": 0, "refer": [0, 301, 352, 353, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 388, 392, 393, 394], "referenc": [106, 366, 376], "refin": [393, 394], "reflect": [0, 354, 367, 391, 392], "refreqgf": 361, "refreqmesh": 0, "region": 393, "rel": [364, 367, 372, 378], "rela": [378, 391, 392, 393], "relat": [0, 2, 40, 141, 149, 301, 333, 352, 361, 364, 366, 393, 394], "releas": 0, "relev": [88, 146, 154, 247, 248, 257, 281, 293, 294, 304, 336, 352, 362, 366, 367, 372, 388, 391, 392], "reli": [206, 366], "remain": [0, 364, 369, 378], "remark": 368, "reminisc": 362, "remov": [0, 62, 63, 64, 361, 366, 369, 370], "renam": [0, 24], "reorder": [0, 208], "reorder_orbital_and_spin_vasp5": [207, 208], "repack": [34, 35, 87, 88, 196, 197, 207, 208, 228, 229, 364, 372, 379], "repeat": [364, 365, 367, 394], "repin": 372, "replac": [31, 49, 50, 51, 91, 203, 211, 237, 353, 359, 366, 367, 369, 373, 394], "report": [0, 351, 370, 380, 387, 389, 391, 392, 393, 394, 395], "repositori": [0, 354, 375], "repres": [121, 220, 247, 255, 271, 284, 293, 301, 302, 324, 332, 333, 339, 361, 363, 366, 375, 378], "represent": [45, 60, 99, 365, 371, 373, 378, 393, 394], "reproduc": [353, 376], "repuls": 353, "request": [267, 270, 272, 315, 323, 325, 349, 387, 389], "requir": [0, 73, 104, 113, 117, 121, 173, 256, 303, 354, 355, 361, 363, 364, 366, 367, 368, 372, 373, 375, 378], "rerun": [364, 391, 392, 393, 394], "research": 352, "resembl": 388, "reset": [266, 314, 370], "reshap": [359, 392], "resist": 355, "resolv": [0, 241, 301, 305, 318, 319, 321, 332, 333, 366, 378], "resort": 363, "resp": [365, 367, 368], "respect": [220, 266, 314, 363, 364, 366, 367, 378, 388], "respons": [104, 121, 352, 354], "rest": [364, 373], "restart": 358, "restrict": [362, 391, 392], "result": [0, 2, 215, 243, 244, 245, 248, 289, 290, 291, 294, 352, 353, 354, 355, 360, 362, 366, 367, 369, 372, 375, 378, 386, 388, 391, 392, 393, 394, 395], "retain": 366, "retriev": 372, "return": [14, 15, 17, 18, 19, 20, 30, 31, 43, 49, 50, 51, 54, 69, 83, 90, 91, 95, 109, 115, 135, 138, 139, 143, 144, 147, 151, 152, 155, 186, 187, 190, 201, 203, 204, 210, 211, 213, 218, 219, 220, 221, 223, 224, 225, 226, 236, 237, 242, 244, 247, 248, 249, 254, 255, 256, 257, 266, 267, 270, 271, 281, 282, 284, 288, 290, 293, 294, 295, 300, 301, 302, 303, 304, 305, 314, 315, 318, 319, 321, 323, 324, 332, 333, 336, 337, 339, 343, 347, 348, 351, 361, 369, 389], "rev": [352, 372], "revamp": 0, "review": 368, "rework": 0, "rewritten": 0, "rewrot": 0, "rgkmax": [364, 394], "rho": 353, "rid": 362, "right": [6, 7, 59, 79, 213, 353, 355, 361, 372], "rightarrow": 393, "rlmmax": [364, 394], "rm": 369, "rmt": [378, 391, 392, 393], "room": 363, "root": [197, 342, 359, 367, 376], "rot": [59, 70, 79, 84, 378, 391, 392, 393], "rot_mat": [0, 206, 208, 218, 363, 373], "rot_mat_al": 316, "rot_mat_all_time_inv": 316, "rot_mat_time_inv": [206, 373], "rot_mat_typ": [0, 207, 208, 218, 363], "rotat": [0, 36, 44, 59, 60, 68, 69, 75, 79, 82, 83, 206, 218, 257, 271, 304, 324, 332, 341, 345, 347, 348, 355, 358, 361, 366, 368, 371, 373, 393, 394], "roteul": [70, 84], "rotzflm": [65, 80], "rough": 366, "roughli": 395, "rout": 353, "routin": [0, 32, 36, 44, 58, 59, 65, 70, 75, 79, 80, 84, 92, 96, 121, 205, 212, 238, 301, 305, 316, 321, 341, 355, 358, 360, 361, 364, 366, 367, 368, 369, 370, 372, 373], "row": [40, 119, 366], "rpartit": [369, 380], "rst": 0, "rule": [59, 79, 368, 370, 378], "run": [0, 96, 206, 221, 354, 355, 358, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 385, 386, 388, 391, 392, 393, 394, 395], "run_lapw": 369, "run_triq": 375, "runsp": 392, "runsp_triq": 375, "ry": 378, "rydberg": 367, "ryee": 351, "s41598": [0, 351], "s_": 372, "saclai": 352, "safe": 206, "safeconfigpars": 0, "safer": [0, 244, 290], "sai": [22, 354, 364], "said": 362, "same": [2, 6, 7, 8, 9, 16, 67, 69, 81, 83, 343, 351, 353, 355, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 375, 378, 391, 392, 393, 394, 395], "samf": [246, 292, 351], "save": [35, 88, 197, 199, 206, 208, 229, 318, 361, 369, 370, 372, 378, 380, 387, 388, 389, 391, 392, 393, 394], "save_occ": [318, 361], "save_to_fil": [301, 318, 332, 333, 361], "savefig": [359, 386], "savrasov": 372, "saw": 369, "sc": [380, 391, 392], "sc_dmft": 369, "scalar": 241, "scale": 392, "scf": [359, 366, 369, 378], "scf2": 372, "scheme": [197, 353, 366, 370], "schmidt": 133, "schnait": 0, "schueler": 0, "schwarz": 372, "sch\u00fcler": 366, "scientif": 352, "scipi": [0, 70, 84], "sclauzero": 206, "scratch": [369, 370, 378, 388], "script": [0, 98, 354, 366, 367, 369, 370, 372, 375, 376, 377, 378, 391, 392, 393, 394, 395], "se": 365, "search": [248, 294, 366], "second": [10, 107, 108, 115, 117, 355, 362, 363, 364, 365, 366, 371, 392], "section": [0, 110, 111, 113, 114, 360, 361, 363, 364, 365, 367, 369, 370, 378, 391, 392, 393], "see": [0, 14, 30, 36, 43, 59, 69, 70, 75, 79, 83, 84, 90, 201, 210, 222, 236, 241, 246, 292, 351, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 378, 388, 391, 392, 393, 394, 395], "seebeck": 372, "seed": 223, "seednam": [207, 208, 224, 225, 363], "seedname_hr": [225, 363], "seedname_u": [224, 363], "seedname_u_di": [224, 363], "select": [0, 23, 24, 121, 131, 133, 137, 139, 145, 148, 149, 153, 156, 197, 360, 363, 366, 388, 392], "self": [0, 137, 145, 146, 153, 154, 241, 242, 246, 247, 257, 266, 269, 274, 280, 281, 283, 288, 292, 293, 301, 304, 305, 314, 318, 319, 322, 327, 332, 333, 335, 336, 338, 352, 354, 358, 360, 368, 370, 372, 373, 374, 375, 379, 380, 387, 389, 391, 392, 393, 395], "semi": [353, 366], "semiconductor": 353, "sens": [391, 392], "sensibl": 388, "sep": 206, "separ": [0, 119, 281, 301, 336, 361, 363, 366, 369, 393, 394], "sequenc": 24, "seri": 366, "set": [0, 8, 9, 16, 59, 79, 113, 115, 117, 119, 121, 135, 146, 154, 214, 241, 246, 247, 248, 254, 257, 266, 269, 274, 275, 281, 292, 293, 294, 300, 301, 304, 305, 314, 322, 327, 328, 332, 333, 336, 353, 354, 355, 358, 359, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 375, 378, 379, 380, 387, 388, 389, 391, 392, 393, 394, 395], "set_atomic_level": [378, 379, 380], "set_dc": [361, 370, 372], "set_error": 386, "set_from_inverse_fouri": 0, "set_g_iw": 386, "set_mu": [361, 370, 372], "set_sigma": [0, 361, 369, 370, 372, 379, 380, 391, 392, 393, 394], "set_xlim": 359, "set_ylim": 359, "seth": 352, "setup": [0, 355, 369, 370, 372, 375, 377, 383, 387, 389], "sever": [137, 361, 365, 366, 375, 378], "sfll": [246, 292, 351], "sh": [375, 394], "sh_option": 104, "sh_par": [141, 142, 146, 149, 150, 154], "sh_requir": 104, "shall": [249, 295, 347], "sham": [177, 206, 223, 224, 320, 353, 363, 364, 366, 367, 369, 394], "shape": 383, "share": [123, 366, 375], "sharma": 372, "sheld": 351, "shell": [0, 2, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 30, 35, 43, 55, 60, 65, 66, 80, 88, 90, 104, 106, 109, 114, 115, 121, 123, 125, 129, 131, 132, 135, 137, 140, 141, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 197, 200, 201, 208, 210, 214, 218, 222, 229, 234, 236, 241, 243, 244, 245, 246, 249, 254, 255, 256, 257, 268, 269, 271, 274, 278, 280, 282, 283, 284, 289, 290, 291, 292, 295, 300, 301, 302, 303, 304, 305, 317, 319, 321, 322, 324, 327, 331, 332, 333, 335, 337, 338, 339, 342, 353, 361, 362, 363, 365, 367, 369, 373, 375, 378, 383, 387, 388, 389, 390, 394, 395], "shell_list": [305, 332, 361], "shells_map": 218, "shift": [247, 248, 257, 266, 281, 293, 294, 304, 314, 336, 378], "shinaoka": 0, "ship": 353, "short": [355, 365], "shot": [353, 355, 358, 367, 369, 374, 378, 388, 394], "should": [6, 7, 8, 9, 12, 13, 89, 98, 135, 186, 208, 246, 292, 352, 353, 355, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 375, 378, 388, 391, 392, 393, 394, 395], "shouldn": [23, 24], "show": [8, 9, 353, 360, 361, 362, 363, 375, 391], "show_warn": [8, 9, 257, 282, 304, 337], "shown": [360, 361, 363, 393, 394], "shuffl": 388, "side": 364, "sig": [387, 389], "sigma": [0, 241, 266, 283, 314, 338, 353, 361, 369, 370, 372, 379, 380, 381, 383, 384, 387, 388, 389, 391, 392, 393, 394, 395], "sigma_": [256, 303, 353, 361, 372, 378], "sigma_imp": [0, 257, 266, 269, 273, 283, 304, 314, 322, 326, 338, 383, 387, 389], "sigma_imp_iw": 0, "sigma_imp_w": 0, "sigma_it": [383, 387, 389], "sigma_iw": [360, 369, 370, 383, 387, 388, 389, 391, 392, 393, 394], "sigma_iw_fit": 393, "sigma_minus_dc": [242, 288], "sigma_out": [283, 338], "sigma_uns_it": [387, 389], "sigma_w": [361, 372], "sigmaimfreq": 361, "sigmaimp_": [266, 314], "sigmarefreq": 361, "sign": [360, 362, 371, 392], "signal": 172, "signatur": 95, "significantli": [360, 366], "silk": 352, "similar": [44, 125, 366, 369, 378, 391, 392, 395], "simon": 0, "simpl": [2, 100, 243, 289, 352, 353, 355, 358, 362, 363, 364, 366, 367, 369, 370, 388, 391, 392, 393, 394], "simplest": 373, "simpli": [354, 367, 388, 395], "simplic": [388, 394], "simplifi": [362, 373], "simultan": 388, "sinc": [281, 336, 353, 355, 361, 362, 363, 365, 366, 367, 369, 371, 373, 375, 388, 391, 392], "singl": [0, 121, 353, 358, 366, 367, 369, 374, 378, 388], "sir": 353, "site": [117, 135, 137, 186, 255, 256, 284, 302, 303, 339, 363, 364, 366, 367, 373, 378, 395], "site_diag": [143, 147, 151, 155], "situat": [355, 367, 373], "six": [173, 365], "size": [32, 40, 58, 60, 66, 92, 205, 212, 238, 362, 364, 373, 391, 392, 395], "sk": [301, 332, 333, 345, 346, 360, 361, 366, 369, 370, 372, 378, 379, 380, 383, 387, 388, 389, 391, 392, 393, 394, 395], "skeleton": 0, "slater": [246, 292, 378, 391, 392, 393, 394], "slave": 370, "slice": 0, "slice_arrai": 383, "slightli": [366, 388], "slow": [0, 360], "small": [0, 362, 364, 366, 381, 388, 392, 394], "smaller": [0, 107, 108, 241, 362, 372, 373], "smallest": [133, 391, 392], "smear": [247, 248, 281, 293, 294, 336, 395], "snippet": [370, 393], "so": [0, 16, 38, 61, 118, 133, 197, 199, 206, 223, 234, 241, 301, 346, 355, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 388, 391, 392, 393, 394], "soc": [0, 391, 392], "sole": 364, "solid": 369, "solut": [359, 362, 364, 367, 369, 371, 378, 391, 392, 393, 394], "solv": [353, 360, 364, 369, 370, 376, 378, 380, 387, 389, 391, 392, 393, 394], "solver": [0, 2, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 24, 249, 256, 282, 283, 295, 303, 337, 338, 347, 353, 355, 358, 369, 371, 372, 375, 377, 378, 379, 380, 383, 387, 389, 391, 392], "solver_dict_it": [387, 389], "solver_to_sumk": [2, 3, 16], "solver_to_sumk_block": [2, 3, 14], "som": 354, "some": [0, 23, 24, 174, 285, 286, 353, 355, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 378, 383, 387, 388, 389, 391, 392, 393, 394], "someth": [364, 368, 394], "sometim": [366, 373], "somewher": 362, "soon": [360, 373, 393, 394], "sophi": [0, 206], "sort": [18, 125, 139, 278, 331, 354, 363, 365, 366, 367, 373, 378, 391, 392, 393, 395], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 22, 23, 24, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 60, 61, 66, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 286, 287, 301, 305, 316, 318, 319, 320, 321, 332, 333, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 361, 364, 366, 376], "sp": [0, 199, 206, 223, 234, 301, 332, 333, 361, 363, 371, 372, 373, 392], "space": [0, 2, 6, 7, 12, 13, 14, 15, 35, 88, 125, 133, 197, 208, 215, 216, 217, 219, 223, 226, 229, 282, 283, 337, 338, 353, 360, 362, 365, 366, 369, 370, 373, 374, 391, 392], "space_from": [8, 9, 362, 391, 392], "space_to": [8, 9, 362, 391, 392], "spaghetti": [0, 305, 355, 358, 361, 364], "spaghettis_to_plot": 359, "span": [133, 135], "spdf": 378, "specfici": 364, "speci": [364, 366, 394], "special": [353, 355, 369], "specif": [0, 149, 247, 251, 293, 297, 321, 333, 354, 361, 363, 364, 366, 369, 395], "specifi": [246, 248, 281, 292, 294, 301, 332, 333, 336, 351, 360, 361, 363, 364, 365, 366, 367, 368, 369, 372, 375, 376, 378, 388, 393, 394, 395], "spectra": [301, 305, 332, 333, 361], "spectral": [0, 241, 301, 305, 332, 333, 354, 366, 367, 368, 371, 372, 377, 378], "spectral_contour": [0, 305, 361], "spectral_contours_plot": 361, "spectrum": 353, "speed": [248, 294, 366], "speedup": 0, "spefici": [301, 361], "spfname": [364, 394], "spheric": [44, 65, 68, 80, 82, 364, 373, 378], "spherical_to_cub": [44, 387, 389], "sphinx": 0, "spin": [0, 66, 100, 123, 199, 208, 214, 220, 221, 225, 226, 234, 241, 246, 247, 249, 254, 292, 293, 295, 300, 301, 320, 332, 333, 351, 353, 358, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 378, 391, 392, 393, 394, 395], "spin_diag": [143, 147, 151, 155], "spin_nam": [383, 387, 389, 393, 394], "spinav": [247, 293], "spirit": 365, "split": [0, 367, 371, 373, 378, 391, 392, 393], "spn": [301, 332, 333, 361], "sppath": [364, 394], "spread": 395, "sqrt": 362, "squar": [361, 373], "sr": [364, 367, 371, 391, 392, 393, 394], "sr2mgos6_nosoc": [391, 392], "sr2mgoso6": [0, 371, 391, 392], "sr2mgoso6_nosoc": [391, 392], "sr2mgoso6_soc": 392, "sr_sv": 395, "src": 375, "src_templat": 375, "sript": 388, "srvo": [361, 369, 395], "srvo3": [0, 364, 365, 366, 367, 370, 372, 388, 391, 392, 393, 394, 395], "stabil": [133, 388], "stabl": [0, 353, 375], "stack": [305, 332, 333, 361], "stage": [361, 370], "standalon": 350, "standard": [125, 301, 332, 333, 353, 355, 358, 361, 363, 365, 366, 367, 368, 369, 371, 372, 375], "start": [0, 354, 362, 366, 369, 370, 387, 388, 389, 391, 392, 393, 394, 395], "state": [133, 149, 224, 241, 301, 352, 353, 355, 364, 366, 367, 369, 375, 378, 381, 388, 391, 392, 394, 395], "stateless": 0, "statement": [366, 369, 378], "statist": [393, 394], "step": [0, 121, 352, 353, 355, 360, 366, 367, 368, 369, 370, 372, 378, 388, 391, 392, 393, 394], "still": [169, 362, 363, 369, 388, 391, 392], "stochast": 354, "stop": [363, 393], "stop_tim": 366, "stope": 388, "storag": [130, 140, 373], "store": [0, 23, 35, 39, 40, 41, 42, 88, 89, 96, 97, 125, 129, 179, 197, 198, 208, 209, 229, 230, 231, 232, 233, 234, 235, 241, 243, 244, 245, 246, 247, 249, 266, 272, 289, 290, 291, 292, 293, 295, 301, 305, 314, 318, 319, 325, 332, 333, 342, 347, 349, 355, 360, 361, 366, 367, 368, 369, 370, 372, 373, 378, 380, 385, 388, 391, 392, 393, 394, 395], "str": [8, 9, 31, 49, 50, 51, 63, 91, 182, 185, 190, 193, 203, 211, 237, 361, 380, 383, 386, 387, 389], "straight": [368, 369], "straightforward": 369, "straightforwardli": 388, "strand": 0, "strategi": 137, "strength": 363, "string": [31, 35, 49, 50, 51, 62, 63, 64, 88, 91, 104, 118, 197, 199, 203, 204, 208, 211, 223, 224, 225, 229, 234, 237, 241, 246, 247, 248, 249, 254, 255, 267, 270, 271, 272, 284, 292, 293, 294, 295, 300, 301, 302, 305, 315, 316, 321, 323, 324, 325, 332, 333, 339, 342, 346, 347, 349, 351, 361, 366, 367, 373], "strong": 353, "strongli": [353, 366, 371, 372], "struct": [22, 199, 232, 367, 369, 371, 372, 378, 387, 389, 391, 392, 393], "struct_fil": 199, "structur": [0, 1, 2, 5, 6, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 22, 23, 99, 100, 145, 149, 150, 153, 199, 241, 243, 244, 245, 249, 254, 257, 269, 282, 283, 289, 290, 291, 295, 300, 304, 322, 332, 337, 338, 347, 352, 353, 354, 358, 361, 363, 364, 366, 367, 368, 369, 371, 372, 374, 378, 383, 387, 389, 391, 392, 393, 394, 395], "struggl": 0, "stuck": 366, "stuctur": [243, 289], "studi": 366, "stuff": [391, 392, 393, 394], "su": [36, 75], "su2": 66, "sub": 373, "subgroup": [35, 88, 197, 199, 208, 229, 234, 241, 267, 270, 272, 315, 319, 323, 325, 341, 342, 361, 370, 372, 373, 393, 394], "subgroup_pres": [270, 323], "subgrp": [267, 270, 272, 315, 323, 325], "subject": [321, 353], "submatrix": 364, "subplot": 359, "subroutin": [67, 81, 366], "subsequ": [0, 375], "subset": [121, 131, 135, 137, 139, 148, 149, 156, 362, 364, 366, 373, 392], "subshel": 371, "subspac": [220, 223, 363, 366, 367, 372], "substanti": 353, "substract": [266, 314], "subtl": 363, "subtract": [242, 257, 281, 288, 304, 336, 363, 369, 394], "success": [353, 366], "sudo": 375, "suffici": [365, 370, 393, 394], "suggest": [0, 355, 362, 371, 393], "suit": [375, 393, 394], "suitabl": [363, 393], "sum": [0, 247, 293, 340, 341, 363, 365, 369, 373, 378], "sum_": [247, 256, 281, 293, 303, 336, 353], "sum_k": [0, 372], "sum_l": [133, 134], "sumk": [0, 2, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 24, 239, 240, 249, 282, 283, 295, 337, 338, 347, 350, 360, 362, 369, 370, 379, 380, 387, 389, 391, 392, 393, 394, 395], "sumk_block_structur": [383, 387, 389], "sumk_dft": [0, 322, 360, 370, 380, 383, 387, 389, 391, 392, 393, 394], "sumk_dft_tool": [0, 361, 372, 379, 383, 387, 389, 395], "sumk_dft_transport": 0, "sumk_to_solv": [2, 3, 16, 23, 24, 387, 389, 393, 394], "sumkdft": [0, 16, 34, 87, 196, 207, 228, 285, 286, 287, 289, 290, 291, 325, 355, 360, 361, 362, 363, 366, 368, 370, 377, 378, 380, 383, 387, 389, 391, 392], "sumkdfttool": [355, 361, 364, 366, 367, 368, 371, 372, 378, 379, 395], "sumklda": 346, "summ_deg_gf": 0, "summari": 362, "summat": [370, 373], "superflu": [146, 154], "supersed": [146, 154], "supervis": 206, "supplement": 388, "suppli": [12, 354, 363, 366], "support": [0, 213, 343, 352, 354, 358, 361, 363, 366, 369, 375, 378], "suppos": 16, "sure": [5, 23, 24, 353, 359, 362, 364, 369, 375, 392, 395], "surfac": [40, 333, 353, 361, 368], "svo": [0, 364, 369], "sweep": [391, 392], "switch": [199, 360, 367, 369, 373, 378, 381, 388, 395], "sy": [387, 389], "sym": 66, "symbol": [118, 119], "symcri": [364, 372], "symlat": [37, 47, 65, 76, 78, 80], "symm_deg_gf": [369, 387, 389, 391, 393, 394], "symm_fil": [200, 234], "symm_filenam": 194, "symm_obj": 343, "symm_op": [206, 363, 373], "symm_subgrp": [200, 234], "symmat": [46, 77], "symmcar": 194, "symmcorr_data": [240, 241, 286, 287], "symmcorr_subgrp": [34, 35, 41, 87, 88, 196, 197, 207, 208, 209, 228, 229, 231], "symmetr": [364, 391, 393, 394], "symmetri": [0, 2, 35, 46, 57, 60, 65, 77, 80, 88, 100, 123, 197, 199, 200, 208, 229, 232, 234, 241, 359, 360, 362, 363, 364, 366, 367, 372, 378, 381, 388, 391, 392, 393, 394, 395], "symmetris": [200, 234, 369], "symmpar_data": [240, 241, 286, 287], "symmpar_subgrp": [34, 35, 196, 197, 228, 229, 233], "sympar": [200, 234, 367, 378], "symqmc": [200, 234, 367, 378], "synchron": 0, "synchronis": 369, "syntax": 375, "system": [0, 214, 218, 234, 247, 281, 293, 332, 336, 353, 355, 360, 361, 363, 364, 365, 372, 373, 375, 376, 381, 388, 395], "t": [0, 2, 14, 23, 24, 44, 55, 60, 66, 118, 206, 349, 352, 359, 361, 362, 363, 364, 367, 372, 373, 378, 391, 392, 395], "t2g": [0, 220, 364, 365, 367, 373, 388, 393, 394], "t2g_orb": 386, "t_": [362, 366, 371, 391, 394], "tackl": 360, "tag": [363, 375], "tail": [377, 378, 391, 392, 394], "tail_fit": 393, "take": [0, 352, 353, 354, 360, 362, 365, 367, 369, 370, 373, 375, 378, 388, 391, 392, 393, 394, 395], "taken": [115, 244, 266, 281, 290, 314, 336, 343, 355, 366, 367, 373, 384], "target": [0, 255, 284, 302, 339, 362, 366, 370], "target_shap": 383, "task": [354, 363, 364, 369, 372, 394], "taumax": 386, "team": 206, "technic": [362, 369], "techniqu": 362, "tell": [353, 365, 366, 367, 369, 392], "temperatur": [241, 247, 248, 254, 281, 293, 294, 300, 336, 361, 363, 378, 393, 394], "templat": [321, 375], "term": [0, 208, 220, 242, 246, 265, 274, 281, 288, 292, 313, 327, 336, 353, 360, 363, 364, 366, 370, 371, 387, 389, 393, 394], "termin": [369, 388], "test": [0, 68, 82, 169, 206, 363, 366, 369, 375], "test_converg": 378, "test_nam": 0, "tetra": [359, 372], "tetrahedra": [95, 180, 182, 395], "tetrahedron": [94, 95, 180, 366], "tevecsv": 364, "text": [97, 125, 127, 128, 129, 301, 318, 320, 332, 333, 355, 361, 363, 365, 367, 372, 373, 388, 393, 394], "th": [36, 59, 75, 79, 363], "than": [0, 107, 108, 206, 208, 245, 291, 353, 362, 363, 366, 369, 373, 375, 388], "thank": [0, 376], "thei": [0, 2, 179, 243, 244, 245, 289, 290, 291, 353, 364, 366, 370, 371, 378, 388, 394], "them": [0, 2, 22, 54, 221, 361, 362, 366, 367, 369, 378, 391, 392, 395], "theme": 0, "theorem": 353, "theoret": 353, "theori": [206, 354, 374], "therefor": [281, 336, 363, 365, 366, 369, 370, 371, 391, 392, 393], "thermal": [0, 372], "thermopow": 355, "theta": [301, 305, 321, 332, 361], "thi": [0, 2, 5, 6, 7, 8, 9, 14, 16, 17, 18, 19, 20, 23, 24, 44, 48, 52, 53, 54, 55, 59, 62, 63, 64, 65, 67, 68, 69, 70, 79, 80, 81, 82, 83, 84, 98, 115, 117, 121, 133, 186, 206, 232, 234, 240, 244, 246, 247, 248, 266, 269, 280, 281, 290, 292, 293, 294, 301, 314, 322, 332, 333, 335, 336, 341, 351, 352, 353, 354, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 388, 391, 392, 393, 394, 395], "thing": [0, 206, 270, 323, 355, 370, 371, 375], "things_to_load": [267, 315], "things_to_read": [267, 270, 315, 323], "things_to_sav": [272, 325], "think": 369, "third": [367, 371], "thorough": 0, "those": [0, 232, 352, 354, 355, 362, 363, 372, 388], "thread": 394, "three": [301, 332, 333, 361, 363, 365, 366, 367, 368, 378, 395], "threshold": [0, 8, 9, 208, 243, 244, 245, 289, 290, 291, 363, 366, 383, 387, 389, 395], "through": [0, 363, 369, 375, 393], "throughout": 0, "throw": [0, 5, 6, 7, 23, 24], "thrown": [8, 9], "thu": [8, 9, 246, 292, 353, 363, 370], "tight": 359, "time": [0, 22, 363, 366, 369, 375], "titl": [359, 378, 395], "tm": 386, "tmatric": [145, 146, 153, 154], "tmatrix": [146, 154], "to_block": [2, 22], "to_idx": 2, "to_index": 22, "to_replac": [31, 49, 50, 51, 91, 203, 211, 237], "todo": 351, "togeth": [0, 2, 353, 354, 374, 375, 388], "toglob": [271, 324], "toler": [0, 388], "toloc": [271, 324], "tomczak": 372, "too": [0, 367, 369], "tool": [71, 73, 96, 285, 286, 354, 355, 358, 359, 364, 366, 367, 368, 369, 374, 378], "toolbox": [354, 355], "top": [333, 361, 366, 371, 378], "topologi": 182, "tot": [281, 336, 359], "total": [100, 125, 136, 180, 188, 213, 247, 248, 281, 293, 294, 301, 332, 333, 336, 351, 352, 355, 361, 363, 365, 366, 369, 373, 378, 380, 387, 389, 392, 393, 394, 395], "total_dens": [369, 380, 387, 388, 389, 393, 394], "tr": [46, 77, 281, 336, 372], "trace": [281, 301, 332, 333, 336, 361, 380, 395], "traceback": 166, "trafo": [249, 295], "train": 354, "transfer": 388, "transfil": 366, "transform": [0, 2, 3, 14, 15, 44, 96, 109, 119, 121, 145, 146, 153, 154, 219, 244, 246, 249, 257, 269, 271, 282, 283, 290, 292, 295, 304, 322, 324, 337, 338, 344, 349, 353, 362, 363, 364, 371, 373, 375, 378, 388, 390, 391, 392, 395], "transform_to_solver_block": [257, 304, 360], "transform_to_sumk_block": [269, 273, 322, 326, 360], "transform_u_matrix": [387, 389, 392], "transp_data": [240, 241, 286, 287], "transp_subgrp": [34, 35, 196, 197, 228, 229], "transport": [0, 35, 42, 197, 229, 235, 241, 354, 355, 358, 368], "transport_distribut": 372, "transpos": 14, "treat": [365, 366, 367, 371, 378, 388], "treatabl": 392, "treatment": [354, 378], "tri": 366, "triangular": 89, "trigger": [8, 9], "triq": [0, 10, 12, 44, 61, 70, 73, 84, 206, 220, 239, 240, 248, 294, 351, 352, 355, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 383, 386, 387, 388, 389, 391, 392, 393], "triqs3": 0, "triqs_cthyb": [383, 387, 389, 391, 392, 393, 394], "triqs_cthyb_hash": [387, 389], "triqs_dft_tool": [0, 356, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 375, 379, 380, 383, 385, 387, 388, 389, 391, 392, 393, 394, 395], "triqs_dft_tools_hash": [387, 389], "triqs_git": [387, 389], "triqs_max": 386, "triqs_runtime_error": 0, "triqs_vers": [387, 389], "triqsvar": 375, "trivial": 363, "troubl": 362, "true": [2, 8, 9, 66, 89, 100, 113, 118, 123, 135, 137, 143, 147, 149, 151, 155, 191, 192, 241, 244, 246, 249, 254, 257, 266, 269, 273, 281, 282, 290, 292, 295, 300, 301, 304, 305, 314, 318, 319, 322, 326, 332, 333, 336, 337, 353, 360, 361, 363, 364, 366, 370, 372, 378, 379, 380, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395], "try": [0, 360, 378], "tune": 378, "tupl": [2, 18, 20, 247, 293], "turn": [353, 363, 366, 369, 378], "tutori": [0, 354, 355, 360, 364, 366, 367, 368, 369, 371, 374, 388, 391, 392, 395], "tutorialdmftproj": 367, "two": [0, 2, 22, 107, 108, 115, 137, 146, 154, 245, 254, 291, 300, 301, 343, 346, 353, 355, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 378, 388, 391, 392, 393, 394, 395], "txt": [376, 387, 389], "typ": 166, "type": [0, 188, 208, 246, 248, 269, 283, 292, 294, 301, 305, 316, 321, 322, 332, 333, 338, 343, 361, 366, 369, 370, 373, 393, 394, 395], "typic": 378, "typo": 0, "u": [0, 133, 224, 246, 292, 351, 353, 360, 362, 370, 372, 373, 376, 378, 387, 388, 389, 391, 392, 393, 394], "u_": 353, "u_cub": [387, 389], "u_int": [378, 379, 380, 387, 389, 391, 392, 393, 394], "u_interact": [246, 292, 360, 370, 380, 387, 388, 389, 391, 392, 393, 394], "u_mat": [391, 392], "u_mat_spin": 224, "u_matrix": [383, 387, 389, 391, 392], "u_matrix_kanamori": [393, 394], "u_matrix_slat": [387, 389, 391, 392], "u_mn": 224, "u_sph": [387, 389, 392], "u_tot": [221, 226], "ud": [301, 361, 392], "ud_0": 392, "ud_1": 392, "udis_mat_spin": [206, 224], "umat": [387, 389, 393, 394], "unabl": 364, "unchang": [0, 22, 364], "uncorrel": [301, 332, 333, 361, 363, 367, 378, 388], "uncoupl": 364, "undefin": 115, "under": [0, 206, 352], "understand": 369, "undocu": 359, "unexpect": 2, "unifi": 0, "uniform": [180, 361, 363, 370], "uniformli": [246, 292], "uniqu": 353, "unit": [0, 341, 355, 363, 365, 367, 369, 372, 373, 378, 393], "unitari": [44, 60, 224, 353, 362, 363, 366], "uniti": 373, "univers": [354, 369, 394], "unknown": 222, "unless": [0, 6, 7, 360], "unlik": [364, 369, 372], "unnorm": 367, "unoccupi": 366, "unorthonorm": 395, "unpolar": 351, "unrot": 360, "unstabl": [248, 294, 369], "until": [133, 187, 353, 369, 371, 388], "unus": 0, "up": [0, 2, 23, 24, 38, 199, 208, 226, 254, 300, 301, 353, 358, 361, 362, 366, 367, 369, 371, 373, 378, 383, 386, 387, 389, 391, 392, 393, 394, 395], "up_0": [362, 388, 391, 395], "up_1": [362, 391, 395], "up_2": [362, 388, 391, 395], "up_3": 391, "uparrow": 363, "updat": [0, 206, 353, 364, 366, 369, 388, 394], "upfold": [353, 355], "upmat": [387, 389, 393, 394], "upon": 361, "upper": [89, 364, 367, 378, 393], "uprim": [387, 389, 393, 394], "us": [0, 2, 4, 8, 9, 12, 14, 15, 22, 34, 40, 44, 45, 54, 59, 60, 65, 66, 67, 69, 70, 79, 80, 81, 83, 84, 87, 104, 115, 133, 137, 179, 196, 206, 207, 208, 221, 228, 241, 243, 246, 247, 248, 254, 255, 257, 266, 271, 281, 284, 289, 292, 293, 294, 300, 301, 302, 304, 305, 314, 318, 319, 321, 324, 332, 333, 336, 339, 345, 346, 348, 351, 352, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 378, 388, 391, 392, 393, 394, 395], "usag": [0, 96, 354, 355, 368], "use_block": [393, 394], "use_dc_formula": [246, 292, 360, 370, 380, 387, 389, 391, 392, 393, 394], "use_dc_valu": [246, 292, 380, 387, 388, 389], "use_dft_block": [240, 241, 286, 287, 360, 372, 378, 379, 380, 383, 387, 389, 391, 392, 393, 394, 395], "use_rot": 373, "use_spin_orbit": 378, "user": [0, 96, 267, 305, 315, 353, 354, 355, 361, 363, 364, 366, 367, 368, 369, 372, 393, 394], "user_data": [267, 272, 315, 325, 391, 392, 393, 394], "usin": [145, 153], "using_gf": [254, 300], "using_point_integr": [254, 300], "usual": [208, 226, 248, 294, 366, 367, 371, 391, 392, 393], "util": [0, 366, 370, 383, 387, 389, 391, 392, 393, 394], "v": [2, 36, 59, 67, 75, 79, 81, 352, 353, 361, 363, 364, 366, 367, 369, 372, 393, 394, 395], "v1": 0, "v_": [353, 372], "v_1": 2, "v_2": 2, "v_h": 353, "valenc": [353, 366, 378], "valid": 369, "valu": [2, 166, 241, 246, 248, 257, 274, 275, 280, 292, 294, 301, 304, 327, 328, 332, 333, 335, 351, 353, 355, 360, 361, 363, 364, 366, 367, 369, 370, 372, 373, 378, 392, 394], "value1": 375, "value2": 375, "valueerror": 216, "values_not_read": [270, 323], "van": 0, "vanadium": [367, 395], "varepsilon_": [353, 362], "variabl": [0, 197, 214, 221, 355, 361, 364, 366, 367, 369, 372, 375], "variant": 371, "variat": 364, "varieti": 353, "variou": [0, 137, 351], "vasp": [93, 96, 97, 99, 100, 121, 122, 169, 173, 177, 182, 183, 185, 186, 188, 190, 191, 208, 247, 293, 301, 321, 358, 361, 363, 365, 368, 371, 373, 374, 375, 383, 385, 386, 387, 389, 393], "vasp5": 226, "vasp_data": [100, 101], "vasp_dir": [97, 176, 179, 182, 185, 190, 191, 192, 194, 366, 369, 385, 388, 395], "vasp_dmft": [369, 388], "vasp_exec": 388, "vasp_pid": [169, 171], "vasp_vers": 171, "vaspconvert": [366, 385, 388, 389, 395], "vector": [0, 59, 67, 79, 81, 180, 188, 219, 221, 223, 225, 363, 364, 373, 394], "veloc": [42, 235, 353, 372], "ver": 0, "verbos": [104, 105, 363, 378, 380], "veri": [44, 254, 300, 355, 361, 362, 366, 369, 372, 378, 388, 391, 392, 393, 394], "verif": 354, "verifi": 5, "versa": [271, 324, 375], "version": [23, 44, 67, 70, 81, 84, 352, 359, 360, 368, 369, 372, 376, 387, 389, 391], "vertex": [40, 364], "vertic": 40, "via": [22, 98, 219, 369, 388, 394, 395], "vice": [271, 324, 375], "vildosola": 352, "visibli": 392, "visit": 367, "vkl": [37, 47, 76, 78], "vline": 359, "vmax": 359, "vmin": 359, "volt": 180, "volum": [180, 372], "vxc": [378, 391, 393], "w": [0, 247, 248, 266, 281, 293, 294, 301, 305, 314, 332, 333, 336, 347, 348, 361, 366, 370], "w90": [215, 365], "w90_convert": 0, "w90_seed": [221, 223], "w90_zero": [216, 218], "w90zero": [207, 208], "w_i": [225, 363], "w_it": [386, 388], "w_j": [225, 363], "wa": [0, 23, 24, 333, 361, 362, 363, 366, 387, 389, 393, 394], "wai": [0, 254, 300, 346, 352, 353, 355, 360, 369, 371, 372, 393], "wait": [354, 369, 388], "wancharg": 364, "wanind": 364, "wann": [301, 305, 321, 332, 333, 361], "wannier": [0, 208, 217, 219, 221, 225, 226, 301, 305, 321, 332, 333, 352, 354, 355, 361, 363, 364, 366, 367, 369, 371, 372, 373, 377, 394, 395], "wannier90": [358, 368, 373, 374, 395], "wannier90convert": 363, "wannier_hk": [215, 219], "wannier_hr": [216, 219, 221, 226], "wannier_hr0": 218, "wannier_hr_spin": 225, "wannier_se": [224, 225], "wannierberri": 0, "wanproj": [364, 371, 394], "wanproj_l": [55, 364], "wansf_l": 364, "want": [22, 346, 362, 364, 366, 367, 369, 372, 373, 375, 380, 391, 392, 393, 394], "warn": [0, 8, 9, 120, 126, 146, 154, 206, 215, 216, 257, 270, 272, 304, 323, 325, 363, 371, 383, 387, 389, 391, 392], "warranti": 352, "wave": [353, 381, 388], "wavecar": 369, "wavefunct": [368, 369], "wde": 366, "we": [0, 133, 135, 206, 222, 352, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 378, 383, 388, 391, 392, 393, 394, 395], "websit": [364, 375], "wee": 362, "weight": [0, 89, 95, 100, 179, 183, 213, 225, 355, 363, 364, 366, 368, 373, 395], "weights_in_fil": 89, "well": [0, 353, 354, 364, 366, 368, 369, 373, 376, 378, 380, 388, 394], "wentzel": 0, "were": [246, 292, 360, 363, 378], "what": [23, 24, 358, 362, 367, 368, 369, 388, 391, 392], "when": [0, 2, 4, 8, 9, 12, 70, 84, 100, 247, 248, 281, 293, 294, 336, 346, 353, 358, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 375, 391, 392], "whenev": 368, "where": [2, 22, 135, 138, 219, 256, 301, 303, 332, 333, 343, 349, 353, 355, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 378, 388, 391, 392, 395], "wherea": [351, 354, 361, 373, 391], "whether": [2, 5, 6, 7, 8, 9, 234, 244, 246, 249, 281, 290, 292, 295, 336, 347, 351, 362, 364, 366, 367, 373, 378], "which": [0, 2, 6, 7, 10, 12, 13, 117, 133, 135, 199, 200, 202, 219, 224, 234, 241, 243, 246, 247, 248, 255, 257, 266, 267, 270, 272, 281, 284, 289, 292, 293, 294, 301, 302, 304, 305, 314, 315, 316, 321, 323, 325, 332, 333, 336, 339, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 378, 388, 391, 392, 393, 394, 395], "while": [0, 360, 363, 366, 378], "who": 353, "whole": [2, 369, 388, 393], "whose": [2, 366], "why": [365, 369], "wien2k": [0, 44, 247, 254, 293, 300, 301, 305, 319, 321, 332, 352, 353, 354, 358, 361, 365, 368, 373, 374, 379, 380, 394, 395], "wien2k_src_fil": 375, "wien2kconvert": [355, 367, 372, 379, 380, 391, 392, 393], "wien2ki": 380, "wiki": [366, 369, 388], "window": [0, 38, 42, 107, 108, 121, 129, 131, 136, 139, 148, 156, 199, 206, 223, 232, 235, 281, 305, 332, 333, 336, 361, 363, 364, 366, 367, 371, 372, 373, 378, 381, 388, 391, 392, 393, 394, 395], "wish": [364, 394], "with_dc": [257, 266, 281, 301, 304, 305, 314, 318, 319, 332, 333, 336, 361], "with_sigma": [257, 266, 281, 301, 304, 305, 314, 318, 319, 332, 333, 336, 361, 372], "within": [23, 24, 121, 131, 135, 136, 139, 248, 281, 294, 301, 332, 333, 336, 354, 359, 361, 363, 364, 366, 367, 369, 370, 372, 378, 388, 395], "without": [2, 301, 305, 318, 319, 332, 333, 352, 353, 354, 361, 362, 366, 371, 373, 378, 391, 392, 393, 395], "word": 369, "work": [182, 185, 190, 206, 254, 300, 352, 353, 354, 355, 359, 363, 364, 366, 367, 368, 369, 370, 371, 388, 392, 393, 394], "would": [23, 24, 206, 281, 336, 352, 363, 364, 365, 366, 371, 393, 394], "wout": [206, 363], "wrapper": 375, "write": [2, 118, 137, 247, 293, 349, 355, 358, 363, 364, 366, 367, 369, 373, 380, 391, 392, 393, 394], "write_hr": 363, "write_to_blockstructur": [249, 295], "write_u_matric": 363, "written": [186, 206, 208, 247, 249, 293, 295, 353, 355, 359, 364, 366, 368, 369, 372, 373, 378, 395], "wsqr": 347, "x": [23, 138, 220, 225, 301, 352, 358, 361, 363, 366, 367, 371, 372, 373, 375, 378, 391, 392, 393], "x1b": [159, 160, 161, 162, 163, 164], "x2": 366, "xc": 353, "xml": 366, "xtick": 359, "xx": 372, "xy": [301, 361, 363, 391], "xy_dn": 220, "xy_up": 220, "xz": [363, 391], "xz_dn": 220, "xz_up": 220, "y": [69, 70, 83, 84, 220, 301, 359, 361, 363, 372, 375, 378, 391, 392, 393], "y2": [366, 395], "ye": 367, "yet": [0, 117, 362, 364, 366], "yield": [31, 49, 50, 51, 91, 203, 211, 237, 362], "ylabel": 359, "ylmrot": [65, 80], "ylmroti": [65, 80], "you": [12, 14, 22, 23, 24, 125, 346, 352, 355, 358, 359, 360, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 386, 391, 392, 393, 394, 395], "your": [0, 354, 361, 363, 364, 365, 367, 369, 370, 372, 375, 376, 378, 388, 393, 394], "yourdftdmftcalcul": 370, "yourself": 368, "ytick": 359, "yz": [363, 391], "yz_dn": 220, "yz_up": 220, "z": [220, 256, 303, 359, 361, 363, 378, 391, 392, 393], "zero": [5, 8, 9, 12, 13, 217, 360, 362, 364, 371, 373, 391, 392, 393], "zingl": [0, 352], "zmax": 359, "zmin": 359, "zone": [241, 257, 304, 355, 361, 364, 367, 372, 373, 378, 391, 393], "zurich": 206}, "titles": ["Changelog", "block_structure", "triqs_dft_tools.block_structure.BlockStructure", "triqs_dft_tools.block_structure.BlockStructure.__init__", "triqs_dft_tools.block_structure.BlockStructure.adapt_deg_shells", "triqs_dft_tools.block_structure.BlockStructure.approximate_as_diagonal", "triqs_dft_tools.block_structure.BlockStructure.check_gf", "triqs_dft_tools.block_structure.BlockStructure.check_matrix", "triqs_dft_tools.block_structure.BlockStructure.convert_gf", "triqs_dft_tools.block_structure.BlockStructure.convert_matrix", "triqs_dft_tools.block_structure.BlockStructure.convert_operator", "triqs_dft_tools.block_structure.BlockStructure.copy", "triqs_dft_tools.block_structure.BlockStructure.create_gf", "triqs_dft_tools.block_structure.BlockStructure.create_matrix", "triqs_dft_tools.block_structure.BlockStructure.effective_transformation_solver", "triqs_dft_tools.block_structure.BlockStructure.effective_transformation_sumk", "triqs_dft_tools.block_structure.BlockStructure.full_structure", "triqs_dft_tools.block_structure.BlockStructure.gf_struct_solver_dict", "triqs_dft_tools.block_structure.BlockStructure.gf_struct_solver_list", "triqs_dft_tools.block_structure.BlockStructure.gf_struct_sumk_dict", "triqs_dft_tools.block_structure.BlockStructure.gf_struct_sumk_list", "triqs_dft_tools.block_structure.BlockStructure.inequiv_to_corr", "triqs_dft_tools.block_structure.BlockStructure.map_gf_struct_solver", "triqs_dft_tools.block_structure.BlockStructure.pick_gf_struct_solver", "triqs_dft_tools.block_structure.BlockStructure.pick_gf_struct_sumk", "triqs_dft_tools.block_structure.BlockStructure.sumk_to_solver_block", "converters", "converter_tools", "triqs_dft_tools.converters.converter_tools.ConverterTools", "triqs_dft_tools.converters.converter_tools.ConverterTools.__init__", "triqs_dft_tools.converters.converter_tools.ConverterTools.det_shell_equivalence", "triqs_dft_tools.converters.converter_tools.ConverterTools.read_fortran_file", "triqs_dft_tools.converters.converter_tools.ConverterTools.repack", "elk", "triqs_dft_tools.converters.elk.ElkConverter", "triqs_dft_tools.converters.elk.ElkConverter.__init__", "triqs_dft_tools.converters.elk.ElkConverter.axangsu2", "triqs_dft_tools.converters.elk.ElkConverter.bzfoldout", "triqs_dft_tools.converters.elk.ElkConverter.check_dens", "triqs_dft_tools.converters.elk.ElkConverter.convert_bands_input", "triqs_dft_tools.converters.elk.ElkConverter.convert_contours_input", "triqs_dft_tools.converters.elk.ElkConverter.convert_dft_input", "triqs_dft_tools.converters.elk.ElkConverter.convert_transport_input", "triqs_dft_tools.converters.elk.ElkConverter.det_shell_equivalence", "triqs_dft_tools.converters.elk.ElkConverter.determine_T", "triqs_dft_tools.converters.elk.ElkConverter.determine_rep", "triqs_dft_tools.converters.elk.ElkConverter.gen_perm", "triqs_dft_tools.converters.elk.ElkConverter.plotpt3d", "triqs_dft_tools.converters.elk.ElkConverter.read_eig", "triqs_dft_tools.converters.elk.ElkConverter.read_elk_file", "triqs_dft_tools.converters.elk.ElkConverter.read_elk_file2", "triqs_dft_tools.converters.elk.ElkConverter.read_fortran_file", "triqs_dft_tools.converters.elk.ElkConverter.read_geometry", "triqs_dft_tools.converters.elk.ElkConverter.read_kpoints", "triqs_dft_tools.converters.elk.ElkConverter.read_proj", "triqs_dft_tools.converters.elk.ElkConverter.read_projector", "triqs_dft_tools.converters.elk.ElkConverter.readlat", "triqs_dft_tools.converters.elk.ElkConverter.readsym", "triqs_dft_tools.converters.elk.ElkConverter.repack", "triqs_dft_tools.converters.elk.ElkConverter.rotaxang", "triqs_dft_tools.converters.elk.ElkConverter.rotsym", "triqs_dft_tools.converters.elk.ElkConverter.sort_dft_eigvalues", "triqs_dft_tools.converters.elk.ElkConverter.split_string", "triqs_dft_tools.converters.elk.ElkConverter.split_string2", "triqs_dft_tools.converters.elk.ElkConverter.split_string3", "triqs_dft_tools.converters.elk.ElkConverter.symlat_to_complex_harmonics", "triqs_dft_tools.converters.elk.ElkConverter.update_so_quatities", "triqs_dft_tools.converters.elk.ElkConverter.v3frac", "triqs_dft_tools.converters.elk.ElkConverter.ylmrot", "triqs_dft_tools.converters.elk.ElkConverter.ylmroty", "triqs_dft_tools.converters.elk.ElkConverter.zyz_euler", "elktools", "elk_converter_tools", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.__init__", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.axangsu2", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.bzfoldout", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.gen_perm", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.plotpt3d", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.rotaxang", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.symlat_to_complex_harmonics", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.v3frac", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.ylmrot", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.ylmroty", "triqs_dft_tools.converters.elktools.elk_converter_tools.ElkConverterTools.zyz_euler", "readElkfiles", "hk", "triqs_dft_tools.converters.hk.HkConverter", "triqs_dft_tools.converters.hk.HkConverter.__init__", "triqs_dft_tools.converters.hk.HkConverter.convert_dft_input", "triqs_dft_tools.converters.hk.HkConverter.det_shell_equivalence", "triqs_dft_tools.converters.hk.HkConverter.read_fortran_file", "triqs_dft_tools.converters.hk.HkConverter.repack", "plovasp", "atm", "triqs_dft_tools.converters.plovasp.atm.dos_tetra_weights_3d", "converter", "triqs_dft_tools.converters.plovasp.converter.generate_and_output_as_text", "triqs_dft_tools.converters.plovasp.converter.main", "elstruct", "triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure", "triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure.__init__", "triqs_dft_tools.converters.plovasp.elstruct.ElectronicStructure.debug_density_matrix", "inpconf", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.__init__", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.groups_shells_consistency", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_band_window", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_energy_window", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_file_tmatrix", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_general", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_groups", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_input", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_parameter_set", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_shells", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_dosmesh", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_int", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_ion_list", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_logical", "triqs_dft_tools.converters.plovasp.inpconf.ConfigParameters.parse_string_tmatrix", "triqs_dft_tools.converters.plovasp.inpconf.issue_warning", "plotools", "triqs_dft_tools.converters.plovasp.plotools.check_data_consistency", "triqs_dft_tools.converters.plovasp.plotools.ctrl_output", "triqs_dft_tools.converters.plovasp.plotools.generate_plo", "triqs_dft_tools.converters.plovasp.plotools.hk_output", "triqs_dft_tools.converters.plovasp.plotools.issue_warning", "triqs_dft_tools.converters.plovasp.plotools.kpoints_output", "triqs_dft_tools.converters.plovasp.plotools.output_as_text", "triqs_dft_tools.converters.plovasp.plotools.plo_output", "proj_group", "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup", "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.__init__", "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.calc_complement", "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.calc_hk", "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.get_block_matrix_map", "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.nelect_window", "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.orthogonalize", "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.orthogonalize_projector_matrix", "triqs_dft_tools.converters.plovasp.proj_group.ProjectorGroup.select_bands", "proj_shell", "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell", "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.__init__", "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.density_matrix", "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.density_of_states", "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.extract_projectors", "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.extract_tmatrices", "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.local_hamiltonian", "triqs_dft_tools.converters.plovasp.proj_shell.ComplementShell.select_projectors", "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell", "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.__init__", "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.density_matrix", "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.density_of_states", "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.extract_projectors", "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.extract_tmatrices", "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.local_hamiltonian", "triqs_dft_tools.converters.plovasp.proj_shell.ProjectorShell.select_projectors", "sc_dmft", "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors", "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.BLUE", "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.ENDC", "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.GREEN", "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.MAGENTA", "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.RED", "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.YELLOW", "triqs_dft_tools.converters.plovasp.sc_dmft.bcolors.__init__", "triqs_dft_tools.converters.plovasp.sc_dmft.excepthook", "triqs_dft_tools.converters.plovasp.sc_dmft.get_dft_energy", "triqs_dft_tools.converters.plovasp.sc_dmft.is_vasp_lock_present", "triqs_dft_tools.converters.plovasp.sc_dmft.is_vasp_running", "triqs_dft_tools.converters.plovasp.sc_dmft.main", "triqs_dft_tools.converters.plovasp.sc_dmft.run_all", "triqs_dft_tools.converters.plovasp.sc_dmft.sigint_handler", "vaspio", "triqs_dft_tools.converters.plovasp.vaspio.Doscar", "triqs_dft_tools.converters.plovasp.vaspio.Doscar.__init__", "triqs_dft_tools.converters.plovasp.vaspio.Doscar.from_file", "triqs_dft_tools.converters.plovasp.vaspio.Eigenval", "triqs_dft_tools.converters.plovasp.vaspio.Eigenval.__init__", "triqs_dft_tools.converters.plovasp.vaspio.Eigenval.from_file", "triqs_dft_tools.converters.plovasp.vaspio.Kpoints", "triqs_dft_tools.converters.plovasp.vaspio.Kpoints.__init__", "triqs_dft_tools.converters.plovasp.vaspio.Kpoints.from_file", "triqs_dft_tools.converters.plovasp.vaspio.Plocar", "triqs_dft_tools.converters.plovasp.vaspio.Plocar.__init__", "triqs_dft_tools.converters.plovasp.vaspio.Plocar.from_file", "triqs_dft_tools.converters.plovasp.vaspio.Plocar.locproj_parser", "triqs_dft_tools.converters.plovasp.vaspio.Plocar.search_for", "triqs_dft_tools.converters.plovasp.vaspio.Poscar", "triqs_dft_tools.converters.plovasp.vaspio.Poscar.__init__", "triqs_dft_tools.converters.plovasp.vaspio.Poscar.from_file", "triqs_dft_tools.converters.plovasp.vaspio.VaspData", "triqs_dft_tools.converters.plovasp.vaspio.VaspData.__init__", "triqs_dft_tools.converters.plovasp.vaspio.read_lines", "triqs_dft_tools.converters.plovasp.vaspio.read_symmcar", "vasp", "triqs_dft_tools.converters.vasp.VaspConverter", "triqs_dft_tools.converters.vasp.VaspConverter.__init__", "triqs_dft_tools.converters.vasp.VaspConverter.convert_dft_input", "triqs_dft_tools.converters.vasp.VaspConverter.convert_misc_input", "triqs_dft_tools.converters.vasp.VaspConverter.convert_symmetry_input", "triqs_dft_tools.converters.vasp.VaspConverter.det_shell_equivalence", "triqs_dft_tools.converters.vasp.VaspConverter.read_data", "triqs_dft_tools.converters.vasp.VaspConverter.read_fortran_file", "triqs_dft_tools.converters.vasp.VaspConverter.read_header_and_data", "triqs_dft_tools.converters.vasp.VaspConverter.repack", "wannier90", "triqs_dft_tools.converters.wannier90.Wannier90Converter", "triqs_dft_tools.converters.wannier90.Wannier90Converter.__init__", "triqs_dft_tools.converters.wannier90.Wannier90Converter.convert_dft_input", "triqs_dft_tools.converters.wannier90.Wannier90Converter.det_shell_equivalence", "triqs_dft_tools.converters.wannier90.Wannier90Converter.read_fortran_file", "triqs_dft_tools.converters.wannier90.Wannier90Converter.repack", "triqs_dft_tools.converters.wannier90.build_kmesh", "triqs_dft_tools.converters.wannier90.check_and_adapt_for_soc", "triqs_dft_tools.converters.wannier90.check_bloch_basis_hk", "triqs_dft_tools.converters.wannier90.check_hr", "triqs_dft_tools.converters.wannier90.check_wannier_basis_hk", "triqs_dft_tools.converters.wannier90.find_rot_mat", "triqs_dft_tools.converters.wannier90.fourier_transform_hamiltonian", "triqs_dft_tools.converters.wannier90.generate_local_so_matrix_t2g", "triqs_dft_tools.converters.wannier90.read_all_wannier90_data", "triqs_dft_tools.converters.wannier90.read_input_file", "triqs_dft_tools.converters.wannier90.read_misc_input", "triqs_dft_tools.converters.wannier90.read_wannier90_blochbasis_data", "triqs_dft_tools.converters.wannier90.read_wannier90_hr_data", "triqs_dft_tools.converters.wannier90.reorder_orbital_and_spin", "wien2k", "triqs_dft_tools.converters.wien2k.Wien2kConverter", "triqs_dft_tools.converters.wien2k.Wien2kConverter.__init__", "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_bands_input", "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_dft_input", "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_misc_input", "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_parproj_input", "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_symmetry_input", "triqs_dft_tools.converters.wien2k.Wien2kConverter.convert_transport_input", "triqs_dft_tools.converters.wien2k.Wien2kConverter.det_shell_equivalence", "triqs_dft_tools.converters.wien2k.Wien2kConverter.read_fortran_file", "triqs_dft_tools.converters.wien2k.Wien2kConverter.repack", "sumk_dft", "triqs_dft_tools.sumk_dft.SumkDFT", "triqs_dft_tools.sumk_dft.SumkDFT.__init__", "triqs_dft_tools.sumk_dft.SumkDFT.add_dc", "triqs_dft_tools.sumk_dft.SumkDFT.analyse_block_structure", "triqs_dft_tools.sumk_dft.SumkDFT.analyse_block_structure_from_gf", "triqs_dft_tools.sumk_dft.SumkDFT.analyse_deg_shells", "triqs_dft_tools.sumk_dft.SumkDFT.calc_dc", "triqs_dft_tools.sumk_dft.SumkDFT.calc_density_correction", "triqs_dft_tools.sumk_dft.SumkDFT.calc_mu", "triqs_dft_tools.sumk_dft.SumkDFT.calculate_diagonalization_matrix", "triqs_dft_tools.sumk_dft.SumkDFT.calculate_min_max_band_energies", "triqs_dft_tools.sumk_dft.SumkDFT.check_projectors", "triqs_dft_tools.sumk_dft.SumkDFT.corr_to_inequiv", "triqs_dft_tools.sumk_dft.SumkDFT.deg_shells", "triqs_dft_tools.sumk_dft.SumkDFT.density_matrix", "triqs_dft_tools.sumk_dft.SumkDFT.downfold", "triqs_dft_tools.sumk_dft.SumkDFT.eff_atomic_levels", "triqs_dft_tools.sumk_dft.SumkDFT.extract_G_loc", "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver", "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver_dict", "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_solver_list", "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk", "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk_dict", "triqs_dft_tools.sumk_dft.SumkDFT.gf_struct_sumk_list", "triqs_dft_tools.sumk_dft.SumkDFT.inequiv_to_corr", "triqs_dft_tools.sumk_dft.SumkDFT.init_dc", "triqs_dft_tools.sumk_dft.SumkDFT.lattice_gf", "triqs_dft_tools.sumk_dft.SumkDFT.load", "triqs_dft_tools.sumk_dft.SumkDFT.number_of_atoms", "triqs_dft_tools.sumk_dft.SumkDFT.put_Sigma", "triqs_dft_tools.sumk_dft.SumkDFT.read_input_from_hdf", "triqs_dft_tools.sumk_dft.SumkDFT.rotloc", "triqs_dft_tools.sumk_dft.SumkDFT.save", "triqs_dft_tools.sumk_dft.SumkDFT.set_Sigma", "triqs_dft_tools.sumk_dft.SumkDFT.set_dc", "triqs_dft_tools.sumk_dft.SumkDFT.set_mu", "triqs_dft_tools.sumk_dft.SumkDFT.solver_to_sumk", "triqs_dft_tools.sumk_dft.SumkDFT.solver_to_sumk_block", "triqs_dft_tools.sumk_dft.SumkDFT.sorts_of_atoms", "triqs_dft_tools.sumk_dft.SumkDFT.sumk_to_solver", "triqs_dft_tools.sumk_dft.SumkDFT.symm_deg_gf", "triqs_dft_tools.sumk_dft.SumkDFT.total_density", "triqs_dft_tools.sumk_dft.SumkDFT.transform_to_solver_blocks", "triqs_dft_tools.sumk_dft.SumkDFT.transform_to_sumk_blocks", "triqs_dft_tools.sumk_dft.SumkDFT.upfold", "sumk_dft_tools", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.__init__", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.add_dc", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_block_structure", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_block_structure_from_gf", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.analyse_deg_shells", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_dc", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_density_correction", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calc_mu", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calculate_diagonalization_matrix", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.calculate_min_max_band_energies", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.check_projectors", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.corr_to_inequiv", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.deg_shells", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.density_matrix", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.density_of_states", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.downfold", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.eff_atomic_levels", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.extract_G_loc", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gen_Akw", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver_dict", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_solver_list", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk_dict", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.gf_struct_sumk_list", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.inequiv_to_corr", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.init_dc", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.lattice_gf", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.load", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.load_parproj", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.number_of_atoms", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.occupations", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.partial_charges", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.print_hamiltonian", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.proj_type_G_loc", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.put_Sigma", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.read_input_from_hdf", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.rotloc", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.save", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_Sigma", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_dc", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.set_mu", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.solver_to_sumk", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.solver_to_sumk_block", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.sorts_of_atoms", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.spaghettis", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.spectral_contours", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.sumk_to_solver", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.symm_deg_gf", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.total_density", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.transform_to_solver_blocks", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.transform_to_sumk_blocks", "triqs_dft_tools.sumk_dft_tools.SumkDFTTools.upfold", "symmetry", "triqs_dft_tools.symmetry.Symmetry", "triqs_dft_tools.symmetry.Symmetry.__init__", "triqs_dft_tools.symmetry.Symmetry.symmetrize", "trans_basis", "triqs_dft_tools.trans_basis.TransBasis", "triqs_dft_tools.trans_basis.TransBasis.__init__", "triqs_dft_tools.trans_basis.TransBasis.calculate_diagonalisation_matrix", "triqs_dft_tools.trans_basis.TransBasis.rotate_gf", "triqs_dft_tools.trans_basis.TransBasis.write_trans_file", "util", "triqs_dft_tools.util.compute_DC_from_density", "About", "Introduction to DFT+DMFT", "What you should know", "Structure of <strong class=\"program\">DFTTools</strong>", "&lt;no title&gt;", "triqs_dft_tools", "Documentation", "Frequently-Asked Questions", "Automatic basis rotations in DFT+DMFT", "Tools for analysis", "Manipulating the Green\u2019s functions block structure", "Interface with Wannier90", "Interface with Elk", "A general H(k)", "Interface with VASP", "Interface with Wien2k", "Supported interfaces", "Full charge self-consistency", "Single-shot DFT+DMFT", "Spin-orbit coupled calculations (single-shot)", "Transport calculations", "standardized hdf5 structure", "DFTTools", "Installation", "Reporting issues", "Tutorials", "DFT+DMFT tutorial: Ce with Hubbard-I approximation", "Ce-gamma_DOS.py", "Ce-gamma.py", "INCAR", "KPOINTS", "NiO_local_lattice_GF.py", "POSCAR", "converter.py", "maxent.py", "nio.py", "DFT and projections", "nio_csc.py", "plo.cfg", "DFT (Wien2k) and Wannier orbitals", "DFT (Wien2k) and Wannier orbitals", "DFT (Wien2k) and Wannier orbitals", "Elk to TRIQS", "VASP setup"], "titleterms": {"": [362, 388], "0": 0, "1": [0, 374], "14": 375, "2": [0, 374, 375], "3": [0, 374], "4": 0, "A": [365, 377], "The": [355, 362, 391, 392, 393, 394], "__init__": [3, 29, 35, 74, 88, 101, 105, 132, 142, 150, 165, 175, 178, 181, 184, 189, 192, 197, 208, 229, 241, 287, 342, 346], "about": 352, "adapt_deg_shel": 4, "add_dc": [242, 288], "advanc": 358, "after": 371, "all": 388, "almd": 359, "anaconda": 375, "analyse_block_structur": [243, 289], "analyse_block_structure_from_gf": [244, 290], "analyse_deg_shel": [245, 291], "analysi": [361, 378], "analyt": 354, "approxim": [362, 378], "approximate_as_diagon": 5, "ask": 359, "atm": [94, 95], "author": 352, "automat": [360, 391, 392], "axangsu2": [36, 75], "axi": 388, "band": [359, 361, 363], "basi": [360, 362, 377, 391, 392], "basic": 358, "bcolor": [158, 159, 160, 161, 162, 163, 164, 165], "block": 362, "block_structur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "blockstructur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "blue": 159, "build_kmesh": 213, "bzfoldout": [37, 76], "calc_compl": 133, "calc_dc": [246, 292], "calc_density_correct": [247, 293], "calc_hk": 134, "calc_mu": [248, 294], "calcul": [355, 367, 370, 371, 372, 375, 378, 391, 392, 393, 394], "calculate_diagonalisation_matrix": 347, "calculate_diagonalization_matrix": [249, 295], "calculate_min_max_band_energi": [250, 296], "case": 359, "ce": [377, 378, 379, 380], "cfg": 390, "chang": 0, "changelog": 0, "charg": [353, 355, 361, 369, 377, 378, 388, 394], "check_and_adapt_for_soc": 214, "check_bloch_basis_hk": 215, "check_data_consist": 122, "check_den": 38, "check_gf": 6, "check_hr": 216, "check_matrix": 7, "check_projector": [251, 297], "check_wannier_basis_hk": 217, "clean": 0, "cmake": [0, 375], "code": [369, 372], "compat": 375, "compil": 375, "complementshel": [141, 142, 143, 144, 145, 146, 147, 148], "complex": 377, "compute_dc_from_dens": 351, "configparamet": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "consist": [353, 355, 364, 366, 367, 369, 377, 378, 388, 394], "construct": 358, "continu": 354, "contour": [361, 364], "convers": [364, 366, 367], "convert": [0, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 366, 373, 377, 385, 388, 395], "convert_bands_input": [39, 230], "convert_contours_input": 40, "convert_dft_input": [41, 89, 198, 209, 231], "convert_gf": 8, "convert_matrix": 9, "convert_misc_input": [199, 232], "convert_oper": 10, "convert_parproj_input": 233, "convert_symmetry_input": [200, 234], "convert_transport_input": [42, 235], "converter_tool": [27, 28, 29, 30, 31, 32], "convertertool": [28, 29, 30, 31, 32], "copi": 11, "corr_to_inequiv": [252, 298], "correl": 364, "coupl": 371, "creat": 362, "create_gf": 12, "create_matrix": 13, "cthyb": 354, "ctrl_output": 123, "current": 363, "custom": 375, "cycl": [364, 366, 367, 393, 394], "data": [364, 367, 373, 378], "debian": 375, "debug_density_matrix": 102, "deg_shel": [253, 299], "densiti": [353, 361], "density_matrix": [143, 151, 254, 300], "density_of_st": [144, 152, 301], "depend": [0, 364], "det_shell_equival": [30, 43, 90, 201, 210, 236], "detail": 366, "determine_rep": 45, "determine_t": 44, "dft": [353, 358, 360, 364, 369, 370, 371, 375, 378, 388, 391, 392, 393, 394], "dfttool": [354, 355, 374, 375], "diagon": 362, "disclaim": 352, "dmft": [353, 355, 358, 360, 364, 366, 367, 370, 375, 378, 388, 391, 392, 393, 394], "dmftproj": [369, 378], "do": [359, 370], "docker": 375, "document": [0, 358], "doe": 359, "dos_tetra_weights_3d": 95, "doscar": [174, 175, 176], "downfold": [255, 302], "dure": 360, "eff_atomic_level": [256, 303], "effective_transformation_solv": 14, "effective_transformation_sumk": 15, "eigenv": [177, 178, 179], "electronicstructur": [100, 101, 102], "elk": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 364, 369, 371, 372, 377, 394], "elk_converter_tool": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "elkconvert": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "elkconvertertool": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "elktool": [71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "elstruct": [99, 100, 101, 102], "endc": 160, "energi": [361, 364], "error": 359, "exampl": [372, 377], "excepthook": 166, "execut": 355, "experiment": 375, "extract_g_loc": [257, 304], "extract_projector": [145, 153], "extract_tmatric": [146, 154], "faq": 358, "fcsc": 375, "fermi": [359, 364], "file": [359, 366, 388, 395], "find": 360, "find_rot_mat": 218, "fit": 393, "formal": 372, "format": [366, 373], "fourier_transform_hamiltonian": 219, "frequenc": [359, 361], "frequent": 359, "from": [353, 358, 360, 364, 372, 375], "from_fil": [176, 179, 182, 185, 190], "full": [353, 355, 369, 377], "full_structur": 16, "fulli": [378, 394], "function": [353, 361, 362, 364, 388], "gamma": [377, 380], "gamma_do": 379, "gen_akw": 305, "gen_perm": [46, 77], "gener": [0, 355, 365, 366, 371, 373], "generate_and_output_as_text": 97, "generate_local_so_matrix_t2g": 220, "generate_plo": 124, "get": 359, "get_block_matrix_map": 135, "get_dft_energi": 167, "gf_struct": 0, "gf_struct_solv": [258, 306], "gf_struct_solver_dict": [17, 259, 307], "gf_struct_solver_list": [18, 260, 308], "gf_struct_sumk": [261, 309], "gf_struct_sumk_dict": [19, 262, 310], "gf_struct_sumk_list": [20, 263, 311], "green": [161, 362, 388], "group": [366, 373], "groups_shells_consist": 106, "guid": 366, "h": [365, 373], "hamiltonian": [391, 392], "hdf5": [373, 388, 395], "hk": [86, 87, 88, 89, 90, 91, 92], "hk_output": 125, "hkconvert": [87, 88, 89, 90, 91, 92], "how": [354, 359], "hubbard": 378, "i": [354, 359, 378], "import": 375, "impur": 370, "incar": 381, "inequiv_to_corr": [21, 264, 312], "init_dc": [265, 313], "initi": [360, 370, 393, 394], "initialis": 361, "inpconf": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "inpconfig": 103, "input": [364, 366], "instal": 375, "interact": [391, 392], "interfac": [355, 363, 364, 366, 367, 368, 377], "introduct": 353, "is_vasp_lock_pres": 168, "is_vasp_run": 169, "issu": [368, 376], "issue_warn": [120, 126], "k": [361, 365, 373], "know": 354, "kpoint": [180, 181, 182, 382], "kpoints_output": 127, "lapw2": 359, "lattic": 388, "lattice_gf": [266, 314], "layer": 355, "learn": 354, "librari": 354, "licens": 352, "limit": [363, 366], "load": [267, 315, 393, 394], "load_parproj": 316, "local": [358, 388], "local_hamiltonian": [147, 155], "locproj_pars": 186, "loop": [360, 370, 391, 392], "magenta": 162, "magnet": 377, "main": [98, 170, 373], "manag": 0, "manipul": 362, "manual": 358, "map_gf_struct_solv": 22, "matric": [361, 366], "matrix": [360, 363], "maxent": [386, 388], "mix": 370, "mode": 363, "modul": [393, 394], "momentum": 361, "mpi": 368, "nelect_window": 136, "nio": [377, 387], "nio_csc": 389, "nio_local_lattice_gf": 383, "non": 377, "note": 375, "notion": 358, "number_of_atom": [268, 317], "nutshel": 353, "occup": 318, "older": 375, "oper": 373, "optic": [359, 372], "option": 375, "orbit": [358, 362, 363, 371, 378, 388, 391, 392, 393], "orthogon": 137, "orthogonalize_projector_matrix": 138, "other": [0, 368, 369], "output": [359, 366], "output_as_text": 128, "packag": [368, 372, 375], "paramet": 393, "parse_band_window": 107, "parse_energy_window": 108, "parse_file_tmatrix": 109, "parse_gener": 110, "parse_group": 111, "parse_input": 112, "parse_parameter_set": 113, "parse_shel": 114, "parse_string_dosmesh": 115, "parse_string_int": 116, "parse_string_ion_list": 117, "parse_string_log": 118, "parse_string_tmatrix": 119, "partial": 361, "partial_charg": 319, "perform": 371, "philosophi": 354, "pick": 362, "pick_gf_struct_solv": 23, "pick_gf_struct_sumk": 24, "plo": 390, "plo_output": 129, "plocar": [183, 184, 185, 186, 187], "plot": [359, 364], "plotool": [121, 122, 123, 124, 125, 126, 127, 128, 129], "plotpt3d": [47, 78], "plovasp": [93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 366, 369, 388, 395], "pmat": 359, "poscar": [188, 189, 190, 384], "post": [355, 364, 367, 378], "postprocess": 358, "prequisit": 372, "prerequisit": [372, 375], "print_hamiltonian": 320, "process": [355, 364, 367, 378], "proj_group": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "proj_shel": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "proj_type_g_loc": 321, "project": [353, 371, 388], "projector": [366, 371], "projectorgroup": [131, 132, 133, 134, 135, 136, 137, 138, 139], "projectorshel": [149, 150, 151, 152, 153, 154, 155, 156], "put_sigma": [269, 322], "py": [379, 380, 383, 385, 386, 387, 389], "python": 355, "qe": 0, "quantiti": [359, 364], "question": 359, "quotat": 352, "raw": 366, "read_all_wannier90_data": 221, "read_data": 202, "read_eig": 48, "read_elk_fil": 49, "read_elk_file2": 50, "read_fortran_fil": [31, 51, 91, 203, 211, 237], "read_geometri": 52, "read_header_and_data": 204, "read_input_fil": 222, "read_input_from_hdf": [270, 323], "read_kpoint": 53, "read_lin": 193, "read_misc_input": 223, "read_proj": 54, "read_projector": 55, "read_symmcar": 194, "read_wannier90_blochbasis_data": 224, "read_wannier90_hr_data": 225, "readelkfil": 85, "readlat": 56, "readsym": 57, "real": [359, 361, 388], "red": 163, "refer": [358, 372], "remark": 366, "reorder_orbital_and_spin": 226, "repack": [32, 58, 92, 205, 212, 238], "report": 376, "resolv": 361, "restart": 370, "restructur": 0, "rotat": [360, 362, 363, 377, 391, 392], "rotate_gf": 348, "rotaxang": [59, 79], "rotloc": [271, 324], "rotsym": 60, "run": [359, 366], "run_al": 171, "save": [272, 325], "sc_dmft": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "script": [355, 388], "search_for": 187, "section": 366, "select_band": 139, "select_projector": [148, 156], "self": [353, 355, 361, 364, 366, 367, 369, 377, 378, 388, 394], "set": [360, 370], "set_dc": [274, 327], "set_mu": [275, 328], "set_sigma": [273, 326], "setup": [378, 388, 391, 392, 393, 395], "shell": 366, "shot": [370, 371], "should": 354, "sigint_handl": 172, "simpl": [373, 377], "sinc": 0, "singl": [370, 371], "small": 353, "soc": [371, 377], "solver": [354, 360, 362, 370, 393, 394], "solver_to_sumk": [276, 329], "solver_to_sumk_block": [277, 330], "sort_dft_eigvalu": 61, "sorts_of_atom": [278, 331], "sourc": 375, "spaghetti": [332, 359], "specif": 373, "spectral": [361, 364, 388], "spectral_contour": 333, "spin": 371, "split_str": 62, "split_string2": 63, "split_string3": 64, "sr2mgoso6": 377, "srvo3": 377, "standard": 373, "state": 361, "step": 375, "structur": [355, 360, 362, 373], "sumk_dft": [239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "sumk_dft_tool": [285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "sumk_to_solv": [279, 334], "sumk_to_solver_block": 25, "sumkdft": [240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 393, 394], "sumkdfttool": [286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "support": 368, "surfac": 364, "symlat_to_complex_harmon": [65, 80], "symm_deg_gf": [280, 335], "symmetr": 343, "symmetri": [340, 341, 342, 343, 373], "tail": 393, "theori": 353, "tool": 361, "topic": 358, "total_dens": [281, 336], "trans_basi": [344, 345, 346, 347, 348, 349], "transbasi": [345, 346, 347, 348, 349], "transform": [360, 366], "transform_to_solver_block": [282, 337], "transform_to_sumk_block": [283, 338], "transport": [367, 372], "treatment": 371, "triq": [354, 378, 394], "triqs_dft_tool": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 351, 357], "tutori": [377, 378], "ubuntu": 375, "understand": 354, "up": [360, 370], "update_so_quat": 66, "upfold": [284, 339], "us": [353, 354, 372, 375], "util": [350, 351], "v3frac": [67, 81], "vasp": [0, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 366, 369, 377, 388, 395], "vaspconvert": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "vaspdata": [191, 192], "vaspio": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "veri": 353, "version": [0, 366, 375], "w90": 0, "wannier": [353, 378, 391, 392, 393], "wannier90": [0, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 363], "wannier90convert": [207, 208, 209, 210, 211, 212], "wavefunct": 364, "what": 354, "when": 359, "wien2k": [227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 355, 359, 367, 369, 371, 372, 375, 377, 378, 391, 392, 393], "wien2kconvert": [228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "without": 377, "write": 359, "write_trans_fil": 349, "x": [0, 359], "yellow": 164, "ylmrot": [68, 82], "ylmroti": [69, 83], "you": 354, "your": 355, "zyz_eul": [70, 84]}})