{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5e85aaa7-6782-4629-84e0-71a6b7eaa505",
   "metadata": {
    "nbsphinx": "hidden"
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "%config InlineBackend.figure_format = 'svg'\n",
    "\n",
    "import warnings \n",
    "warnings.filterwarnings(\"ignore\") #ignore some matplotlib warnings\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "from mpi4py import MPI\n",
    "\n",
    "from triqs.plot.mpl_interface import plt, oplot, oplotr, oploti\n",
    "plt.rcParams[\"figure.figsize\"] = (6,4) # set default size for all figures"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e51b0091-8880-4691-9ad1-7cddcff025bd",
   "metadata": {},
   "source": [
    "# Step-by-step guide"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa879df5-ca9d-45fa-ae03-988074b80939",
   "metadata": {},
   "source": [
    "## Step 1 - Spawn solver instance\n",
    "\n",
    "The first step in using `soehyb` is to instantiate an instance of the `triqs_soehyb.Solver` class."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a210740f-d7db-4017-a81b-7ccd915f8758",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Warning: could not identify MPI environment!\n",
      "  ___      ___    _  ___   _____\n",
      " / __| ___| __|__| || \\ \\ / / _ )\n",
      " \\__ \\/ _ \\ _|___| __ |\\ V /| _ \\\n",
      " |___/\\___/___|  |_||_| |_| |___/  [github.com/TRIQS/soehyb]\n",
      "\n",
      "beta = 5.0, lamb = 2.50E+02, eps = 1.00E-08, N_DLR = 32\n",
      "fundamental_operators = [1*c('up',0), 1*c('up',1), 1*c('up',2), 1*c('do',0), 1*c('do',1), 1*c('do',2)]\n",
      "H_mat.shape = (64, 64)\n",
      "H_loc = 0\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Starting serial run at: 2025-08-19 11:38:46.470781\n"
     ]
    }
   ],
   "source": [
    "from triqs_soehyb import Solver   \n",
    "\n",
    "norb = 3\n",
    "\n",
    "S = Solver(\n",
    "    beta=5.0, \n",
    "    gf_struct=[('up', norb), ('do', norb)], \n",
    "    eps=1e-8, w_max=50.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b4605f0-84d6-493b-a012-688506faf2c1",
   "metadata": {},
   "source": [
    "The solver constructor takes the input\n",
    "\n",
    "- `beta`: inverse temperature\n",
    "- `gf_struct`: Green's function structure 1st index: name, 2nd index: dimension of subspace\n",
    "- `eps`: Accuracy of Discrete Lehmann Representation (DLR) used for imaginary time response functions\n",
    "- `w_max`: DLR freqiency cut-off (the spectrum of the model must be in the range `[-w_max, +w_max]`"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "549bb71a-f72c-47a5-9ba0-1f512be65465",
   "metadata": {},
   "source": [
    "## Step 2 - Impurity many-body Hamiltonian\n",
    "\n",
    "We also have to construct the local many-body Hamiltonian (`h_int`) of the Anderson impurity model we want to solve."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "534105f9-15b8-4631-af12-336fcfa9470e",
   "metadata": {},
   "source": [
    "### Examples\n",
    "\n",
    "- For the **single band Hubbard model** the interaction is density-density only and can be constructed using the Triqs second-quantization operators found in `triqs.operators.*`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a1eac349-5da2-4675-9659-417357d3d0f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-1*c_dag('do',0)*c('do',0) + -1*c_dag('up',0)*c('up',0) + 2*c_dag('do',0)*c_dag('up',0)*c('up',0)*c('do',0)\n"
     ]
    }
   ],
   "source": [
    "from triqs.operators import n\n",
    "\n",
    "U = 2.0\n",
    "mu = U / 2 # Chemical potential for half-filling\n",
    "h_int = U * n('up',0) * n('do', 0) - mu * ( n('up', 0) + n('do', 0) )\n",
    "\n",
    "print(h_int)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dedae90a-a720-47cf-b67c-5ae4482bf198",
   "metadata": {},
   "source": [
    "- For multi-orbital models one often use the **Kanamori interaction** which can be built using tools in `triqs.operators.util.*` as follows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f55b959b-4469-46d7-9d95-336acdc14e05",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.2*c_dag('do',0)*c_dag('do',1)*c('do',1)*c('do',0) + 2.2*c_dag('do',0)*c_dag('do',2)*c('do',2)*c('do',0) + 0.8*c_dag('do',0)*c_dag('up',0)*c('up',2)*c('do',2) + 0.8*c_dag('do',0)*c_dag('up',0)*c('up',1)*c('do',1) + 4.6*c_dag('do',0)*c_dag('up',0)*c('up',0)*c('do',0) + 3*c_dag('do',0)*c_dag('up',1)*c('up',1)*c('do',0) + 0.8*c_dag('do',0)*c_dag('up',1)*c('up',0)*c('do',1) + 3*c_dag('do',0)*c_dag('up',2)*c('up',2)*c('do',0) + 0.8*c_dag('do',0)*c_dag('up',2)*c('up',0)*c('do',2) + 2.2*c_dag('do',1)*c_dag('do',2)*c('do',2)*c('do',1) + 0.8*c_dag('do',1)*c_dag('up',0)*c('up',1)*c('do',0) + 3*c_dag('do',1)*c_dag('up',0)*c('up',0)*c('do',1) + 0.8*c_dag('do',1)*c_dag('up',1)*c('up',2)*c('do',2) + 4.6*c_dag('do',1)*c_dag('up',1)*c('up',1)*c('do',1) + 0.8*c_dag('do',1)*c_dag('up',1)*c('up',0)*c('do',0) + 3*c_dag('do',1)*c_dag('up',2)*c('up',2)*c('do',1) + 0.8*c_dag('do',1)*c_dag('up',2)*c('up',1)*c('do',2) + 0.8*c_dag('do',2)*c_dag('up',0)*c('up',2)*c('do',0) + 3*c_dag('do',2)*c_dag('up',0)*c('up',0)*c('do',2) + 0.8*c_dag('do',2)*c_dag('up',1)*c('up',2)*c('do',1) + 3*c_dag('do',2)*c_dag('up',1)*c('up',1)*c('do',2) + 4.6*c_dag('do',2)*c_dag('up',2)*c('up',2)*c('do',2) + 0.8*c_dag('do',2)*c_dag('up',2)*c('up',1)*c('do',1) + 0.8*c_dag('do',2)*c_dag('up',2)*c('up',0)*c('do',0) + 2.2*c_dag('up',0)*c_dag('up',1)*c('up',1)*c('up',0) + 2.2*c_dag('up',0)*c_dag('up',2)*c('up',2)*c('up',0) + 2.2*c_dag('up',1)*c_dag('up',2)*c('up',2)*c('up',1)\n"
     ]
    }
   ],
   "source": [
    "spin_names = ['up', 'do']\n",
    "\n",
    "U = 4.6\n",
    "J = 0.8\n",
    "\n",
    "from triqs.operators.util.U_matrix import U_matrix_kanamori\n",
    "\n",
    "KanMat1, KanMat2 = U_matrix_kanamori(norb, U, J)\n",
    "\n",
    "from triqs.operators.util.hamiltonians import h_int_kanamori\n",
    "\n",
    "h_int = h_int_kanamori(spin_names, norb, KanMat1, KanMat2, J, off_diag=True)\n",
    "\n",
    "print(h_int)\n",
    "\n",
    "from itertools import product\n",
    "N = sum([ n(spin, idx) for spin, idx in product(spin_names, range(norb)) ])\n",
    "\n",
    "mu = 0.5*(5*U - 10*J)\n",
    "\n",
    "h_int -= mu * N"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "378098ff-7233-4434-9bec-9b75a31c6342",
   "metadata": {},
   "source": [
    "## Step 3 - Hybridization function\n",
    "\n",
    "To fully specify the Anderson impurity model we also have to supply the hybridization function $\\Delta(\\tau)$ that describes the retarded fluctuation of electrons to the environment. The solver instance `S` sets up the hybridization function container available as `S.Delta_tau` and we need to explicitly set its value."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff8a13fd-5eeb-46d1-9d5d-bf30825cf4af",
   "metadata": {},
   "source": [
    "### Examples\n",
    "\n",
    "Here is a simple example with a Hybridization function $\\Delta(\\tau)$ comprised of a **single discrete pole/state**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0ada854e-a4b4-491c-afbd-5540c6d91a25",
   "metadata": {},
   "outputs": [],
   "source": [
    "from triqs.gf import make_gf_dlr_imtime, make_gf_dlr_imfreq\n",
    "from triqs.gf import inverse, iOmega_n\n",
    "\n",
    "for bidx, delta_tau in S.Delta_tau:\n",
    "    delta_w = make_gf_dlr_imfreq(delta_tau)\n",
    "    delta_w << inverse(iOmega_n - 1.0)\n",
    "    delta_tau[:] = make_gf_dlr_imtime(delta_w)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ecac644-9fb2-43c0-b53d-8b26f055db75",
   "metadata": {},
   "source": [
    "Another common test case is a spin- and orbital-diagonal hybridzation function with a **semi-circular density of states**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d2e4b357-677c-4238-a60a-dc3497f16648",
   "metadata": {},
   "outputs": [],
   "source": [
    "from triqs.gf import make_gf_dlr_imtime, make_gf_dlr_imfreq, SemiCircular\n",
    "\n",
    "for bidx, delta_tau in S.Delta_tau:\n",
    "    delta_w = make_gf_dlr_imfreq(delta_tau)\n",
    "    delta_w << SemiCircular(2.0)\n",
    "    delta_tau[:] = make_gf_dlr_imtime(delta_w)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27ec122a-487d-490f-9762-16236168f559",
   "metadata": {},
   "source": [
    "## Step 4 - Self-consistent solution\n",
    "\n",
    "Combining the hybridization fucntion `S.Delta_tau` and the local many-body interaction `h_int` the Anderson impurity model is fully specified and we can call the `S.solve(...)` method to obtain the pseudo-particle self-consistent solution at a given expansion `order`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e7c57247-8d19-4244-a16e-d9096bc3ea82",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "AdaPol: Hybridization fit accuracy 1.31E-07, using 5 poles.\n",
      "(Order, N_Diags) = [(1, 1), (2, 60)]\n",
      "max_order = 2\n",
      "\n",
      " iter |   conv   |    Z-1    \n",
      "------+----------+-----------\n",
      "    1 | 1.95E-01 | +2.22E-16\n",
      "    2 | 3.68E-02 | +1.11E-15\n",
      "    3 | 2.64E-02 | +2.22E-16\n",
      "    4 | 3.25E-03 | -3.33E-16\n",
      "    5 | 1.83E-03 | -2.22E-16\n",
      "    6 | 6.63E-04 | +2.22E-16\n",
      "    7 | 6.22E-05 | +2.22E-16\n",
      "    8 | 6.54E-05 | -9.99E-16\n",
      "    9 | 1.34E-05 | +2.22E-16\n",
      "   10 | 3.23E-06 | +0.00E+00\n",
      "\n",
      "Timing:                               incl.     excl.\n",
      "------------------------------------------------------------\n",
      "Dyson equation:                      17.747    17.747   8.5% |--|\n",
      "Hybridization compression (AAA):      0.245     0.245   0.1% |\n",
      "Pseudo-particle self-energy:        171.026   171.026  82.3% |--------------------------------|\n",
      "Single particle Green's function:    15.046    15.046   7.2% |--|\n",
      "Other:                                3.631     3.631   1.7% ||\n",
      "------------------------------------------------------------\n",
      "Total:                                        207.696 100.0%\n",
      "\n"
     ]
    }
   ],
   "source": [
    "S.solve(h_int=h_int, order=2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bba188a4-d19d-477f-bdf0-b135f5c5d01a",
   "metadata": {},
   "source": [
    "## Step 5 - Single particle response function\n",
    "\n",
    "After convergence the solver computes the diagrammatic series for the single particle Green's function that is available as the member `S.G_tau` of the solver class instance `S`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "eeb420d4-fc66-436b-8f4a-483f35715ded",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Green Function G composed of 2 blocks: \n",
      " Greens Function G_up with mesh DLR imaginary time mesh of size 32 with beta = 5, statistics = Fermion, w_max = 50, eps = 1e-08 and target_shape (3, 3): \n",
      " \n",
      " Greens Function G_do with mesh DLR imaginary time mesh of size 32 with beta = 5, statistics = Fermion, w_max = 50, eps = 1e-08 and target_shape (3, 3): \n",
      " \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(S.G_tau)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83a9a807-d760-424b-a80f-1cb2c66ff1d0",
   "metadata": {},
   "source": [
    "## Step 6 - Store solver to disk\n",
    "\n",
    "The solver is hdf5 serializable and can be written to disk using the `h5` module."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "76b80b13-05a5-49c1-ae86-ed868d5c693a",
   "metadata": {},
   "outputs": [],
   "source": [
    "from h5 import HDFArchive\n",
    "\n",
    "filename = f'data_soehyb_result.h5'\n",
    "with HDFArchive(filename, 'w') as A: \n",
    "    A['S'] = S"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7c6ef11-3bcc-43d5-892e-f08389329da0",
   "metadata": {},
   "source": [
    "## Step 7 - Read result from disk\n",
    "\n",
    "For later visualization we can now read the solver and its data from disk."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "477ab542-bd45-4aa8-b3d2-1851e7d5ce3d",
   "metadata": {},
   "outputs": [],
   "source": [
    "with HDFArchive(filename, 'r') as A:\n",
    "        S = A['S']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c493ba7c-f201-467c-aa05-87cbe9b23db4",
   "metadata": {},
   "source": [
    "## Step 7 - Postprocessing and visualization \n",
    "\n",
    "The single particle Green's function can now be visualized using the standard Triqs plotting tools."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f202ea70-e583-4e8c-bb8d-6cf3564ad5fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       "  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"394.160937pt\" height=\"266.51625pt\" viewBox=\"0 0 394.160937 266.51625\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n",
       " <metadata>\n",
       "  <rdf:RDF xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n",
       "   <cc:Work>\n",
       "    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n",
       "    <dc:date>2025-08-19T11:42:14.759884</dc:date>\n",
       "    <dc:format>image/svg+xml</dc:format>\n",
       "    <dc:creator>\n",
       "     <cc:Agent>\n",
       "      <dc:title>Matplotlib v3.10.3, https://matplotlib.org/</dc:title>\n",
       "     </cc:Agent>\n",
       "    </dc:creator>\n",
       "   </cc:Work>\n",
       "  </rdf:RDF>\n",
       " </metadata>\n",
       " <defs>\n",
       "  <style type=\"text/css\">*{stroke-linejoin: round; stroke-linecap: butt}</style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <g id=\"patch_1\">\n",
       "   <path d=\"M 0 266.51625 \n",
       "L 394.160937 266.51625 \n",
       "L 394.160937 0 \n",
       "L 0 0 \n",
       "z\n",
       "\" style=\"fill: #ffffff\"/>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path d=\"M 52.160938 228.96 \n",
       "L 386.960938 228.96 \n",
       "L 386.960938 7.2 \n",
       "L 52.160938 7.2 \n",
       "z\n",
       "\" style=\"fill: #ffffff\"/>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\">\n",
       "    <g id=\"xtick_1\">\n",
       "     <g id=\"line2d_1\">\n",
       "      <defs>\n",
       "       <path id=\"m0676cccee2\" d=\"M 0 0 \n",
       "L 0 3.5 \n",
       "\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </defs>\n",
       "      <g>\n",
       "       <use xlink:href=\"#m0676cccee2\" x=\"67.367674\" y=\"228.96\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_1\">\n",
       "      <!-- 0 -->\n",
       "      <g transform=\"translate(64.186424 243.558437) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-30\" d=\"M 2034 4250 \n",
       "Q 1547 4250 1301 3770 \n",
       "Q 1056 3291 1056 2328 \n",
       "Q 1056 1369 1301 889 \n",
       "Q 1547 409 2034 409 \n",
       "Q 2525 409 2770 889 \n",
       "Q 3016 1369 3016 2328 \n",
       "Q 3016 3291 2770 3770 \n",
       "Q 2525 4250 2034 4250 \n",
       "z\n",
       "M 2034 4750 \n",
       "Q 2819 4750 3233 4129 \n",
       "Q 3647 3509 3647 2328 \n",
       "Q 3647 1150 3233 529 \n",
       "Q 2819 -91 2034 -91 \n",
       "Q 1250 -91 836 529 \n",
       "Q 422 1150 422 2328 \n",
       "Q 422 3509 836 4129 \n",
       "Q 1250 4750 2034 4750 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_2\">\n",
       "     <g id=\"line2d_2\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m0676cccee2\" x=\"128.24498\" y=\"228.96\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_2\">\n",
       "      <!-- 1 -->\n",
       "      <g transform=\"translate(125.06373 243.558437) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-31\" d=\"M 794 531 \n",
       "L 1825 531 \n",
       "L 1825 4091 \n",
       "L 703 3866 \n",
       "L 703 4441 \n",
       "L 1819 4666 \n",
       "L 2450 4666 \n",
       "L 2450 531 \n",
       "L 3481 531 \n",
       "L 3481 0 \n",
       "L 794 0 \n",
       "L 794 531 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_3\">\n",
       "     <g id=\"line2d_3\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m0676cccee2\" x=\"189.122285\" y=\"228.96\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_3\">\n",
       "      <!-- 2 -->\n",
       "      <g transform=\"translate(185.941035 243.558437) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-32\" d=\"M 1228 531 \n",
       "L 3431 531 \n",
       "L 3431 0 \n",
       "L 469 0 \n",
       "L 469 531 \n",
       "Q 828 903 1448 1529 \n",
       "Q 2069 2156 2228 2338 \n",
       "Q 2531 2678 2651 2914 \n",
       "Q 2772 3150 2772 3378 \n",
       "Q 2772 3750 2511 3984 \n",
       "Q 2250 4219 1831 4219 \n",
       "Q 1534 4219 1204 4116 \n",
       "Q 875 4013 500 3803 \n",
       "L 500 4441 \n",
       "Q 881 4594 1212 4672 \n",
       "Q 1544 4750 1819 4750 \n",
       "Q 2544 4750 2975 4387 \n",
       "Q 3406 4025 3406 3419 \n",
       "Q 3406 3131 3298 2873 \n",
       "Q 3191 2616 2906 2266 \n",
       "Q 2828 2175 2409 1742 \n",
       "Q 1991 1309 1228 531 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-32\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_4\">\n",
       "     <g id=\"line2d_4\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m0676cccee2\" x=\"249.99959\" y=\"228.96\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_4\">\n",
       "      <!-- 3 -->\n",
       "      <g transform=\"translate(246.81834 243.558437) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-33\" d=\"M 2597 2516 \n",
       "Q 3050 2419 3304 2112 \n",
       "Q 3559 1806 3559 1356 \n",
       "Q 3559 666 3084 287 \n",
       "Q 2609 -91 1734 -91 \n",
       "Q 1441 -91 1130 -33 \n",
       "Q 819 25 488 141 \n",
       "L 488 750 \n",
       "Q 750 597 1062 519 \n",
       "Q 1375 441 1716 441 \n",
       "Q 2309 441 2620 675 \n",
       "Q 2931 909 2931 1356 \n",
       "Q 2931 1769 2642 2001 \n",
       "Q 2353 2234 1838 2234 \n",
       "L 1294 2234 \n",
       "L 1294 2753 \n",
       "L 1863 2753 \n",
       "Q 2328 2753 2575 2939 \n",
       "Q 2822 3125 2822 3475 \n",
       "Q 2822 3834 2567 4026 \n",
       "Q 2313 4219 1838 4219 \n",
       "Q 1578 4219 1281 4162 \n",
       "Q 984 4106 628 3988 \n",
       "L 628 4550 \n",
       "Q 988 4650 1302 4700 \n",
       "Q 1616 4750 1894 4750 \n",
       "Q 2613 4750 3031 4423 \n",
       "Q 3450 4097 3450 3541 \n",
       "Q 3450 3153 3228 2886 \n",
       "Q 3006 2619 2597 2516 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-33\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_5\">\n",
       "     <g id=\"line2d_5\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m0676cccee2\" x=\"310.876895\" y=\"228.96\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_5\">\n",
       "      <!-- 4 -->\n",
       "      <g transform=\"translate(307.695645 243.558437) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-34\" d=\"M 2419 4116 \n",
       "L 825 1625 \n",
       "L 2419 1625 \n",
       "L 2419 4116 \n",
       "z\n",
       "M 2253 4666 \n",
       "L 3047 4666 \n",
       "L 3047 1625 \n",
       "L 3713 1625 \n",
       "L 3713 1100 \n",
       "L 3047 1100 \n",
       "L 3047 0 \n",
       "L 2419 0 \n",
       "L 2419 1100 \n",
       "L 313 1100 \n",
       "L 313 1709 \n",
       "L 2253 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-34\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_6\">\n",
       "     <g id=\"line2d_6\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m0676cccee2\" x=\"371.754201\" y=\"228.96\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_6\">\n",
       "      <!-- 5 -->\n",
       "      <g transform=\"translate(368.572951 243.558437) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-35\" d=\"M 691 4666 \n",
       "L 3169 4666 \n",
       "L 3169 4134 \n",
       "L 1269 4134 \n",
       "L 1269 2991 \n",
       "Q 1406 3038 1543 3061 \n",
       "Q 1681 3084 1819 3084 \n",
       "Q 2600 3084 3056 2656 \n",
       "Q 3513 2228 3513 1497 \n",
       "Q 3513 744 3044 326 \n",
       "Q 2575 -91 1722 -91 \n",
       "Q 1428 -91 1123 -41 \n",
       "Q 819 9 494 109 \n",
       "L 494 744 \n",
       "Q 775 591 1075 516 \n",
       "Q 1375 441 1709 441 \n",
       "Q 2250 441 2565 725 \n",
       "Q 2881 1009 2881 1497 \n",
       "Q 2881 1984 2565 2268 \n",
       "Q 2250 2553 1709 2553 \n",
       "Q 1456 2553 1204 2497 \n",
       "Q 953 2441 691 2322 \n",
       "L 691 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-35\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"text_7\">\n",
       "     <!-- $\\tau$ -->\n",
       "     <g transform=\"translate(216.510938 257.236562) scale(0.1 -0.1)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-Oblique-3c4\" d=\"M 2103 638 \n",
       "Q 2188 488 2525 488 \n",
       "L 2800 488 \n",
       "L 2706 0 \n",
       "L 2363 0 \n",
       "Q 1800 0 1600 300 \n",
       "Q 1403 606 1534 1269 \n",
       "L 1856 2925 \n",
       "L 541 2925 \n",
       "L 653 3500 \n",
       "L 3881 3500 \n",
       "L 3769 2925 \n",
       "L 2444 2925 \n",
       "L 2113 1234 \n",
       "Q 2025 781 2103 638 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-3c4\" transform=\"translate(0 0.3125)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_2\">\n",
       "    <g id=\"ytick_1\">\n",
       "     <g id=\"line2d_7\">\n",
       "      <defs>\n",
       "       <path id=\"m9af45bab3c\" d=\"M 0 0 \n",
       "L -3.5 0 \n",
       "\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </defs>\n",
       "      <g>\n",
       "       <use xlink:href=\"#m9af45bab3c\" x=\"52.160938\" y=\"219.010197\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_8\">\n",
       "      <!-- −0.5 -->\n",
       "      <g transform=\"translate(20.878125 222.809416) scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-2212\" d=\"M 678 2272 \n",
       "L 4684 2272 \n",
       "L 4684 1741 \n",
       "L 678 1741 \n",
       "L 678 2272 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "        <path id=\"DejaVuSans-2e\" d=\"M 684 794 \n",
       "L 1344 794 \n",
       "L 1344 0 \n",
       "L 684 0 \n",
       "L 684 794 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-2212\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" transform=\"translate(83.789062 0)\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" transform=\"translate(147.412109 0)\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-35\" transform=\"translate(179.199219 0)\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_2\">\n",
       "     <g id=\"line2d_8\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m9af45bab3c\" x=\"52.160938\" y=\"176.244926\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_9\">\n",
       "      <!-- −0.4 -->\n",
       "      <g transform=\"translate(20.878125 180.044144) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-2212\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" transform=\"translate(83.789062 0)\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" transform=\"translate(147.412109 0)\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-34\" transform=\"translate(179.199219 0)\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_3\">\n",
       "     <g id=\"line2d_9\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m9af45bab3c\" x=\"52.160938\" y=\"133.479654\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_10\">\n",
       "      <!-- −0.3 -->\n",
       "      <g transform=\"translate(20.878125 137.278873) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-2212\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" transform=\"translate(83.789062 0)\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" transform=\"translate(147.412109 0)\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-33\" transform=\"translate(179.199219 0)\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_4\">\n",
       "     <g id=\"line2d_10\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m9af45bab3c\" x=\"52.160938\" y=\"90.714382\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_11\">\n",
       "      <!-- −0.2 -->\n",
       "      <g transform=\"translate(20.878125 94.513601) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-2212\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" transform=\"translate(83.789062 0)\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" transform=\"translate(147.412109 0)\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-32\" transform=\"translate(179.199219 0)\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_5\">\n",
       "     <g id=\"line2d_11\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m9af45bab3c\" x=\"52.160938\" y=\"47.949111\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_12\">\n",
       "      <!-- −0.1 -->\n",
       "      <g transform=\"translate(20.878125 51.748329) scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-2212\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" transform=\"translate(83.789062 0)\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" transform=\"translate(147.412109 0)\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-31\" transform=\"translate(179.199219 0)\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"text_13\">\n",
       "     <!-- $G(\\tau)$ -->\n",
       "     <g transform=\"translate(14.798438 128.88) rotate(-90) scale(0.1 -0.1)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-Oblique-47\" d=\"M 3494 697 \n",
       "L 3738 1919 \n",
       "L 2700 1919 \n",
       "L 2797 2438 \n",
       "L 4453 2438 \n",
       "L 4050 384 \n",
       "Q 3634 156 3143 32 \n",
       "Q 2653 -91 2156 -91 \n",
       "Q 1278 -91 783 396 \n",
       "Q 288 884 288 1753 \n",
       "Q 288 2475 589 3126 \n",
       "Q 891 3778 1422 4213 \n",
       "Q 1756 4484 2153 4617 \n",
       "Q 2550 4750 3034 4750 \n",
       "Q 3472 4750 3873 4639 \n",
       "Q 4275 4528 4641 4306 \n",
       "L 4513 3634 \n",
       "Q 4231 3928 3853 4083 \n",
       "Q 3475 4238 3047 4238 \n",
       "Q 2550 4238 2172 4048 \n",
       "Q 1794 3859 1497 3463 \n",
       "Q 1244 3125 1098 2667 \n",
       "Q 953 2209 953 1734 \n",
       "Q 953 1081 1287 751 \n",
       "Q 1622 422 2284 422 \n",
       "Q 2616 422 2925 492 \n",
       "Q 3234 563 3494 697 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-28\" d=\"M 1984 4856 \n",
       "Q 1566 4138 1362 3434 \n",
       "Q 1159 2731 1159 2009 \n",
       "Q 1159 1288 1364 580 \n",
       "Q 1569 -128 1984 -844 \n",
       "L 1484 -844 \n",
       "Q 1016 -109 783 600 \n",
       "Q 550 1309 550 2009 \n",
       "Q 550 2706 781 3412 \n",
       "Q 1013 4119 1484 4856 \n",
       "L 1984 4856 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-29\" d=\"M 513 4856 \n",
       "L 1013 4856 \n",
       "Q 1481 4119 1714 3412 \n",
       "Q 1947 2706 1947 2009 \n",
       "Q 1947 1309 1714 600 \n",
       "Q 1481 -109 1013 -844 \n",
       "L 513 -844 \n",
       "Q 928 -128 1133 580 \n",
       "Q 1338 1288 1338 2009 \n",
       "Q 1338 2731 1133 3434 \n",
       "Q 928 4138 513 4856 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-47\" transform=\"translate(0 0.125)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-28\" transform=\"translate(77.490234 0.125)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-3c4\" transform=\"translate(116.503906 0.125)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-29\" transform=\"translate(176.708984 0.125)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"line2d_12\">\n",
       "    <defs>\n",
       "     <path id=\"m90dd4ee203\" d=\"M -3 3 \n",
       "L 3 -3 \n",
       "M -3 -3 \n",
       "L 3 3 \n",
       "\" style=\"stroke: #1f77b4\"/>\n",
       "    </defs>\n",
       "    <g clip-path=\"url(#p1cc285265b)\">\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"67.379119\" y=\"218.88\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"67.985664\" y=\"212.110823\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"68.996516\" y=\"201.380578\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"71.042717\" y=\"181.607012\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"73.204711\" y=\"163.242391\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"77.735831\" y=\"131.736561\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"80.726824\" y=\"115.144729\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"85.155853\" y=\"95.330412\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"90.715819\" y=\"76.590687\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"97.721849\" y=\"59.85126\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"106.590265\" y=\"45.855099\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"116.187592\" y=\"36.267228\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"132.692704\" y=\"27.033906\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"156.85375\" y=\"20.96069\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"174.240871\" y=\"18.911932\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"193.499465\" y=\"17.721519\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"229.448774\" y=\"17.28\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"250.337502\" y=\"17.936602\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"264.881004\" y=\"18.911932\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"293.30902\" y=\"23.076994\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"315.900355\" y=\"31.515565\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"327.011163\" y=\"39.810563\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"334.786309\" y=\"48.83738\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"347.344242\" y=\"73.626613\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"352.142905\" y=\"88.528967\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"355.987727\" y=\"103.748965\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"361.701909\" y=\"133.666347\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"365.917164\" y=\"163.242391\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"368.344611\" y=\"184.033894\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"370.125359\" y=\"201.380578\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"371.326162\" y=\"214.203341\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "     <use xlink:href=\"#m90dd4ee203\" x=\"371.742756\" y=\"218.88\" style=\"fill: #1f77b4; stroke: #1f77b4\"/>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path d=\"M 52.160938 228.96 \n",
       "L 52.160938 7.2 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path d=\"M 386.960938 228.96 \n",
       "L 386.960938 7.2 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path d=\"M 52.160938 228.96 \n",
       "L 386.960938 228.96 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path d=\"M 52.160938 7.2 \n",
       "L 386.960938 7.2 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"legend_1\">\n",
       "    <g id=\"patch_7\">\n",
       "     <path d=\"M 375.960938 20.2 \n",
       "L 379.960938 20.2 \n",
       "Q 381.960938 20.2 381.960938 18.2 \n",
       "L 381.960938 14.2 \n",
       "Q 381.960938 12.2 379.960938 12.2 \n",
       "L 375.960938 12.2 \n",
       "Q 373.960938 12.2 373.960938 14.2 \n",
       "L 373.960938 18.2 \n",
       "Q 373.960938 20.2 375.960938 20.2 \n",
       "z\n",
       "\" style=\"fill: #ffffff; opacity: 0.8; stroke: #cccccc; stroke-linejoin: miter\"/>\n",
       "    </g>\n",
       "   </g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p1cc285265b\">\n",
       "   <rect x=\"52.160938\" y=\"7.2\" width=\"334.8\" height=\"221.76\"/>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from triqs.plot.mpl_interface import plt, oplot, oplotr, oploti\n",
    "\n",
    "oplotr(S.G_tau['up'][0, 0], label=None)\n",
    "plt.ylabel(r'$G(\\tau)$');"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.17"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
